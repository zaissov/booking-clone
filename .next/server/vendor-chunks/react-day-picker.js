"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-day-picker";
exports.ids = ["vendor-chunks/react-day-picker"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-day-picker/dist/index.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/react-day-picker/dist/index.esm.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Button: () => (/* binding */ Button),\n/* harmony export */   Caption: () => (/* binding */ Caption),\n/* harmony export */   CaptionDropdowns: () => (/* binding */ CaptionDropdowns),\n/* harmony export */   CaptionLabel: () => (/* binding */ CaptionLabel),\n/* harmony export */   CaptionNavigation: () => (/* binding */ CaptionNavigation),\n/* harmony export */   Day: () => (/* binding */ Day),\n/* harmony export */   DayContent: () => (/* binding */ DayContent),\n/* harmony export */   DayPicker: () => (/* binding */ DayPicker),\n/* harmony export */   DayPickerContext: () => (/* binding */ DayPickerContext),\n/* harmony export */   DayPickerProvider: () => (/* binding */ DayPickerProvider),\n/* harmony export */   Dropdown: () => (/* binding */ Dropdown),\n/* harmony export */   FocusContext: () => (/* binding */ FocusContext),\n/* harmony export */   FocusProvider: () => (/* binding */ FocusProvider),\n/* harmony export */   Footer: () => (/* binding */ Footer),\n/* harmony export */   Head: () => (/* binding */ Head),\n/* harmony export */   HeadRow: () => (/* binding */ HeadRow),\n/* harmony export */   IconDropdown: () => (/* binding */ IconDropdown),\n/* harmony export */   IconLeft: () => (/* binding */ IconLeft),\n/* harmony export */   IconRight: () => (/* binding */ IconRight),\n/* harmony export */   InternalModifier: () => (/* binding */ InternalModifier),\n/* harmony export */   Months: () => (/* binding */ Months),\n/* harmony export */   NavigationContext: () => (/* binding */ NavigationContext),\n/* harmony export */   NavigationProvider: () => (/* binding */ NavigationProvider),\n/* harmony export */   RootProvider: () => (/* binding */ RootProvider),\n/* harmony export */   Row: () => (/* binding */ Row),\n/* harmony export */   SelectMultipleContext: () => (/* binding */ SelectMultipleContext),\n/* harmony export */   SelectMultipleProvider: () => (/* binding */ SelectMultipleProvider),\n/* harmony export */   SelectMultipleProviderInternal: () => (/* binding */ SelectMultipleProviderInternal),\n/* harmony export */   SelectRangeContext: () => (/* binding */ SelectRangeContext),\n/* harmony export */   SelectRangeProvider: () => (/* binding */ SelectRangeProvider),\n/* harmony export */   SelectRangeProviderInternal: () => (/* binding */ SelectRangeProviderInternal),\n/* harmony export */   SelectSingleContext: () => (/* binding */ SelectSingleContext),\n/* harmony export */   SelectSingleProvider: () => (/* binding */ SelectSingleProvider),\n/* harmony export */   SelectSingleProviderInternal: () => (/* binding */ SelectSingleProviderInternal),\n/* harmony export */   WeekNumber: () => (/* binding */ WeekNumber),\n/* harmony export */   addToRange: () => (/* binding */ addToRange),\n/* harmony export */   isDateAfterType: () => (/* binding */ isDateAfterType),\n/* harmony export */   isDateBeforeType: () => (/* binding */ isDateBeforeType),\n/* harmony export */   isDateInterval: () => (/* binding */ isDateInterval),\n/* harmony export */   isDateRange: () => (/* binding */ isDateRange),\n/* harmony export */   isDayOfWeekType: () => (/* binding */ isDayOfWeekType),\n/* harmony export */   isDayPickerDefault: () => (/* binding */ isDayPickerDefault),\n/* harmony export */   isDayPickerMultiple: () => (/* binding */ isDayPickerMultiple),\n/* harmony export */   isDayPickerRange: () => (/* binding */ isDayPickerRange),\n/* harmony export */   isDayPickerSingle: () => (/* binding */ isDayPickerSingle),\n/* harmony export */   isMatch: () => (/* binding */ isMatch),\n/* harmony export */   useActiveModifiers: () => (/* binding */ useActiveModifiers),\n/* harmony export */   useDayPicker: () => (/* binding */ useDayPicker),\n/* harmony export */   useDayRender: () => (/* binding */ useDayRender),\n/* harmony export */   useFocusContext: () => (/* binding */ useFocusContext),\n/* harmony export */   useInput: () => (/* binding */ useInput),\n/* harmony export */   useNavigation: () => (/* binding */ useNavigation),\n/* harmony export */   useSelectMultiple: () => (/* binding */ useSelectMultiple),\n/* harmony export */   useSelectRange: () => (/* binding */ useSelectRange),\n/* harmony export */   useSelectSingle: () => (/* binding */ useSelectSingle)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/format.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/startOfMonth.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/endOfMonth.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/startOfDay.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/isSameYear.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/setMonth.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/setYear.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/startOfYear.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/differenceInCalendarMonths.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/addMonths.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/isSameMonth.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/isBefore.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/startOfISOWeek.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/startOfWeek.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/addDays.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/isSameDay.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/isAfter.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/subDays.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/differenceInCalendarDays.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/isDate.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/addWeeks.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/addYears.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/endOfISOWeek.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/endOfWeek.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/max.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/min.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/getUnixTime.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/getISOWeek.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/getWeek.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/getWeeksInMonth.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/./node_modules/date-fns/parse.mjs\");\n/* harmony import */ var date_fns_locale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! date-fns/locale */ \"(ssr)/./node_modules/date-fns/locale/en-US.mjs\");\n\n\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol */ var __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction __spreadArray(to, from, pack) {\n    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n}\ntypeof SuppressedError === \"function\" ? SuppressedError : function(error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nvar jsxRuntime = {\n    exports: {}\n};\nvar reactJsxRuntime_development = {};\n/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ var hasRequiredReactJsxRuntime_development;\nfunction requireReactJsxRuntime_development() {\n    if (hasRequiredReactJsxRuntime_development) return reactJsxRuntime_development;\n    hasRequiredReactJsxRuntime_development = 1;\n    if (true) {\n        (function() {\n            var React = (react__WEBPACK_IMPORTED_MODULE_0___default());\n            // ATTENTION\n            // When adding new symbols to this file,\n            // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n            // The Symbol used to tag the ReactElement-like types.\n            var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n            var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n            var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n            var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n            var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n            var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n            var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n            var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n            var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n            var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n            var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n            var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n            var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n            var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n            var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n            function getIteratorFn(maybeIterable) {\n                if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n                    return null;\n                }\n                var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n                if (typeof maybeIterator === \"function\") {\n                    return maybeIterator;\n                }\n                return null;\n            }\n            var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n            function error(format) {\n                {\n                    {\n                        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                            args[_key2 - 1] = arguments[_key2];\n                        }\n                        printWarning(\"error\", format, args);\n                    }\n                }\n            }\n            function printWarning(level, format, args) {\n                // When changing this logic, you might want to also\n                // update consoleWithStackDev.www.js as well.\n                {\n                    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n                    var stack = ReactDebugCurrentFrame.getStackAddendum();\n                    if (stack !== \"\") {\n                        format += \"%s\";\n                        args = args.concat([\n                            stack\n                        ]);\n                    } // eslint-disable-next-line react-internal/safe-string-coercion\n                    var argsWithFormat = args.map(function(item) {\n                        return String(item);\n                    }); // Careful: RN currently depends on this prefix\n                    argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n                    // breaks IE9: https://github.com/facebook/react/issues/13610\n                    // eslint-disable-next-line react-internal/no-production-logging\n                    Function.prototype.apply.call(console[level], console, argsWithFormat);\n                }\n            }\n            // -----------------------------------------------------------------------------\n            var enableScopeAPI = false; // Experimental Create Event Handle API.\n            var enableCacheElement = false;\n            var enableTransitionTracing = false; // No known bugs, but needs performance testing\n            var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n            // stuff. Intended to enable React core members to more easily debug scheduling\n            // issues in DEV builds.\n            var enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n            var REACT_MODULE_REFERENCE;\n            {\n                REACT_MODULE_REFERENCE = Symbol.for(\"react.module.reference\");\n            }\n            function isValidElementType(type) {\n                if (typeof type === \"string\" || typeof type === \"function\") {\n                    return true;\n                } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n                if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n                    return true;\n                }\n                if (typeof type === \"object\" && type !== null) {\n                    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n                    // types supported by any Flight configuration anywhere since\n                    // we don't know which Flight build this will end up being used\n                    // with.\n                    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n            function getWrappedName(outerType, innerType, wrapperName) {\n                var displayName = outerType.displayName;\n                if (displayName) {\n                    return displayName;\n                }\n                var functionName = innerType.displayName || innerType.name || \"\";\n                return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n            } // Keep in sync with react-reconciler/getComponentNameFromFiber\n            function getContextName(type) {\n                return type.displayName || \"Context\";\n            } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n            function getComponentNameFromType(type) {\n                if (type == null) {\n                    // Host root, text node or just invalid type.\n                    return null;\n                }\n                {\n                    if (typeof type.tag === \"number\") {\n                        error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n                    }\n                }\n                if (typeof type === \"function\") {\n                    return type.displayName || type.name || null;\n                }\n                if (typeof type === \"string\") {\n                    return type;\n                }\n                switch(type){\n                    case REACT_FRAGMENT_TYPE:\n                        return \"Fragment\";\n                    case REACT_PORTAL_TYPE:\n                        return \"Portal\";\n                    case REACT_PROFILER_TYPE:\n                        return \"Profiler\";\n                    case REACT_STRICT_MODE_TYPE:\n                        return \"StrictMode\";\n                    case REACT_SUSPENSE_TYPE:\n                        return \"Suspense\";\n                    case REACT_SUSPENSE_LIST_TYPE:\n                        return \"SuspenseList\";\n                }\n                if (typeof type === \"object\") {\n                    switch(type.$$typeof){\n                        case REACT_CONTEXT_TYPE:\n                            var context = type;\n                            return getContextName(context) + \".Consumer\";\n                        case REACT_PROVIDER_TYPE:\n                            var provider = type;\n                            return getContextName(provider._context) + \".Provider\";\n                        case REACT_FORWARD_REF_TYPE:\n                            return getWrappedName(type, type.render, \"ForwardRef\");\n                        case REACT_MEMO_TYPE:\n                            var outerName = type.displayName || null;\n                            if (outerName !== null) {\n                                return outerName;\n                            }\n                            return getComponentNameFromType(type.type) || \"Memo\";\n                        case REACT_LAZY_TYPE:\n                            {\n                                var lazyComponent = type;\n                                var payload = lazyComponent._payload;\n                                var init = lazyComponent._init;\n                                try {\n                                    return getComponentNameFromType(init(payload));\n                                } catch (x) {\n                                    return null;\n                                }\n                            }\n                    }\n                }\n                return null;\n            }\n            var assign = Object.assign;\n            // Helpers to patch console.logs to avoid logging during side-effect free\n            // replaying on render function. This currently only patches the object\n            // lazily which won't cover if the log function was extracted eagerly.\n            // We could also eagerly patch the method.\n            var disabledDepth = 0;\n            var prevLog;\n            var prevInfo;\n            var prevWarn;\n            var prevError;\n            var prevGroup;\n            var prevGroupCollapsed;\n            var prevGroupEnd;\n            function disabledLog() {}\n            disabledLog.__reactDisabledLog = true;\n            function disableLogs() {\n                {\n                    if (disabledDepth === 0) {\n                        /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;\n                        prevInfo = console.info;\n                        prevWarn = console.warn;\n                        prevError = console.error;\n                        prevGroup = console.group;\n                        prevGroupCollapsed = console.groupCollapsed;\n                        prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n                        var props = {\n                            configurable: true,\n                            enumerable: true,\n                            value: disabledLog,\n                            writable: true\n                        }; // $FlowFixMe Flow thinks console is immutable.\n                        Object.defineProperties(console, {\n                            info: props,\n                            log: props,\n                            warn: props,\n                            error: props,\n                            group: props,\n                            groupCollapsed: props,\n                            groupEnd: props\n                        });\n                    /* eslint-enable react-internal/no-production-logging */ }\n                    disabledDepth++;\n                }\n            }\n            function reenableLogs() {\n                {\n                    disabledDepth--;\n                    if (disabledDepth === 0) {\n                        /* eslint-disable react-internal/no-production-logging */ var props = {\n                            configurable: true,\n                            enumerable: true,\n                            writable: true\n                        }; // $FlowFixMe Flow thinks console is immutable.\n                        Object.defineProperties(console, {\n                            log: assign({}, props, {\n                                value: prevLog\n                            }),\n                            info: assign({}, props, {\n                                value: prevInfo\n                            }),\n                            warn: assign({}, props, {\n                                value: prevWarn\n                            }),\n                            error: assign({}, props, {\n                                value: prevError\n                            }),\n                            group: assign({}, props, {\n                                value: prevGroup\n                            }),\n                            groupCollapsed: assign({}, props, {\n                                value: prevGroupCollapsed\n                            }),\n                            groupEnd: assign({}, props, {\n                                value: prevGroupEnd\n                            })\n                        });\n                    /* eslint-enable react-internal/no-production-logging */ }\n                    if (disabledDepth < 0) {\n                        error(\"disabledDepth fell below zero. \" + \"This is a bug in React. Please file an issue.\");\n                    }\n                }\n            }\n            var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n            var prefix;\n            function describeBuiltInComponentFrame(name, source, ownerFn) {\n                {\n                    if (prefix === undefined) {\n                        // Extract the VM specific prefix used by each line.\n                        try {\n                            throw Error();\n                        } catch (x) {\n                            var match = x.stack.trim().match(/\\n( *(at )?)/);\n                            prefix = match && match[1] || \"\";\n                        }\n                    } // We use the prefix to ensure our stacks line up with native stack frames.\n                    return \"\\n\" + prefix + name;\n                }\n            }\n            var reentry = false;\n            var componentFrameCache;\n            {\n                var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n                componentFrameCache = new PossiblyWeakMap();\n            }\n            function describeNativeComponentFrame(fn, construct) {\n                // If something asked for a stack inside a fake render, it should get ignored.\n                if (!fn || reentry) {\n                    return \"\";\n                }\n                {\n                    var frame = componentFrameCache.get(fn);\n                    if (frame !== undefined) {\n                        return frame;\n                    }\n                }\n                var control;\n                reentry = true;\n                var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n                Error.prepareStackTrace = undefined;\n                var previousDispatcher;\n                {\n                    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n                    // for warnings.\n                    ReactCurrentDispatcher.current = null;\n                    disableLogs();\n                }\n                try {\n                    // This should throw.\n                    if (construct) {\n                        // Something should be setting the props in the constructor.\n                        var Fake = function() {\n                            throw Error();\n                        }; // $FlowFixMe\n                        Object.defineProperty(Fake.prototype, \"props\", {\n                            set: function() {\n                                // We use a throwing setter instead of frozen or non-writable props\n                                // because that won't throw in a non-strict mode function.\n                                throw Error();\n                            }\n                        });\n                        if (typeof Reflect === \"object\" && Reflect.construct) {\n                            // We construct a different control for this case to include any extra\n                            // frames added by the construct call.\n                            try {\n                                Reflect.construct(Fake, []);\n                            } catch (x) {\n                                control = x;\n                            }\n                            Reflect.construct(fn, [], Fake);\n                        } else {\n                            try {\n                                Fake.call();\n                            } catch (x) {\n                                control = x;\n                            }\n                            fn.call(Fake.prototype);\n                        }\n                    } else {\n                        try {\n                            throw Error();\n                        } catch (x) {\n                            control = x;\n                        }\n                        fn();\n                    }\n                } catch (sample) {\n                    // This is inlined manually because closure doesn't do it for us.\n                    if (sample && control && typeof sample.stack === \"string\") {\n                        // This extracts the first frame from the sample that isn't also in the control.\n                        // Skipping one frame that we assume is the frame that calls the two.\n                        var sampleLines = sample.stack.split(\"\\n\");\n                        var controlLines = control.stack.split(\"\\n\");\n                        var s = sampleLines.length - 1;\n                        var c = controlLines.length - 1;\n                        while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]){\n                            // We expect at least one stack frame to be shared.\n                            // Typically this will be the root most one. However, stack frames may be\n                            // cut off due to maximum stack limits. In this case, one maybe cut off\n                            // earlier than the other. We assume that the sample is longer or the same\n                            // and there for cut off earlier. So we should find the root most frame in\n                            // the sample somewhere in the control.\n                            c--;\n                        }\n                        for(; s >= 1 && c >= 0; s--, c--){\n                            // Next we find the first one that isn't the same which should be the\n                            // frame that called our sample function and the control.\n                            if (sampleLines[s] !== controlLines[c]) {\n                                // In V8, the first line is describing the message but other VMs don't.\n                                // If we're about to return the first line, and the control is also on the same\n                                // line, that's a pretty good indicator that our sample threw at same line as\n                                // the control. I.e. before we entered the sample frame. So we ignore this result.\n                                // This can happen if you passed a class to function component, or non-function.\n                                if (s !== 1 || c !== 1) {\n                                    do {\n                                        s--;\n                                        c--; // We may still have similar intermediate frames from the construct call.\n                                        // The next one that isn't the same should be our match though.\n                                        if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                                            // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                                            var _frame = \"\\n\" + sampleLines[s].replace(\" at new \", \" at \"); // If our component frame is labeled \"<anonymous>\"\n                                            // but we have a user-provided \"displayName\"\n                                            // splice it in to make the stack more readable.\n                                            if (fn.displayName && _frame.includes(\"<anonymous>\")) {\n                                                _frame = _frame.replace(\"<anonymous>\", fn.displayName);\n                                            }\n                                            {\n                                                if (typeof fn === \"function\") {\n                                                    componentFrameCache.set(fn, _frame);\n                                                }\n                                            }\n                                            return _frame;\n                                        }\n                                    }while (s >= 1 && c >= 0);\n                                }\n                                break;\n                            }\n                        }\n                    }\n                } finally{\n                    reentry = false;\n                    {\n                        ReactCurrentDispatcher.current = previousDispatcher;\n                        reenableLogs();\n                    }\n                    Error.prepareStackTrace = previousPrepareStackTrace;\n                } // Fallback to just using the name if we couldn't make it throw.\n                var name = fn ? fn.displayName || fn.name : \"\";\n                var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"\";\n                {\n                    if (typeof fn === \"function\") {\n                        componentFrameCache.set(fn, syntheticFrame);\n                    }\n                }\n                return syntheticFrame;\n            }\n            function describeFunctionComponentFrame(fn, source, ownerFn) {\n                {\n                    return describeNativeComponentFrame(fn, false);\n                }\n            }\n            function shouldConstruct(Component) {\n                var prototype = Component.prototype;\n                return !!(prototype && prototype.isReactComponent);\n            }\n            function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n                if (type == null) {\n                    return \"\";\n                }\n                if (typeof type === \"function\") {\n                    {\n                        return describeNativeComponentFrame(type, shouldConstruct(type));\n                    }\n                }\n                if (typeof type === \"string\") {\n                    return describeBuiltInComponentFrame(type);\n                }\n                switch(type){\n                    case REACT_SUSPENSE_TYPE:\n                        return describeBuiltInComponentFrame(\"Suspense\");\n                    case REACT_SUSPENSE_LIST_TYPE:\n                        return describeBuiltInComponentFrame(\"SuspenseList\");\n                }\n                if (typeof type === \"object\") {\n                    switch(type.$$typeof){\n                        case REACT_FORWARD_REF_TYPE:\n                            return describeFunctionComponentFrame(type.render);\n                        case REACT_MEMO_TYPE:\n                            // Memo may contain any component type so we recursively resolve it.\n                            return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n                        case REACT_LAZY_TYPE:\n                            {\n                                var lazyComponent = type;\n                                var payload = lazyComponent._payload;\n                                var init = lazyComponent._init;\n                                try {\n                                    // Lazy may contain any component type so we recursively resolve it.\n                                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n                                } catch (x) {}\n                            }\n                    }\n                }\n                return \"\";\n            }\n            var hasOwnProperty = Object.prototype.hasOwnProperty;\n            var loggedTypeFailures = {};\n            var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n            function setCurrentlyValidatingElement(element) {\n                {\n                    if (element) {\n                        var owner = element._owner;\n                        var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                        ReactDebugCurrentFrame.setExtraStackFrame(stack);\n                    } else {\n                        ReactDebugCurrentFrame.setExtraStackFrame(null);\n                    }\n                }\n            }\n            function checkPropTypes(typeSpecs, values, location, componentName, element) {\n                {\n                    // $FlowFixMe This is okay but Flow doesn't know it.\n                    var has = Function.call.bind(hasOwnProperty);\n                    for(var typeSpecName in typeSpecs){\n                        if (has(typeSpecs, typeSpecName)) {\n                            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n                            // fail the render phase where it didn't fail before. So we log it.\n                            // After these have been cleaned up, we'll let them throw.\n                            try {\n                                // This is intentionally an invariant that gets caught. It's the same\n                                // behavior as without this statement except with a better message.\n                                if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                                    // eslint-disable-next-line react-internal/prod-error-codes\n                                    var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                                    err.name = \"Invariant Violation\";\n                                    throw err;\n                                }\n                                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n                            } catch (ex) {\n                                error$1 = ex;\n                            }\n                            if (error$1 && !(error$1 instanceof Error)) {\n                                setCurrentlyValidatingElement(element);\n                                error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n                                setCurrentlyValidatingElement(null);\n                            }\n                            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n                                // Only monitor this failure once because there tends to be a lot of the\n                                // same error.\n                                loggedTypeFailures[error$1.message] = true;\n                                setCurrentlyValidatingElement(element);\n                                error(\"Failed %s type: %s\", location, error$1.message);\n                                setCurrentlyValidatingElement(null);\n                            }\n                        }\n                    }\n                }\n            }\n            var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n            function isArray(a) {\n                return isArrayImpl(a);\n            }\n            /*\n\t * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n\t * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n\t *\n\t * The functions in this module will throw an easier-to-understand,\n\t * easier-to-debug exception with a clear errors message message explaining the\n\t * problem. (Instead of a confusing exception thrown inside the implementation\n\t * of the `value` object).\n\t */ // $FlowFixMe only called in DEV, so void return is not possible.\n            function typeName(value) {\n                {\n                    // toStringTag is needed for namespaced types like Temporal.Instant\n                    var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n                    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\";\n                    return type;\n                }\n            } // $FlowFixMe only called in DEV, so void return is not possible.\n            function willCoercionThrow(value) {\n                {\n                    try {\n                        testStringCoercion(value);\n                        return false;\n                    } catch (e) {\n                        return true;\n                    }\n                }\n            }\n            function testStringCoercion(value) {\n                // If you ended up here by following an exception call stack, here's what's\n                // happened: you supplied an object or symbol value to React (as a prop, key,\n                // DOM attribute, CSS property, string ref, etc.) and when React tried to\n                // coerce it to a string using `'' + value`, an exception was thrown.\n                //\n                // The most common types that will cause this exception are `Symbol` instances\n                // and Temporal objects like `Temporal.Instant`. But any object that has a\n                // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n                // exception. (Library authors do this to prevent users from using built-in\n                // numeric operators like `+` or comparison operators like `>=` because custom\n                // methods are needed to perform accurate arithmetic or comparison.)\n                //\n                // To fix the problem, coerce this object or symbol value to a string before\n                // passing it to React. The most reliable way is usually `String(value)`.\n                //\n                // To find which value is throwing, check the browser or debugger console.\n                // Before this exception was thrown, there should be `console.error` output\n                // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n                // problem and how that type was used: key, atrribute, input value prop, etc.\n                // In most cases, this console output also shows the component and its\n                // ancestor components where the exception happened.\n                //\n                // eslint-disable-next-line react-internal/safe-string-coercion\n                return \"\" + value;\n            }\n            function checkKeyStringCoercion(value) {\n                {\n                    if (willCoercionThrow(value)) {\n                        error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before before using it here.\", typeName(value));\n                        return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n                    }\n                }\n            }\n            var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n            var RESERVED_PROPS = {\n                key: true,\n                ref: true,\n                __self: true,\n                __source: true\n            };\n            var specialPropKeyWarningShown;\n            var specialPropRefWarningShown;\n            var didWarnAboutStringRefs;\n            {\n                didWarnAboutStringRefs = {};\n            }\n            function hasValidRef(config) {\n                {\n                    if (hasOwnProperty.call(config, \"ref\")) {\n                        var getter = Object.getOwnPropertyDescriptor(config, \"ref\").get;\n                        if (getter && getter.isReactWarning) {\n                            return false;\n                        }\n                    }\n                }\n                return config.ref !== undefined;\n            }\n            function hasValidKey(config) {\n                {\n                    if (hasOwnProperty.call(config, \"key\")) {\n                        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n                        if (getter && getter.isReactWarning) {\n                            return false;\n                        }\n                    }\n                }\n                return config.key !== undefined;\n            }\n            function warnIfStringRefCannotBeAutoConverted(config, self) {\n                {\n                    if (typeof config.ref === \"string\" && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n                        var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n                        if (!didWarnAboutStringRefs[componentName]) {\n                            error('Component \"%s\" contains the string ref \"%s\". ' + \"Support for string refs will be removed in a future major release. \" + \"This case cannot be automatically converted to an arrow function. \" + \"We ask you to manually fix this case by using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n                            didWarnAboutStringRefs[componentName] = true;\n                        }\n                    }\n                }\n            }\n            function defineKeyPropWarningGetter(props, displayName) {\n                {\n                    var warnAboutAccessingKey = function() {\n                        if (!specialPropKeyWarningShown) {\n                            specialPropKeyWarningShown = true;\n                            error(\"%s: `key` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                        }\n                    };\n                    warnAboutAccessingKey.isReactWarning = true;\n                    Object.defineProperty(props, \"key\", {\n                        get: warnAboutAccessingKey,\n                        configurable: true\n                    });\n                }\n            }\n            function defineRefPropWarningGetter(props, displayName) {\n                {\n                    var warnAboutAccessingRef = function() {\n                        if (!specialPropRefWarningShown) {\n                            specialPropRefWarningShown = true;\n                            error(\"%s: `ref` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                        }\n                    };\n                    warnAboutAccessingRef.isReactWarning = true;\n                    Object.defineProperty(props, \"ref\", {\n                        get: warnAboutAccessingRef,\n                        configurable: true\n                    });\n                }\n            }\n            /**\n\t * Factory method to create a new React element. This no longer adheres to\n\t * the class pattern, so do not use new to call it. Also, instanceof check\n\t * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n\t * if something is a React Element.\n\t *\n\t * @param {*} type\n\t * @param {*} props\n\t * @param {*} key\n\t * @param {string|object} ref\n\t * @param {*} owner\n\t * @param {*} self A *temporary* helper to detect places where `this` is\n\t * different from the `owner` when React.createElement is called, so that we\n\t * can warn. We want to get rid of owner and replace string `ref`s with arrow\n\t * functions, and as long as `this` and owner are the same, there will be no\n\t * change in behavior.\n\t * @param {*} source An annotation object (added by a transpiler or otherwise)\n\t * indicating filename, line number, and/or other information.\n\t * @internal\n\t */ var ReactElement = function(type, key, ref, self, source, owner, props) {\n                var element = {\n                    // This tag allows us to uniquely identify this as a React Element\n                    $$typeof: REACT_ELEMENT_TYPE,\n                    // Built-in properties that belong on the element\n                    type: type,\n                    key: key,\n                    ref: ref,\n                    props: props,\n                    // Record the component responsible for creating this element.\n                    _owner: owner\n                };\n                {\n                    // The validation flag is currently mutative. We put it on\n                    // an external backing store so that we can freeze the whole object.\n                    // This can be replaced with a WeakMap once they are implemented in\n                    // commonly used development environments.\n                    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n                    // the validation flag non-enumerable (where possible, which should\n                    // include every environment we run tests in), so the test framework\n                    // ignores it.\n                    Object.defineProperty(element._store, \"validated\", {\n                        configurable: false,\n                        enumerable: false,\n                        writable: true,\n                        value: false\n                    }); // self and source are DEV only properties.\n                    Object.defineProperty(element, \"_self\", {\n                        configurable: false,\n                        enumerable: false,\n                        writable: false,\n                        value: self\n                    }); // Two elements created in two different places should be considered\n                    // equal for testing purposes and therefore we hide it from enumeration.\n                    Object.defineProperty(element, \"_source\", {\n                        configurable: false,\n                        enumerable: false,\n                        writable: false,\n                        value: source\n                    });\n                    if (Object.freeze) {\n                        Object.freeze(element.props);\n                        Object.freeze(element);\n                    }\n                }\n                return element;\n            };\n            /**\n\t * https://github.com/reactjs/rfcs/pull/107\n\t * @param {*} type\n\t * @param {object} props\n\t * @param {string} key\n\t */ function jsxDEV(type, config, maybeKey, source, self) {\n                {\n                    var propName; // Reserved names are extracted\n                    var props = {};\n                    var key = null;\n                    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n                    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n                    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n                    // but as an intermediary step, we will use jsxDEV for everything except\n                    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n                    // key is explicitly declared to be undefined or not.\n                    if (maybeKey !== undefined) {\n                        {\n                            checkKeyStringCoercion(maybeKey);\n                        }\n                        key = \"\" + maybeKey;\n                    }\n                    if (hasValidKey(config)) {\n                        {\n                            checkKeyStringCoercion(config.key);\n                        }\n                        key = \"\" + config.key;\n                    }\n                    if (hasValidRef(config)) {\n                        ref = config.ref;\n                        warnIfStringRefCannotBeAutoConverted(config, self);\n                    } // Remaining properties are added to a new props object\n                    for(propName in config){\n                        if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                            props[propName] = config[propName];\n                        }\n                    } // Resolve default props\n                    if (type && type.defaultProps) {\n                        var defaultProps = type.defaultProps;\n                        for(propName in defaultProps){\n                            if (props[propName] === undefined) {\n                                props[propName] = defaultProps[propName];\n                            }\n                        }\n                    }\n                    if (key || ref) {\n                        var displayName = typeof type === \"function\" ? type.displayName || type.name || \"Unknown\" : type;\n                        if (key) {\n                            defineKeyPropWarningGetter(props, displayName);\n                        }\n                        if (ref) {\n                            defineRefPropWarningGetter(props, displayName);\n                        }\n                    }\n                    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n                }\n            }\n            var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n            var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n            function setCurrentlyValidatingElement$1(element) {\n                {\n                    if (element) {\n                        var owner = element._owner;\n                        var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                        ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n                    } else {\n                        ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n                    }\n                }\n            }\n            var propTypesMisspellWarningShown;\n            {\n                propTypesMisspellWarningShown = false;\n            }\n            /**\n\t * Verifies the object is a ReactElement.\n\t * See https://reactjs.org/docs/react-api.html#isvalidelement\n\t * @param {?object} object\n\t * @return {boolean} True if `object` is a ReactElement.\n\t * @final\n\t */ function isValidElement(object) {\n                {\n                    return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n                }\n            }\n            function getDeclarationErrorAddendum() {\n                {\n                    if (ReactCurrentOwner$1.current) {\n                        var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n                        if (name) {\n                            return \"\\n\\nCheck the render method of `\" + name + \"`.\";\n                        }\n                    }\n                    return \"\";\n                }\n            }\n            function getSourceInfoErrorAddendum(source) {\n                {\n                    if (source !== undefined) {\n                        var fileName = source.fileName.replace(/^.*[\\\\\\/]/, \"\");\n                        var lineNumber = source.lineNumber;\n                        return \"\\n\\nCheck your code at \" + fileName + \":\" + lineNumber + \".\";\n                    }\n                    return \"\";\n                }\n            }\n            /**\n\t * Warn if there's no key explicitly set on dynamic arrays of children or\n\t * object keys are not valid. This allows us to keep track of children between\n\t * updates.\n\t */ var ownerHasKeyUseWarning = {};\n            function getCurrentComponentErrorInfo(parentType) {\n                {\n                    var info = getDeclarationErrorAddendum();\n                    if (!info) {\n                        var parentName = typeof parentType === \"string\" ? parentType : parentType.displayName || parentType.name;\n                        if (parentName) {\n                            info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n                        }\n                    }\n                    return info;\n                }\n            }\n            /**\n\t * Warn if the element doesn't have an explicit key assigned to it.\n\t * This element is in an array. The array could grow and shrink or be\n\t * reordered. All children that haven't already been validated are required to\n\t * have a \"key\" property assigned to it. Error statuses are cached so a warning\n\t * will only be shown once.\n\t *\n\t * @internal\n\t * @param {ReactElement} element Element that requires a key.\n\t * @param {*} parentType element's parent's type.\n\t */ function validateExplicitKey(element, parentType) {\n                {\n                    if (!element._store || element._store.validated || element.key != null) {\n                        return;\n                    }\n                    element._store.validated = true;\n                    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n                    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n                        return;\n                    }\n                    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n                    // property, it may be the creator of the child that's responsible for\n                    // assigning it a key.\n                    var childOwner = \"\";\n                    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n                        // Give the component that originally created this child.\n                        childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n                    }\n                    setCurrentlyValidatingElement$1(element);\n                    error('Each child in a list should have a unique \"key\" prop.' + \"%s%s See https://reactjs.org/link/warning-keys for more information.\", currentComponentErrorInfo, childOwner);\n                    setCurrentlyValidatingElement$1(null);\n                }\n            }\n            /**\n\t * Ensure that every element either is passed in a static location, in an\n\t * array with an explicit keys property defined, or in an object literal\n\t * with valid key property.\n\t *\n\t * @internal\n\t * @param {ReactNode} node Statically passed child of any type.\n\t * @param {*} parentType node's parent's type.\n\t */ function validateChildKeys(node, parentType) {\n                {\n                    if (typeof node !== \"object\") {\n                        return;\n                    }\n                    if (isArray(node)) {\n                        for(var i = 0; i < node.length; i++){\n                            var child = node[i];\n                            if (isValidElement(child)) {\n                                validateExplicitKey(child, parentType);\n                            }\n                        }\n                    } else if (isValidElement(node)) {\n                        // This element was passed in a valid location.\n                        if (node._store) {\n                            node._store.validated = true;\n                        }\n                    } else if (node) {\n                        var iteratorFn = getIteratorFn(node);\n                        if (typeof iteratorFn === \"function\") {\n                            // Entry iterators used to provide implicit keys,\n                            // but now we print a separate warning for them later.\n                            if (iteratorFn !== node.entries) {\n                                var iterator = iteratorFn.call(node);\n                                var step;\n                                while(!(step = iterator.next()).done){\n                                    if (isValidElement(step.value)) {\n                                        validateExplicitKey(step.value, parentType);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            /**\n\t * Given an element, validate that its props follow the propTypes definition,\n\t * provided by the type.\n\t *\n\t * @param {ReactElement} element\n\t */ function validatePropTypes(element) {\n                {\n                    var type = element.type;\n                    if (type === null || type === undefined || typeof type === \"string\") {\n                        return;\n                    }\n                    var propTypes;\n                    if (typeof type === \"function\") {\n                        propTypes = type.propTypes;\n                    } else if (typeof type === \"object\" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n                    // Inner props are checked in the reconciler.\n                    type.$$typeof === REACT_MEMO_TYPE)) {\n                        propTypes = type.propTypes;\n                    } else {\n                        return;\n                    }\n                    if (propTypes) {\n                        // Intentionally inside to avoid triggering lazy initializers:\n                        var name = getComponentNameFromType(type);\n                        checkPropTypes(propTypes, element.props, \"prop\", name, element);\n                    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n                        propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n                        var _name = getComponentNameFromType(type);\n                        error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\");\n                    }\n                    if (typeof type.getDefaultProps === \"function\" && !type.getDefaultProps.isReactClassApproved) {\n                        error(\"getDefaultProps is only used on classic React.createClass \" + \"definitions. Use a static property named `defaultProps` instead.\");\n                    }\n                }\n            }\n            /**\n\t * Given a fragment, validate that it can only be provided with fragment props\n\t * @param {ReactElement} fragment\n\t */ function validateFragmentProps(fragment) {\n                {\n                    var keys = Object.keys(fragment.props);\n                    for(var i = 0; i < keys.length; i++){\n                        var key = keys[i];\n                        if (key !== \"children\" && key !== \"key\") {\n                            setCurrentlyValidatingElement$1(fragment);\n                            error(\"Invalid prop `%s` supplied to `React.Fragment`. \" + \"React.Fragment can only have `key` and `children` props.\", key);\n                            setCurrentlyValidatingElement$1(null);\n                            break;\n                        }\n                    }\n                    if (fragment.ref !== null) {\n                        setCurrentlyValidatingElement$1(fragment);\n                        error(\"Invalid attribute `ref` supplied to `React.Fragment`.\");\n                        setCurrentlyValidatingElement$1(null);\n                    }\n                }\n            }\n            function jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n                {\n                    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n                    // succeed and there will likely be errors in render.\n                    if (!validType) {\n                        var info = \"\";\n                        if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                            info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and named imports.\";\n                        }\n                        var sourceInfo = getSourceInfoErrorAddendum(source);\n                        if (sourceInfo) {\n                            info += sourceInfo;\n                        } else {\n                            info += getDeclarationErrorAddendum();\n                        }\n                        var typeString;\n                        if (type === null) {\n                            typeString = \"null\";\n                        } else if (isArray(type)) {\n                            typeString = \"array\";\n                        } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n                            typeString = \"<\" + (getComponentNameFromType(type.type) || \"Unknown\") + \" />\";\n                            info = \" Did you accidentally export a JSX literal instead of a component?\";\n                        } else {\n                            typeString = typeof type;\n                        }\n                        error(\"React.jsx: type is invalid -- expected a string (for \" + \"built-in components) or a class/function (for composite \" + \"components) but got: %s.%s\", typeString, info);\n                    }\n                    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n                    // TODO: Drop this when these are no longer allowed as the type argument.\n                    if (element == null) {\n                        return element;\n                    } // Skip key warning if the type isn't valid since our key validation logic\n                    // doesn't expect a non-string/function type and can throw confusing errors.\n                    // We don't want exception behavior to differ between dev and prod.\n                    // (Rendering will throw with a helpful message and as soon as the type is\n                    // fixed, the key warnings will appear.)\n                    if (validType) {\n                        var children = props.children;\n                        if (children !== undefined) {\n                            if (isStaticChildren) {\n                                if (isArray(children)) {\n                                    for(var i = 0; i < children.length; i++){\n                                        validateChildKeys(children[i], type);\n                                    }\n                                    if (Object.freeze) {\n                                        Object.freeze(children);\n                                    }\n                                } else {\n                                    error(\"React.jsx: Static children should always be an array. \" + \"You are likely explicitly calling React.jsxs or React.jsxDEV. \" + \"Use the Babel transform instead.\");\n                                }\n                            } else {\n                                validateChildKeys(children, type);\n                            }\n                        }\n                    }\n                    if (type === REACT_FRAGMENT_TYPE) {\n                        validateFragmentProps(element);\n                    } else {\n                        validatePropTypes(element);\n                    }\n                    return element;\n                }\n            } // These two functions exist to still get child warnings in dev\n            // even with the prod transform. This means that jsxDEV is purely\n            // opt-in behavior for better messages but that we won't stop\n            // giving you warnings if you use production apis.\n            function jsxWithValidationStatic(type, props, key) {\n                {\n                    return jsxWithValidation(type, props, key, true);\n                }\n            }\n            function jsxWithValidationDynamic(type, props, key) {\n                {\n                    return jsxWithValidation(type, props, key, false);\n                }\n            }\n            var jsx = jsxWithValidationDynamic; // we may want to special case jsxs internally to take advantage of static children.\n            // for now we can ship identical prod functions\n            var jsxs = jsxWithValidationStatic;\n            reactJsxRuntime_development.Fragment = REACT_FRAGMENT_TYPE;\n            reactJsxRuntime_development.jsx = jsx;\n            reactJsxRuntime_development.jsxs = jsxs;\n        })();\n    }\n    return reactJsxRuntime_development;\n}\nvar reactJsxRuntime_production_min = {};\n/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ var hasRequiredReactJsxRuntime_production_min;\nfunction requireReactJsxRuntime_production_min() {\n    if (hasRequiredReactJsxRuntime_production_min) return reactJsxRuntime_production_min;\n    hasRequiredReactJsxRuntime_production_min = 1;\n    var f = (react__WEBPACK_IMPORTED_MODULE_0___default()), k = Symbol.for(\"react.element\"), l = Symbol.for(\"react.fragment\"), m = Object.prototype.hasOwnProperty, n = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p = {\n        key: !0,\n        ref: !0,\n        __self: !0,\n        __source: !0\n    };\n    function q(c, a, g) {\n        var b, d = {}, e = null, h = null;\n        void 0 !== g && (e = \"\" + g);\n        void 0 !== a.key && (e = \"\" + a.key);\n        void 0 !== a.ref && (h = a.ref);\n        for(b in a)m.call(a, b) && !p.hasOwnProperty(b) && (d[b] = a[b]);\n        if (c && c.defaultProps) for(b in a = c.defaultProps, a)void 0 === d[b] && (d[b] = a[b]);\n        return {\n            $$typeof: k,\n            type: c,\n            key: e,\n            ref: h,\n            props: d,\n            _owner: n.current\n        };\n    }\n    reactJsxRuntime_production_min.Fragment = l;\n    reactJsxRuntime_production_min.jsx = q;\n    reactJsxRuntime_production_min.jsxs = q;\n    return reactJsxRuntime_production_min;\n}\nif (false) {} else {\n    jsxRuntime.exports = requireReactJsxRuntime_development();\n}\nvar jsxRuntimeExports = jsxRuntime.exports;\n/** Returns true when the props are of type {@link DayPickerMultipleProps}. */ function isDayPickerMultiple(props) {\n    return props.mode === \"multiple\";\n}\n/** Returns true when the props are of type {@link DayPickerRangeProps}. */ function isDayPickerRange(props) {\n    return props.mode === \"range\";\n}\n/** Returns true when the props are of type {@link DayPickerSingleProps}. */ function isDayPickerSingle(props) {\n    return props.mode === \"single\";\n}\n/**\n * The name of the default CSS classes.\n */ var defaultClassNames = {\n    root: \"rdp\",\n    multiple_months: \"rdp-multiple_months\",\n    with_weeknumber: \"rdp-with_weeknumber\",\n    vhidden: \"rdp-vhidden\",\n    button_reset: \"rdp-button_reset\",\n    button: \"rdp-button\",\n    caption: \"rdp-caption\",\n    caption_start: \"rdp-caption_start\",\n    caption_end: \"rdp-caption_end\",\n    caption_between: \"rdp-caption_between\",\n    caption_label: \"rdp-caption_label\",\n    caption_dropdowns: \"rdp-caption_dropdowns\",\n    dropdown: \"rdp-dropdown\",\n    dropdown_month: \"rdp-dropdown_month\",\n    dropdown_year: \"rdp-dropdown_year\",\n    dropdown_icon: \"rdp-dropdown_icon\",\n    months: \"rdp-months\",\n    month: \"rdp-month\",\n    table: \"rdp-table\",\n    tbody: \"rdp-tbody\",\n    tfoot: \"rdp-tfoot\",\n    head: \"rdp-head\",\n    head_row: \"rdp-head_row\",\n    head_cell: \"rdp-head_cell\",\n    nav: \"rdp-nav\",\n    nav_button: \"rdp-nav_button\",\n    nav_button_previous: \"rdp-nav_button_previous\",\n    nav_button_next: \"rdp-nav_button_next\",\n    nav_icon: \"rdp-nav_icon\",\n    row: \"rdp-row\",\n    weeknumber: \"rdp-weeknumber\",\n    cell: \"rdp-cell\",\n    day: \"rdp-day\",\n    day_today: \"rdp-day_today\",\n    day_outside: \"rdp-day_outside\",\n    day_selected: \"rdp-day_selected\",\n    day_disabled: \"rdp-day_disabled\",\n    day_hidden: \"rdp-day_hidden\",\n    day_range_start: \"rdp-day_range_start\",\n    day_range_end: \"rdp-day_range_end\",\n    day_range_middle: \"rdp-day_range_middle\"\n};\n/**\n * The default formatter for the caption.\n */ function formatCaption(month, options) {\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__.format)(month, \"LLLL y\", options);\n}\n/**\n * The default formatter for the Day button.\n */ function formatDay(day, options) {\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__.format)(day, \"d\", options);\n}\n/**\n * The default formatter for the Month caption.\n */ function formatMonthCaption(month, options) {\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__.format)(month, \"LLLL\", options);\n}\n/**\n * The default formatter for the week number.\n */ function formatWeekNumber(weekNumber) {\n    return \"\".concat(weekNumber);\n}\n/**\n * The default formatter for the name of the weekday.\n */ function formatWeekdayName(weekday, options) {\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__.format)(weekday, \"cccccc\", options);\n}\n/**\n * The default formatter for the Year caption.\n */ function formatYearCaption(year, options) {\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__.format)(year, \"yyyy\", options);\n}\nvar formatters = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    formatCaption: formatCaption,\n    formatDay: formatDay,\n    formatMonthCaption: formatMonthCaption,\n    formatWeekNumber: formatWeekNumber,\n    formatWeekdayName: formatWeekdayName,\n    formatYearCaption: formatYearCaption\n});\n/**\n * The default ARIA label for the day button.\n */ var labelDay = function(day, activeModifiers, options) {\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__.format)(day, \"do MMMM (EEEE)\", options);\n};\n/**\n * The default ARIA label for the WeekNumber element.\n */ var labelMonthDropdown = function() {\n    return \"Month: \";\n};\n/**\n * The default ARIA label for next month button in navigation\n */ var labelNext = function() {\n    return \"Go to next month\";\n};\n/**\n * The default ARIA label for previous month button in navigation\n */ var labelPrevious = function() {\n    return \"Go to previous month\";\n};\n/**\n * The default ARIA label for the Weekday element.\n */ var labelWeekday = function(day, options) {\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__.format)(day, \"cccc\", options);\n};\n/**\n * The default ARIA label for the WeekNumber element.\n */ var labelWeekNumber = function(n) {\n    return \"Week n. \".concat(n);\n};\n/**\n * The default ARIA label for the WeekNumber element.\n */ var labelYearDropdown = function() {\n    return \"Year: \";\n};\nvar labels = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    labelDay: labelDay,\n    labelMonthDropdown: labelMonthDropdown,\n    labelNext: labelNext,\n    labelPrevious: labelPrevious,\n    labelWeekNumber: labelWeekNumber,\n    labelWeekday: labelWeekday,\n    labelYearDropdown: labelYearDropdown\n});\n/**\n * Returns the default values to use in the DayPickerContext, in case they are\n * not passed down with the DayPicker initial props.\n */ function getDefaultContextValues() {\n    var captionLayout = \"buttons\";\n    var classNames = defaultClassNames;\n    var locale = date_fns_locale__WEBPACK_IMPORTED_MODULE_2__.enUS;\n    var modifiersClassNames = {};\n    var modifiers = {};\n    var numberOfMonths = 1;\n    var styles = {};\n    var today = new Date();\n    return {\n        captionLayout: captionLayout,\n        classNames: classNames,\n        formatters: formatters,\n        labels: labels,\n        locale: locale,\n        modifiersClassNames: modifiersClassNames,\n        modifiers: modifiers,\n        numberOfMonths: numberOfMonths,\n        styles: styles,\n        today: today,\n        mode: \"default\"\n    };\n}\n/** Return the `fromDate` and `toDate` prop values values parsing the DayPicker props. */ function parseFromToProps(props) {\n    var fromYear = props.fromYear, toYear = props.toYear, fromMonth = props.fromMonth, toMonth = props.toMonth;\n    var fromDate = props.fromDate, toDate = props.toDate;\n    if (fromMonth) {\n        fromDate = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__.startOfMonth)(fromMonth);\n    } else if (fromYear) {\n        fromDate = new Date(fromYear, 0, 1);\n    }\n    if (toMonth) {\n        toDate = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.endOfMonth)(toMonth);\n    } else if (toYear) {\n        toDate = new Date(toYear, 11, 31);\n    }\n    return {\n        fromDate: fromDate ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_5__.startOfDay)(fromDate) : undefined,\n        toDate: toDate ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_5__.startOfDay)(toDate) : undefined\n    };\n}\n/**\n * The DayPicker context shares the props passed to DayPicker within internal\n * and custom components. It is used to set the default values and perform\n * one-time calculations required to render the days.\n *\n * Access to this context from the {@link useDayPicker} hook.\n */ var DayPickerContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\n/**\n * The provider for the {@link DayPickerContext}, assigning the defaults from the\n * initial DayPicker props.\n */ function DayPickerProvider(props) {\n    var _a;\n    var initialProps = props.initialProps;\n    var defaultContextValues = getDefaultContextValues();\n    var _b = parseFromToProps(initialProps), fromDate = _b.fromDate, toDate = _b.toDate;\n    var captionLayout = (_a = initialProps.captionLayout) !== null && _a !== void 0 ? _a : defaultContextValues.captionLayout;\n    if (captionLayout !== \"buttons\" && (!fromDate || !toDate)) {\n        // When no from/to dates are set, the caption is always buttons\n        captionLayout = \"buttons\";\n    }\n    var onSelect;\n    if (isDayPickerSingle(initialProps) || isDayPickerMultiple(initialProps) || isDayPickerRange(initialProps)) {\n        onSelect = initialProps.onSelect;\n    }\n    var value = __assign(__assign(__assign({}, defaultContextValues), initialProps), {\n        captionLayout: captionLayout,\n        classNames: __assign(__assign({}, defaultContextValues.classNames), initialProps.classNames),\n        components: __assign({}, initialProps.components),\n        formatters: __assign(__assign({}, defaultContextValues.formatters), initialProps.formatters),\n        fromDate: fromDate,\n        labels: __assign(__assign({}, defaultContextValues.labels), initialProps.labels),\n        mode: initialProps.mode || defaultContextValues.mode,\n        modifiers: __assign(__assign({}, defaultContextValues.modifiers), initialProps.modifiers),\n        modifiersClassNames: __assign(__assign({}, defaultContextValues.modifiersClassNames), initialProps.modifiersClassNames),\n        onSelect: onSelect,\n        styles: __assign(__assign({}, defaultContextValues.styles), initialProps.styles),\n        toDate: toDate\n    });\n    return jsxRuntimeExports.jsx(DayPickerContext.Provider, {\n        value: value,\n        children: props.children\n    });\n}\n/**\n * Hook to access the {@link DayPickerContextValue}.\n *\n * Use the DayPicker context to access to the props passed to DayPicker inside\n * internal or custom components.\n */ function useDayPicker() {\n    var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(DayPickerContext);\n    if (!context) {\n        throw new Error(\"useDayPicker must be used within a DayPickerProvider.\");\n    }\n    return context;\n}\n/** Render the caption for the displayed month. This component is used when `captionLayout=\"buttons\"`. */ function CaptionLabel(props) {\n    var _a = useDayPicker(), locale = _a.locale, classNames = _a.classNames, styles = _a.styles, formatCaption = _a.formatters.formatCaption;\n    return jsxRuntimeExports.jsx(\"div\", {\n        className: classNames.caption_label,\n        style: styles.caption_label,\n        \"aria-live\": \"polite\",\n        role: \"presentation\",\n        id: props.id,\n        children: formatCaption(props.displayMonth, {\n            locale: locale\n        })\n    });\n}\n/**\n * Render the icon in the styled drop-down.\n */ function IconDropdown(props) {\n    return jsxRuntimeExports.jsx(\"svg\", __assign({\n        width: \"8px\",\n        height: \"8px\",\n        viewBox: \"0 0 120 120\",\n        \"data-testid\": \"iconDropdown\"\n    }, props, {\n        children: jsxRuntimeExports.jsx(\"path\", {\n            d: \"M4.22182541,48.2218254 C8.44222828,44.0014225 15.2388494,43.9273804 19.5496459,47.9996989 L19.7781746,48.2218254 L60,88.443 L100.221825,48.2218254 C104.442228,44.0014225 111.238849,43.9273804 115.549646,47.9996989 L115.778175,48.2218254 C119.998577,52.4422283 120.07262,59.2388494 116.000301,63.5496459 L115.778175,63.7781746 L67.7781746,111.778175 C63.5577717,115.998577 56.7611506,116.07262 52.4503541,112.000301 L52.2218254,111.778175 L4.22182541,63.7781746 C-0.0739418023,59.4824074 -0.0739418023,52.5175926 4.22182541,48.2218254 Z\",\n            fill: \"currentColor\",\n            fillRule: \"nonzero\"\n        })\n    }));\n}\n/**\n * Render a styled select component – displaying a caption and a custom\n * drop-down icon.\n */ function Dropdown(props) {\n    var _a, _b;\n    var onChange = props.onChange, value = props.value, children = props.children, caption = props.caption, className = props.className, style = props.style;\n    var dayPicker = useDayPicker();\n    var IconDropdownComponent = (_b = (_a = dayPicker.components) === null || _a === void 0 ? void 0 : _a.IconDropdown) !== null && _b !== void 0 ? _b : IconDropdown;\n    return jsxRuntimeExports.jsxs(\"div\", {\n        className: className,\n        style: style,\n        children: [\n            jsxRuntimeExports.jsx(\"span\", {\n                className: dayPicker.classNames.vhidden,\n                children: props[\"aria-label\"]\n            }),\n            jsxRuntimeExports.jsx(\"select\", {\n                name: props.name,\n                \"aria-label\": props[\"aria-label\"],\n                className: dayPicker.classNames.dropdown,\n                style: dayPicker.styles.dropdown,\n                value: value,\n                onChange: onChange,\n                children: children\n            }),\n            jsxRuntimeExports.jsxs(\"div\", {\n                className: dayPicker.classNames.caption_label,\n                style: dayPicker.styles.caption_label,\n                \"aria-hidden\": \"true\",\n                children: [\n                    caption,\n                    jsxRuntimeExports.jsx(IconDropdownComponent, {\n                        className: dayPicker.classNames.dropdown_icon,\n                        style: dayPicker.styles.dropdown_icon\n                    })\n                ]\n            })\n        ]\n    });\n}\n/** Render the dropdown to navigate between months. */ function MonthsDropdown(props) {\n    var _a;\n    var _b = useDayPicker(), fromDate = _b.fromDate, toDate = _b.toDate, styles = _b.styles, locale = _b.locale, formatMonthCaption = _b.formatters.formatMonthCaption, classNames = _b.classNames, components = _b.components, labelMonthDropdown = _b.labels.labelMonthDropdown;\n    // Dropdown should appear only when both from/toDate is set\n    if (!fromDate) return jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});\n    if (!toDate) return jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});\n    var dropdownMonths = [];\n    if ((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_6__.isSameYear)(fromDate, toDate)) {\n        // only display the months included in the range\n        var date = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__.startOfMonth)(fromDate);\n        for(var month = fromDate.getMonth(); month <= toDate.getMonth(); month++){\n            dropdownMonths.push((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_7__.setMonth)(date, month));\n        }\n    } else {\n        // display all the 12 months\n        var date = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__.startOfMonth)(new Date()); // Any date should be OK, as we just need the year\n        for(var month = 0; month <= 11; month++){\n            dropdownMonths.push((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_7__.setMonth)(date, month));\n        }\n    }\n    var handleChange = function(e) {\n        var selectedMonth = Number(e.target.value);\n        var newMonth = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_7__.setMonth)((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__.startOfMonth)(props.displayMonth), selectedMonth);\n        props.onChange(newMonth);\n    };\n    var DropdownComponent = (_a = components === null || components === void 0 ? void 0 : components.Dropdown) !== null && _a !== void 0 ? _a : Dropdown;\n    return jsxRuntimeExports.jsx(DropdownComponent, {\n        name: \"months\",\n        \"aria-label\": labelMonthDropdown(),\n        className: classNames.dropdown_month,\n        style: styles.dropdown_month,\n        onChange: handleChange,\n        value: props.displayMonth.getMonth(),\n        caption: formatMonthCaption(props.displayMonth, {\n            locale: locale\n        }),\n        children: dropdownMonths.map(function(m) {\n            return jsxRuntimeExports.jsx(\"option\", {\n                value: m.getMonth(),\n                children: formatMonthCaption(m, {\n                    locale: locale\n                })\n            }, m.getMonth());\n        })\n    });\n}\n/**\n * Render a dropdown to change the year. Take in account the `nav.fromDate` and\n * `toDate` from context.\n */ function YearsDropdown(props) {\n    var _a;\n    var displayMonth = props.displayMonth;\n    var _b = useDayPicker(), fromDate = _b.fromDate, toDate = _b.toDate, locale = _b.locale, styles = _b.styles, classNames = _b.classNames, components = _b.components, formatYearCaption = _b.formatters.formatYearCaption, labelYearDropdown = _b.labels.labelYearDropdown;\n    var years = [];\n    // Dropdown should appear only when both from/toDate is set\n    if (!fromDate) return jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});\n    if (!toDate) return jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});\n    var fromYear = fromDate.getFullYear();\n    var toYear = toDate.getFullYear();\n    for(var year = fromYear; year <= toYear; year++){\n        years.push((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_8__.setYear)((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_9__.startOfYear)(new Date()), year));\n    }\n    var handleChange = function(e) {\n        var newMonth = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_8__.setYear)((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__.startOfMonth)(displayMonth), Number(e.target.value));\n        props.onChange(newMonth);\n    };\n    var DropdownComponent = (_a = components === null || components === void 0 ? void 0 : components.Dropdown) !== null && _a !== void 0 ? _a : Dropdown;\n    return jsxRuntimeExports.jsx(DropdownComponent, {\n        name: \"years\",\n        \"aria-label\": labelYearDropdown(),\n        className: classNames.dropdown_year,\n        style: styles.dropdown_year,\n        onChange: handleChange,\n        value: displayMonth.getFullYear(),\n        caption: formatYearCaption(displayMonth, {\n            locale: locale\n        }),\n        children: years.map(function(year) {\n            return jsxRuntimeExports.jsx(\"option\", {\n                value: year.getFullYear(),\n                children: formatYearCaption(year, {\n                    locale: locale\n                })\n            }, year.getFullYear());\n        })\n    });\n}\n/**\n * Helper hook for using controlled/uncontrolled values from a component props.\n *\n * When the value is not controlled, pass `undefined` as `controlledValue` and\n * use the returned setter to update it.\n *\n * When the value is controlled, pass the controlled value as second\n * argument, which will be always returned as `value`.\n */ function useControlledValue(defaultValue, controlledValue) {\n    var _a = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultValue), uncontrolledValue = _a[0], setValue = _a[1];\n    var value = controlledValue === undefined ? uncontrolledValue : controlledValue;\n    return [\n        value,\n        setValue\n    ];\n}\n/** Return the initial month according to the given options. */ function getInitialMonth(context) {\n    var month = context.month, defaultMonth = context.defaultMonth, today = context.today;\n    var initialMonth = month || defaultMonth || today || new Date();\n    var toDate = context.toDate, fromDate = context.fromDate, _a = context.numberOfMonths, numberOfMonths = _a === void 0 ? 1 : _a;\n    // Fix the initialMonth if is after the to-date\n    if (toDate && (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_10__.differenceInCalendarMonths)(toDate, initialMonth) < 0) {\n        var offset = -1 * (numberOfMonths - 1);\n        initialMonth = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__.addMonths)(toDate, offset);\n    }\n    // Fix the initialMonth if is before the from-date\n    if (fromDate && (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_10__.differenceInCalendarMonths)(initialMonth, fromDate) < 0) {\n        initialMonth = fromDate;\n    }\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__.startOfMonth)(initialMonth);\n}\n/** Controls the navigation state. */ function useNavigationState() {\n    var context = useDayPicker();\n    var initialMonth = getInitialMonth(context);\n    var _a = useControlledValue(initialMonth, context.month), month = _a[0], setMonth = _a[1];\n    var goToMonth = function(date) {\n        var _a;\n        if (context.disableNavigation) return;\n        var month = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__.startOfMonth)(date);\n        setMonth(month);\n        (_a = context.onMonthChange) === null || _a === void 0 ? void 0 : _a.call(context, month);\n    };\n    return [\n        month,\n        goToMonth\n    ];\n}\n/**\n * Return the months to display in the component according to the number of\n * months and the from/to date.\n */ function getDisplayMonths(month, _a) {\n    var reverseMonths = _a.reverseMonths, numberOfMonths = _a.numberOfMonths;\n    var start = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__.startOfMonth)(month);\n    var end = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__.startOfMonth)((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__.addMonths)(start, numberOfMonths));\n    var monthsDiff = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_10__.differenceInCalendarMonths)(end, start);\n    var months = [];\n    for(var i = 0; i < monthsDiff; i++){\n        var nextMonth = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__.addMonths)(start, i);\n        months.push(nextMonth);\n    }\n    if (reverseMonths) months = months.reverse();\n    return months;\n}\n/**\n * Returns the next month the user can navigate to according to the given\n * options.\n *\n * Please note that the next month is not always the next calendar month:\n *\n * - if after the `toDate` range, is undefined;\n * - if the navigation is paged, is the number of months displayed ahead.\n *\n */ function getNextMonth(startingMonth, options) {\n    if (options.disableNavigation) {\n        return undefined;\n    }\n    var toDate = options.toDate, pagedNavigation = options.pagedNavigation, _a = options.numberOfMonths, numberOfMonths = _a === void 0 ? 1 : _a;\n    var offset = pagedNavigation ? numberOfMonths : 1;\n    var month = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__.startOfMonth)(startingMonth);\n    if (!toDate) {\n        return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__.addMonths)(month, offset);\n    }\n    var monthsDiff = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_10__.differenceInCalendarMonths)(toDate, startingMonth);\n    if (monthsDiff < numberOfMonths) {\n        return undefined;\n    }\n    // Jump forward as the number of months when paged navigation\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__.addMonths)(month, offset);\n}\n/**\n * Returns the next previous the user can navigate to, according to the given\n * options.\n *\n * Please note that the previous month is not always the previous calendar\n * month:\n *\n * - if before the `fromDate` date, is `undefined`;\n * - if the navigation is paged, is the number of months displayed before.\n *\n */ function getPreviousMonth(startingMonth, options) {\n    if (options.disableNavigation) {\n        return undefined;\n    }\n    var fromDate = options.fromDate, pagedNavigation = options.pagedNavigation, _a = options.numberOfMonths, numberOfMonths = _a === void 0 ? 1 : _a;\n    var offset = pagedNavigation ? numberOfMonths : 1;\n    var month = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__.startOfMonth)(startingMonth);\n    if (!fromDate) {\n        return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__.addMonths)(month, -offset);\n    }\n    var monthsDiff = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_10__.differenceInCalendarMonths)(month, fromDate);\n    if (monthsDiff <= 0) {\n        return undefined;\n    }\n    // Jump back as the number of months when paged navigation\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__.addMonths)(month, -offset);\n}\n/**\n * The Navigation context shares details and methods to navigate the months in DayPicker.\n * Access this context from the {@link useNavigation} hook.\n */ var NavigationContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\n/** Provides the values for the {@link NavigationContext}. */ function NavigationProvider(props) {\n    var dayPicker = useDayPicker();\n    var _a = useNavigationState(), currentMonth = _a[0], goToMonth = _a[1];\n    var displayMonths = getDisplayMonths(currentMonth, dayPicker);\n    var nextMonth = getNextMonth(currentMonth, dayPicker);\n    var previousMonth = getPreviousMonth(currentMonth, dayPicker);\n    var isDateDisplayed = function(date) {\n        return displayMonths.some(function(displayMonth) {\n            return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_12__.isSameMonth)(date, displayMonth);\n        });\n    };\n    var goToDate = function(date, refDate) {\n        if (isDateDisplayed(date)) {\n            return;\n        }\n        if (refDate && (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_13__.isBefore)(date, refDate)) {\n            goToMonth((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__.addMonths)(date, 1 + dayPicker.numberOfMonths * -1));\n        } else {\n            goToMonth(date);\n        }\n    };\n    var value = {\n        currentMonth: currentMonth,\n        displayMonths: displayMonths,\n        goToMonth: goToMonth,\n        goToDate: goToDate,\n        previousMonth: previousMonth,\n        nextMonth: nextMonth,\n        isDateDisplayed: isDateDisplayed\n    };\n    return jsxRuntimeExports.jsx(NavigationContext.Provider, {\n        value: value,\n        children: props.children\n    });\n}\n/**\n * Hook to access the {@link NavigationContextValue}. Use this hook to navigate\n * between months or years in DayPicker.\n *\n * This hook is meant to be used inside internal or custom components.\n */ function useNavigation() {\n    var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(NavigationContext);\n    if (!context) {\n        throw new Error(\"useNavigation must be used within a NavigationProvider\");\n    }\n    return context;\n}\n/**\n * Render a caption with the dropdowns to navigate between months and years.\n */ function CaptionDropdowns(props) {\n    var _a;\n    var _b = useDayPicker(), classNames = _b.classNames, styles = _b.styles, components = _b.components;\n    var goToMonth = useNavigation().goToMonth;\n    var handleMonthChange = function(newMonth) {\n        goToMonth((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__.addMonths)(newMonth, props.displayIndex ? -props.displayIndex : 0));\n    };\n    var CaptionLabelComponent = (_a = components === null || components === void 0 ? void 0 : components.CaptionLabel) !== null && _a !== void 0 ? _a : CaptionLabel;\n    var captionLabel = jsxRuntimeExports.jsx(CaptionLabelComponent, {\n        id: props.id,\n        displayMonth: props.displayMonth\n    });\n    return jsxRuntimeExports.jsxs(\"div\", {\n        className: classNames.caption_dropdowns,\n        style: styles.caption_dropdowns,\n        children: [\n            jsxRuntimeExports.jsx(\"div\", {\n                className: classNames.vhidden,\n                children: captionLabel\n            }),\n            jsxRuntimeExports.jsx(MonthsDropdown, {\n                onChange: handleMonthChange,\n                displayMonth: props.displayMonth\n            }),\n            jsxRuntimeExports.jsx(YearsDropdown, {\n                onChange: handleMonthChange,\n                displayMonth: props.displayMonth\n            })\n        ]\n    });\n}\n/**\n * Render the \"previous month\" button in the navigation.\n */ function IconLeft(props) {\n    return jsxRuntimeExports.jsx(\"svg\", __assign({\n        width: \"16px\",\n        height: \"16px\",\n        viewBox: \"0 0 120 120\"\n    }, props, {\n        children: jsxRuntimeExports.jsx(\"path\", {\n            d: \"M69.490332,3.34314575 C72.6145263,0.218951416 77.6798462,0.218951416 80.8040405,3.34314575 C83.8617626,6.40086786 83.9268205,11.3179931 80.9992143,14.4548388 L80.8040405,14.6568542 L35.461,60 L80.8040405,105.343146 C83.8617626,108.400868 83.9268205,113.317993 80.9992143,116.454839 L80.8040405,116.656854 C77.7463184,119.714576 72.8291931,119.779634 69.6923475,116.852028 L69.490332,116.656854 L18.490332,65.6568542 C15.4326099,62.5991321 15.367552,57.6820069 18.2951583,54.5451612 L18.490332,54.3431458 L69.490332,3.34314575 Z\",\n            fill: \"currentColor\",\n            fillRule: \"nonzero\"\n        })\n    }));\n}\n/**\n * Render the \"next month\" button in the navigation.\n */ function IconRight(props) {\n    return jsxRuntimeExports.jsx(\"svg\", __assign({\n        width: \"16px\",\n        height: \"16px\",\n        viewBox: \"0 0 120 120\"\n    }, props, {\n        children: jsxRuntimeExports.jsx(\"path\", {\n            d: \"M49.8040405,3.34314575 C46.6798462,0.218951416 41.6145263,0.218951416 38.490332,3.34314575 C35.4326099,6.40086786 35.367552,11.3179931 38.2951583,14.4548388 L38.490332,14.6568542 L83.8333725,60 L38.490332,105.343146 C35.4326099,108.400868 35.367552,113.317993 38.2951583,116.454839 L38.490332,116.656854 C41.5480541,119.714576 46.4651794,119.779634 49.602025,116.852028 L49.8040405,116.656854 L100.804041,65.6568542 C103.861763,62.5991321 103.926821,57.6820069 100.999214,54.5451612 L100.804041,54.3431458 L49.8040405,3.34314575 Z\",\n            fill: \"currentColor\"\n        })\n    }));\n}\n/** Render a button HTML element applying the reset class name. */ var Button = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function(props, ref) {\n    var _a = useDayPicker(), classNames = _a.classNames, styles = _a.styles;\n    var classNamesArr = [\n        classNames.button_reset,\n        classNames.button\n    ];\n    if (props.className) {\n        classNamesArr.push(props.className);\n    }\n    var className = classNamesArr.join(\" \");\n    var style = __assign(__assign({}, styles.button_reset), styles.button);\n    if (props.style) {\n        Object.assign(style, props.style);\n    }\n    return jsxRuntimeExports.jsx(\"button\", __assign({}, props, {\n        ref: ref,\n        type: \"button\",\n        className: className,\n        style: style\n    }));\n});\n/** A component rendering the navigation buttons or the drop-downs. */ function Navigation(props) {\n    var _a, _b;\n    var _c = useDayPicker(), dir = _c.dir, locale = _c.locale, classNames = _c.classNames, styles = _c.styles, _d = _c.labels, labelPrevious = _d.labelPrevious, labelNext = _d.labelNext, components = _c.components;\n    if (!props.nextMonth && !props.previousMonth) {\n        return jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});\n    }\n    var previousLabel = labelPrevious(props.previousMonth, {\n        locale: locale\n    });\n    var previousClassName = [\n        classNames.nav_button,\n        classNames.nav_button_previous\n    ].join(\" \");\n    var nextLabel = labelNext(props.nextMonth, {\n        locale: locale\n    });\n    var nextClassName = [\n        classNames.nav_button,\n        classNames.nav_button_next\n    ].join(\" \");\n    var IconRightComponent = (_a = components === null || components === void 0 ? void 0 : components.IconRight) !== null && _a !== void 0 ? _a : IconRight;\n    var IconLeftComponent = (_b = components === null || components === void 0 ? void 0 : components.IconLeft) !== null && _b !== void 0 ? _b : IconLeft;\n    return jsxRuntimeExports.jsxs(\"div\", {\n        className: classNames.nav,\n        style: styles.nav,\n        children: [\n            !props.hidePrevious && jsxRuntimeExports.jsx(Button, {\n                name: \"previous-month\",\n                \"aria-label\": previousLabel,\n                className: previousClassName,\n                style: styles.nav_button_previous,\n                disabled: !props.previousMonth,\n                onClick: props.onPreviousClick,\n                children: dir === \"rtl\" ? jsxRuntimeExports.jsx(IconRightComponent, {\n                    className: classNames.nav_icon,\n                    style: styles.nav_icon\n                }) : jsxRuntimeExports.jsx(IconLeftComponent, {\n                    className: classNames.nav_icon,\n                    style: styles.nav_icon\n                })\n            }),\n            !props.hideNext && jsxRuntimeExports.jsx(Button, {\n                name: \"next-month\",\n                \"aria-label\": nextLabel,\n                className: nextClassName,\n                style: styles.nav_button_next,\n                disabled: !props.nextMonth,\n                onClick: props.onNextClick,\n                children: dir === \"rtl\" ? jsxRuntimeExports.jsx(IconLeftComponent, {\n                    className: classNames.nav_icon,\n                    style: styles.nav_icon\n                }) : jsxRuntimeExports.jsx(IconRightComponent, {\n                    className: classNames.nav_icon,\n                    style: styles.nav_icon\n                })\n            })\n        ]\n    });\n}\n/**\n * Render a caption with a button-based navigation.\n */ function CaptionNavigation(props) {\n    var numberOfMonths = useDayPicker().numberOfMonths;\n    var _a = useNavigation(), previousMonth = _a.previousMonth, nextMonth = _a.nextMonth, goToMonth = _a.goToMonth, displayMonths = _a.displayMonths;\n    var displayIndex = displayMonths.findIndex(function(month) {\n        return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_12__.isSameMonth)(props.displayMonth, month);\n    });\n    var isFirst = displayIndex === 0;\n    var isLast = displayIndex === displayMonths.length - 1;\n    var hideNext = numberOfMonths > 1 && (isFirst || !isLast);\n    var hidePrevious = numberOfMonths > 1 && (isLast || !isFirst);\n    var handlePreviousClick = function() {\n        if (!previousMonth) return;\n        goToMonth(previousMonth);\n    };\n    var handleNextClick = function() {\n        if (!nextMonth) return;\n        goToMonth(nextMonth);\n    };\n    return jsxRuntimeExports.jsx(Navigation, {\n        displayMonth: props.displayMonth,\n        hideNext: hideNext,\n        hidePrevious: hidePrevious,\n        nextMonth: nextMonth,\n        previousMonth: previousMonth,\n        onPreviousClick: handlePreviousClick,\n        onNextClick: handleNextClick\n    });\n}\n/**\n * Render the caption of a month. The caption has a different layout when\n * setting the {@link DayPickerBase.captionLayout} prop.\n */ function Caption(props) {\n    var _a;\n    var _b = useDayPicker(), classNames = _b.classNames, disableNavigation = _b.disableNavigation, styles = _b.styles, captionLayout = _b.captionLayout, components = _b.components;\n    var CaptionLabelComponent = (_a = components === null || components === void 0 ? void 0 : components.CaptionLabel) !== null && _a !== void 0 ? _a : CaptionLabel;\n    var caption;\n    if (disableNavigation) {\n        caption = jsxRuntimeExports.jsx(CaptionLabelComponent, {\n            id: props.id,\n            displayMonth: props.displayMonth\n        });\n    } else if (captionLayout === \"dropdown\") {\n        caption = jsxRuntimeExports.jsx(CaptionDropdowns, {\n            displayMonth: props.displayMonth,\n            id: props.id\n        });\n    } else if (captionLayout === \"dropdown-buttons\") {\n        caption = jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {\n            children: [\n                jsxRuntimeExports.jsx(CaptionDropdowns, {\n                    displayMonth: props.displayMonth,\n                    displayIndex: props.displayIndex,\n                    id: props.id\n                }),\n                jsxRuntimeExports.jsx(CaptionNavigation, {\n                    displayMonth: props.displayMonth,\n                    displayIndex: props.displayIndex,\n                    id: props.id\n                })\n            ]\n        });\n    } else {\n        caption = jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {\n            children: [\n                jsxRuntimeExports.jsx(CaptionLabelComponent, {\n                    id: props.id,\n                    displayMonth: props.displayMonth,\n                    displayIndex: props.displayIndex\n                }),\n                jsxRuntimeExports.jsx(CaptionNavigation, {\n                    displayMonth: props.displayMonth,\n                    id: props.id\n                })\n            ]\n        });\n    }\n    return jsxRuntimeExports.jsx(\"div\", {\n        className: classNames.caption,\n        style: styles.caption,\n        children: caption\n    });\n}\n/** Render the Footer component (empty as default).*/ // eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction Footer(props) {\n    var _a = useDayPicker(), footer = _a.footer, styles = _a.styles, tfoot = _a.classNames.tfoot;\n    if (!footer) return jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});\n    return jsxRuntimeExports.jsx(\"tfoot\", {\n        className: tfoot,\n        style: styles.tfoot,\n        children: jsxRuntimeExports.jsx(\"tr\", {\n            children: jsxRuntimeExports.jsx(\"td\", {\n                colSpan: 8,\n                children: footer\n            })\n        })\n    });\n}\n/**\n * Generate a series of 7 days, starting from the week, to use for formatting\n * the weekday names (Monday, Tuesday, etc.).\n */ function getWeekdays(locale, /** The index of the first day of the week (0 - Sunday). */ weekStartsOn, /** Use ISOWeek instead of locale/ */ ISOWeek) {\n    var start = ISOWeek ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_14__.startOfISOWeek)(new Date()) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_15__.startOfWeek)(new Date(), {\n        locale: locale,\n        weekStartsOn: weekStartsOn\n    });\n    var days = [];\n    for(var i = 0; i < 7; i++){\n        var day = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__.addDays)(start, i);\n        days.push(day);\n    }\n    return days;\n}\n/**\n * Render the HeadRow component - i.e. the table head row with the weekday names.\n */ function HeadRow() {\n    var _a = useDayPicker(), classNames = _a.classNames, styles = _a.styles, showWeekNumber = _a.showWeekNumber, locale = _a.locale, weekStartsOn = _a.weekStartsOn, ISOWeek = _a.ISOWeek, formatWeekdayName = _a.formatters.formatWeekdayName, labelWeekday = _a.labels.labelWeekday;\n    var weekdays = getWeekdays(locale, weekStartsOn, ISOWeek);\n    return jsxRuntimeExports.jsxs(\"tr\", {\n        style: styles.head_row,\n        className: classNames.head_row,\n        children: [\n            showWeekNumber && jsxRuntimeExports.jsx(\"td\", {\n                style: styles.head_cell,\n                className: classNames.head_cell\n            }),\n            weekdays.map(function(weekday, i) {\n                return jsxRuntimeExports.jsx(\"th\", {\n                    scope: \"col\",\n                    className: classNames.head_cell,\n                    style: styles.head_cell,\n                    \"aria-label\": labelWeekday(weekday, {\n                        locale: locale\n                    }),\n                    children: formatWeekdayName(weekday, {\n                        locale: locale\n                    })\n                }, i);\n            })\n        ]\n    });\n}\n/** Render the table head. */ function Head() {\n    var _a;\n    var _b = useDayPicker(), classNames = _b.classNames, styles = _b.styles, components = _b.components;\n    var HeadRowComponent = (_a = components === null || components === void 0 ? void 0 : components.HeadRow) !== null && _a !== void 0 ? _a : HeadRow;\n    return jsxRuntimeExports.jsx(\"thead\", {\n        style: styles.head,\n        className: classNames.head,\n        children: jsxRuntimeExports.jsx(HeadRowComponent, {})\n    });\n}\n/** Render the content of the day cell. */ function DayContent(props) {\n    var _a = useDayPicker(), locale = _a.locale, formatDay = _a.formatters.formatDay;\n    return jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {\n        children: formatDay(props.date, {\n            locale: locale\n        })\n    });\n}\n/**\n * The SelectMultiple context shares details about the selected days when in\n * multiple selection mode.\n *\n * Access this context from the {@link useSelectMultiple} hook.\n */ var SelectMultipleContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\n/** Provides the values for the {@link SelectMultipleContext}. */ function SelectMultipleProvider(props) {\n    if (!isDayPickerMultiple(props.initialProps)) {\n        var emptyContextValue = {\n            selected: undefined,\n            modifiers: {\n                disabled: []\n            }\n        };\n        return jsxRuntimeExports.jsx(SelectMultipleContext.Provider, {\n            value: emptyContextValue,\n            children: props.children\n        });\n    }\n    return jsxRuntimeExports.jsx(SelectMultipleProviderInternal, {\n        initialProps: props.initialProps,\n        children: props.children\n    });\n}\nfunction SelectMultipleProviderInternal(_a) {\n    var initialProps = _a.initialProps, children = _a.children;\n    var selected = initialProps.selected, min = initialProps.min, max = initialProps.max;\n    var onDayClick = function(day, activeModifiers, e) {\n        var _a, _b;\n        (_a = initialProps.onDayClick) === null || _a === void 0 ? void 0 : _a.call(initialProps, day, activeModifiers, e);\n        var isMinSelected = Boolean(activeModifiers.selected && min && (selected === null || selected === void 0 ? void 0 : selected.length) === min);\n        if (isMinSelected) {\n            return;\n        }\n        var isMaxSelected = Boolean(!activeModifiers.selected && max && (selected === null || selected === void 0 ? void 0 : selected.length) === max);\n        if (isMaxSelected) {\n            return;\n        }\n        var selectedDays = selected ? __spreadArray([], selected, true) : [];\n        if (activeModifiers.selected) {\n            var index = selectedDays.findIndex(function(selectedDay) {\n                return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__.isSameDay)(day, selectedDay);\n            });\n            selectedDays.splice(index, 1);\n        } else {\n            selectedDays.push(day);\n        }\n        (_b = initialProps.onSelect) === null || _b === void 0 ? void 0 : _b.call(initialProps, selectedDays, day, activeModifiers, e);\n    };\n    var modifiers = {\n        disabled: []\n    };\n    if (selected) {\n        modifiers.disabled.push(function(day) {\n            var isMaxSelected = max && selected.length > max - 1;\n            var isSelected = selected.some(function(selectedDay) {\n                return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__.isSameDay)(selectedDay, day);\n            });\n            return Boolean(isMaxSelected && !isSelected);\n        });\n    }\n    var contextValue = {\n        selected: selected,\n        onDayClick: onDayClick,\n        modifiers: modifiers\n    };\n    return jsxRuntimeExports.jsx(SelectMultipleContext.Provider, {\n        value: contextValue,\n        children: children\n    });\n}\n/**\n * Hook to access the {@link SelectMultipleContextValue}.\n *\n * This hook is meant to be used inside internal or custom components.\n */ function useSelectMultiple() {\n    var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SelectMultipleContext);\n    if (!context) {\n        throw new Error(\"useSelectMultiple must be used within a SelectMultipleProvider\");\n    }\n    return context;\n}\n/**\n * Add a day to an existing range.\n *\n * The returned range takes in account the `undefined` values and if the added\n * day is already present in the range.\n */ function addToRange(day, range) {\n    var _a = range || {}, from = _a.from, to = _a.to;\n    if (from && to) {\n        if ((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__.isSameDay)(to, day) && (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__.isSameDay)(from, day)) {\n            return undefined;\n        }\n        if ((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__.isSameDay)(to, day)) {\n            return {\n                from: to,\n                to: undefined\n            };\n        }\n        if ((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__.isSameDay)(from, day)) {\n            return undefined;\n        }\n        if ((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_18__.isAfter)(from, day)) {\n            return {\n                from: day,\n                to: to\n            };\n        }\n        return {\n            from: from,\n            to: day\n        };\n    }\n    if (to) {\n        if ((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_18__.isAfter)(day, to)) {\n            return {\n                from: to,\n                to: day\n            };\n        }\n        return {\n            from: day,\n            to: to\n        };\n    }\n    if (from) {\n        if ((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_13__.isBefore)(day, from)) {\n            return {\n                from: day,\n                to: from\n            };\n        }\n        return {\n            from: from,\n            to: day\n        };\n    }\n    return {\n        from: day,\n        to: undefined\n    };\n}\n/**\n * The SelectRange context shares details about the selected days when in\n * range selection mode.\n *\n * Access this context from the {@link useSelectRange} hook.\n */ var SelectRangeContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\n/** Provides the values for the {@link SelectRangeProvider}. */ function SelectRangeProvider(props) {\n    if (!isDayPickerRange(props.initialProps)) {\n        var emptyContextValue = {\n            selected: undefined,\n            modifiers: {\n                range_start: [],\n                range_end: [],\n                range_middle: [],\n                disabled: []\n            }\n        };\n        return jsxRuntimeExports.jsx(SelectRangeContext.Provider, {\n            value: emptyContextValue,\n            children: props.children\n        });\n    }\n    return jsxRuntimeExports.jsx(SelectRangeProviderInternal, {\n        initialProps: props.initialProps,\n        children: props.children\n    });\n}\nfunction SelectRangeProviderInternal(_a) {\n    var initialProps = _a.initialProps, children = _a.children;\n    var selected = initialProps.selected;\n    var _b = selected || {}, selectedFrom = _b.from, selectedTo = _b.to;\n    var min = initialProps.min;\n    var max = initialProps.max;\n    var onDayClick = function(day, activeModifiers, e) {\n        var _a, _b;\n        (_a = initialProps.onDayClick) === null || _a === void 0 ? void 0 : _a.call(initialProps, day, activeModifiers, e);\n        var newRange = addToRange(day, selected);\n        (_b = initialProps.onSelect) === null || _b === void 0 ? void 0 : _b.call(initialProps, newRange, day, activeModifiers, e);\n    };\n    var modifiers = {\n        range_start: [],\n        range_end: [],\n        range_middle: [],\n        disabled: []\n    };\n    if (selectedFrom) {\n        modifiers.range_start = [\n            selectedFrom\n        ];\n        if (!selectedTo) {\n            modifiers.range_end = [\n                selectedFrom\n            ];\n        } else {\n            modifiers.range_end = [\n                selectedTo\n            ];\n            if (!(0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__.isSameDay)(selectedFrom, selectedTo)) {\n                modifiers.range_middle = [\n                    {\n                        after: selectedFrom,\n                        before: selectedTo\n                    }\n                ];\n            }\n        }\n    } else if (selectedTo) {\n        modifiers.range_start = [\n            selectedTo\n        ];\n        modifiers.range_end = [\n            selectedTo\n        ];\n    }\n    if (min) {\n        if (selectedFrom && !selectedTo) {\n            modifiers.disabled.push({\n                after: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_19__.subDays)(selectedFrom, min - 1),\n                before: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__.addDays)(selectedFrom, min - 1)\n            });\n        }\n        if (selectedFrom && selectedTo) {\n            modifiers.disabled.push({\n                after: selectedFrom,\n                before: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__.addDays)(selectedFrom, min - 1)\n            });\n        }\n        if (!selectedFrom && selectedTo) {\n            modifiers.disabled.push({\n                after: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_19__.subDays)(selectedTo, min - 1),\n                before: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__.addDays)(selectedTo, min - 1)\n            });\n        }\n    }\n    if (max) {\n        if (selectedFrom && !selectedTo) {\n            modifiers.disabled.push({\n                before: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__.addDays)(selectedFrom, -max + 1)\n            });\n            modifiers.disabled.push({\n                after: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__.addDays)(selectedFrom, max - 1)\n            });\n        }\n        if (selectedFrom && selectedTo) {\n            var selectedCount = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__.differenceInCalendarDays)(selectedTo, selectedFrom) + 1;\n            var offset = max - selectedCount;\n            modifiers.disabled.push({\n                before: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_19__.subDays)(selectedFrom, offset)\n            });\n            modifiers.disabled.push({\n                after: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__.addDays)(selectedTo, offset)\n            });\n        }\n        if (!selectedFrom && selectedTo) {\n            modifiers.disabled.push({\n                before: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__.addDays)(selectedTo, -max + 1)\n            });\n            modifiers.disabled.push({\n                after: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__.addDays)(selectedTo, max - 1)\n            });\n        }\n    }\n    return jsxRuntimeExports.jsx(SelectRangeContext.Provider, {\n        value: {\n            selected: selected,\n            onDayClick: onDayClick,\n            modifiers: modifiers\n        },\n        children: children\n    });\n}\n/**\n * Hook to access the {@link SelectRangeContextValue}.\n *\n * This hook is meant to be used inside internal or custom components.\n */ function useSelectRange() {\n    var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SelectRangeContext);\n    if (!context) {\n        throw new Error(\"useSelectRange must be used within a SelectRangeProvider\");\n    }\n    return context;\n}\n/** Normalize to array a matcher input. */ function matcherToArray(matcher) {\n    if (Array.isArray(matcher)) {\n        return __spreadArray([], matcher, true);\n    } else if (matcher !== undefined) {\n        return [\n            matcher\n        ];\n    } else {\n        return [];\n    }\n}\n/** Create CustomModifiers from dayModifiers */ function getCustomModifiers(dayModifiers) {\n    var customModifiers = {};\n    Object.entries(dayModifiers).forEach(function(_a) {\n        var modifier = _a[0], matcher = _a[1];\n        customModifiers[modifier] = matcherToArray(matcher);\n    });\n    return customModifiers;\n}\n/** The name of the modifiers that are used internally by DayPicker. */ var InternalModifier;\n(function(InternalModifier) {\n    InternalModifier[\"Outside\"] = \"outside\";\n    /** Name of the modifier applied to the disabled days, using the `disabled` prop. */ InternalModifier[\"Disabled\"] = \"disabled\";\n    /** Name of the modifier applied to the selected days using the `selected` prop). */ InternalModifier[\"Selected\"] = \"selected\";\n    /** Name of the modifier applied to the hidden days using the `hidden` prop). */ InternalModifier[\"Hidden\"] = \"hidden\";\n    /** Name of the modifier applied to the day specified using the `today` prop). */ InternalModifier[\"Today\"] = \"today\";\n    /** The modifier applied to the day starting a selected range, when in range selection mode.  */ InternalModifier[\"RangeStart\"] = \"range_start\";\n    /** The modifier applied to the day ending a selected range, when in range selection mode.  */ InternalModifier[\"RangeEnd\"] = \"range_end\";\n    /** The modifier applied to the days between the start and the end of a selected range, when in range selection mode.  */ InternalModifier[\"RangeMiddle\"] = \"range_middle\";\n})(InternalModifier || (InternalModifier = {}));\nvar Selected = InternalModifier.Selected, Disabled = InternalModifier.Disabled, Hidden = InternalModifier.Hidden, Today = InternalModifier.Today, RangeEnd = InternalModifier.RangeEnd, RangeMiddle = InternalModifier.RangeMiddle, RangeStart = InternalModifier.RangeStart, Outside = InternalModifier.Outside;\n/** Return the {@link InternalModifiers} from the DayPicker and select contexts. */ function getInternalModifiers(dayPicker, selectMultiple, selectRange) {\n    var _a;\n    var internalModifiers = (_a = {}, _a[Selected] = matcherToArray(dayPicker.selected), _a[Disabled] = matcherToArray(dayPicker.disabled), _a[Hidden] = matcherToArray(dayPicker.hidden), _a[Today] = [\n        dayPicker.today\n    ], _a[RangeEnd] = [], _a[RangeMiddle] = [], _a[RangeStart] = [], _a[Outside] = [], _a);\n    if (dayPicker.fromDate) {\n        internalModifiers[Disabled].push({\n            before: dayPicker.fromDate\n        });\n    }\n    if (dayPicker.toDate) {\n        internalModifiers[Disabled].push({\n            after: dayPicker.toDate\n        });\n    }\n    if (isDayPickerMultiple(dayPicker)) {\n        internalModifiers[Disabled] = internalModifiers[Disabled].concat(selectMultiple.modifiers[Disabled]);\n    } else if (isDayPickerRange(dayPicker)) {\n        internalModifiers[Disabled] = internalModifiers[Disabled].concat(selectRange.modifiers[Disabled]);\n        internalModifiers[RangeStart] = selectRange.modifiers[RangeStart];\n        internalModifiers[RangeMiddle] = selectRange.modifiers[RangeMiddle];\n        internalModifiers[RangeEnd] = selectRange.modifiers[RangeEnd];\n    }\n    return internalModifiers;\n}\n/** The Modifiers context store the modifiers used in DayPicker. To access the value of this context, use {@link useModifiers}. */ var ModifiersContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\n/** Provide the value for the {@link ModifiersContext}. */ function ModifiersProvider(props) {\n    var dayPicker = useDayPicker();\n    var selectMultiple = useSelectMultiple();\n    var selectRange = useSelectRange();\n    var internalModifiers = getInternalModifiers(dayPicker, selectMultiple, selectRange);\n    var customModifiers = getCustomModifiers(dayPicker.modifiers);\n    var modifiers = __assign(__assign({}, internalModifiers), customModifiers);\n    return jsxRuntimeExports.jsx(ModifiersContext.Provider, {\n        value: modifiers,\n        children: props.children\n    });\n}\n/**\n * Return the modifiers used by DayPicker.\n *\n * This hook is meant to be used inside internal or custom components.\n * Requires to be wrapped into {@link ModifiersProvider}.\n *\n */ function useModifiers() {\n    var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ModifiersContext);\n    if (!context) {\n        throw new Error(\"useModifiers must be used within a ModifiersProvider\");\n    }\n    return context;\n}\n/** Returns true if `matcher` is of type {@link DateInterval}. */ function isDateInterval(matcher) {\n    return Boolean(matcher && typeof matcher === \"object\" && \"before\" in matcher && \"after\" in matcher);\n}\n/** Returns true if `value` is a {@link DateRange} type. */ function isDateRange(value) {\n    return Boolean(value && typeof value === \"object\" && \"from\" in value);\n}\n/** Returns true if `value` is of type {@link DateAfter}. */ function isDateAfterType(value) {\n    return Boolean(value && typeof value === \"object\" && \"after\" in value);\n}\n/** Returns true if `value` is of type {@link DateBefore}. */ function isDateBeforeType(value) {\n    return Boolean(value && typeof value === \"object\" && \"before\" in value);\n}\n/** Returns true if `value` is a {@link DayOfWeek} type. */ function isDayOfWeekType(value) {\n    return Boolean(value && typeof value === \"object\" && \"dayOfWeek\" in value);\n}\n/** Return `true` whether `date` is inside `range`. */ function isDateInRange(date, range) {\n    var _a;\n    var from = range.from, to = range.to;\n    if (from && to) {\n        var isRangeInverted = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__.differenceInCalendarDays)(to, from) < 0;\n        if (isRangeInverted) {\n            _a = [\n                to,\n                from\n            ], from = _a[0], to = _a[1];\n        }\n        var isInRange = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__.differenceInCalendarDays)(date, from) >= 0 && (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__.differenceInCalendarDays)(to, date) >= 0;\n        return isInRange;\n    }\n    if (to) {\n        return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__.isSameDay)(to, date);\n    }\n    if (from) {\n        return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__.isSameDay)(from, date);\n    }\n    return false;\n}\n/** Returns true if `value` is a Date type. */ function isDateType(value) {\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_21__.isDate)(value);\n}\n/** Returns true if `value` is an array of valid dates. */ function isArrayOfDates(value) {\n    return Array.isArray(value) && value.every(_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_21__.isDate);\n}\n/**\n * Returns whether a day matches against at least one of the given Matchers.\n *\n * ```\n * const day = new Date(2022, 5, 19);\n * const matcher1: DateRange = {\n *    from: new Date(2021, 12, 21),\n *    to: new Date(2021, 12, 30)\n * }\n * const matcher2: DateRange = {\n *    from: new Date(2022, 5, 1),\n *    to: new Date(2022, 5, 23)\n * }\n *\n * const isMatch(day, [matcher1, matcher2]); // true, since day is in the matcher1 range.\n * ```\n * */ function isMatch(day, matchers) {\n    return matchers.some(function(matcher) {\n        if (typeof matcher === \"boolean\") {\n            return matcher;\n        }\n        if (isDateType(matcher)) {\n            return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__.isSameDay)(day, matcher);\n        }\n        if (isArrayOfDates(matcher)) {\n            return matcher.includes(day);\n        }\n        if (isDateRange(matcher)) {\n            return isDateInRange(day, matcher);\n        }\n        if (isDayOfWeekType(matcher)) {\n            return matcher.dayOfWeek.includes(day.getDay());\n        }\n        if (isDateInterval(matcher)) {\n            var diffBefore = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__.differenceInCalendarDays)(matcher.before, day);\n            var diffAfter = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__.differenceInCalendarDays)(matcher.after, day);\n            var isDayBefore = diffBefore > 0;\n            var isDayAfter = diffAfter < 0;\n            var isClosedInterval = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_18__.isAfter)(matcher.before, matcher.after);\n            if (isClosedInterval) {\n                return isDayAfter && isDayBefore;\n            } else {\n                return isDayBefore || isDayAfter;\n            }\n        }\n        if (isDateAfterType(matcher)) {\n            return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__.differenceInCalendarDays)(day, matcher.after) > 0;\n        }\n        if (isDateBeforeType(matcher)) {\n            return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__.differenceInCalendarDays)(matcher.before, day) > 0;\n        }\n        if (typeof matcher === \"function\") {\n            return matcher(day);\n        }\n        return false;\n    });\n}\n/** Return the active modifiers for the given day. */ function getActiveModifiers(day, /** The modifiers to match for the given date. */ modifiers, /** The month where the day is displayed, to add the \"outside\" modifiers.  */ displayMonth) {\n    var matchedModifiers = Object.keys(modifiers).reduce(function(result, key) {\n        var modifier = modifiers[key];\n        if (isMatch(day, modifier)) {\n            result.push(key);\n        }\n        return result;\n    }, []);\n    var activeModifiers = {};\n    matchedModifiers.forEach(function(modifier) {\n        return activeModifiers[modifier] = true;\n    });\n    if (displayMonth && !(0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_12__.isSameMonth)(day, displayMonth)) {\n        activeModifiers.outside = true;\n    }\n    return activeModifiers;\n}\n/**\n * Returns the day that should be the target of the focus when DayPicker is\n * rendered the first time.\n *\n * TODO: this function doesn't consider if the day is outside the month. We\n * implemented this check in `useDayRender` but it should probably go here. See\n * https://github.com/gpbl/react-day-picker/pull/1576\n */ function getInitialFocusTarget(displayMonths, modifiers) {\n    var firstDayInMonth = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__.startOfMonth)(displayMonths[0]);\n    var lastDayInMonth = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.endOfMonth)(displayMonths[displayMonths.length - 1]);\n    // TODO: cleanup code\n    var firstFocusableDay;\n    var today;\n    var date = firstDayInMonth;\n    while(date <= lastDayInMonth){\n        var activeModifiers = getActiveModifiers(date, modifiers);\n        var isFocusable = !activeModifiers.disabled && !activeModifiers.hidden;\n        if (!isFocusable) {\n            date = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__.addDays)(date, 1);\n            continue;\n        }\n        if (activeModifiers.selected) {\n            return date;\n        }\n        if (activeModifiers.today && !today) {\n            today = date;\n        }\n        if (!firstFocusableDay) {\n            firstFocusableDay = date;\n        }\n        date = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__.addDays)(date, 1);\n    }\n    if (today) {\n        return today;\n    } else {\n        return firstFocusableDay;\n    }\n}\nvar MAX_RETRY = 365;\n/** Return the next date to be focused. */ function getNextFocus(focusedDay, options) {\n    var moveBy = options.moveBy, direction = options.direction, context = options.context, modifiers = options.modifiers, _a = options.retry, retry = _a === void 0 ? {\n        count: 0,\n        lastFocused: focusedDay\n    } : _a;\n    var weekStartsOn = context.weekStartsOn, fromDate = context.fromDate, toDate = context.toDate, locale = context.locale;\n    var moveFns = {\n        day: _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__.addDays,\n        week: _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_22__.addWeeks,\n        month: _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__.addMonths,\n        year: _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_23__.addYears,\n        startOfWeek: function(date) {\n            return context.ISOWeek ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_14__.startOfISOWeek)(date) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_15__.startOfWeek)(date, {\n                locale: locale,\n                weekStartsOn: weekStartsOn\n            });\n        },\n        endOfWeek: function(date) {\n            return context.ISOWeek ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_24__.endOfISOWeek)(date) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_25__.endOfWeek)(date, {\n                locale: locale,\n                weekStartsOn: weekStartsOn\n            });\n        }\n    };\n    var newFocusedDay = moveFns[moveBy](focusedDay, direction === \"after\" ? 1 : -1);\n    if (direction === \"before\" && fromDate) {\n        newFocusedDay = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_26__.max)([\n            fromDate,\n            newFocusedDay\n        ]);\n    } else if (direction === \"after\" && toDate) {\n        newFocusedDay = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_27__.min)([\n            toDate,\n            newFocusedDay\n        ]);\n    }\n    var isFocusable = true;\n    if (modifiers) {\n        var activeModifiers = getActiveModifiers(newFocusedDay, modifiers);\n        isFocusable = !activeModifiers.disabled && !activeModifiers.hidden;\n    }\n    if (isFocusable) {\n        return newFocusedDay;\n    } else {\n        if (retry.count > MAX_RETRY) {\n            return retry.lastFocused;\n        }\n        return getNextFocus(newFocusedDay, {\n            moveBy: moveBy,\n            direction: direction,\n            context: context,\n            modifiers: modifiers,\n            retry: __assign(__assign({}, retry), {\n                count: retry.count + 1\n            })\n        });\n    }\n}\n/**\n * The Focus context shares details about the focused day for the keyboard\n *\n * Access this context from the {@link useFocusContext} hook.\n */ var FocusContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\n/** The provider for the {@link FocusContext}. */ function FocusProvider(props) {\n    var navigation = useNavigation();\n    var modifiers = useModifiers();\n    var _a = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), focusedDay = _a[0], setFocusedDay = _a[1];\n    var _b = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), lastFocused = _b[0], setLastFocused = _b[1];\n    var initialFocusTarget = getInitialFocusTarget(navigation.displayMonths, modifiers);\n    // TODO: cleanup and test obscure code below\n    var focusTarget = (focusedDay !== null && focusedDay !== void 0 ? focusedDay : lastFocused && navigation.isDateDisplayed(lastFocused)) ? lastFocused : initialFocusTarget;\n    var blur = function() {\n        setLastFocused(focusedDay);\n        setFocusedDay(undefined);\n    };\n    var focus = function(date) {\n        setFocusedDay(date);\n    };\n    var context = useDayPicker();\n    var moveFocus = function(moveBy, direction) {\n        if (!focusedDay) return;\n        var nextFocused = getNextFocus(focusedDay, {\n            moveBy: moveBy,\n            direction: direction,\n            context: context,\n            modifiers: modifiers\n        });\n        if ((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__.isSameDay)(focusedDay, nextFocused)) return undefined;\n        navigation.goToDate(nextFocused, focusedDay);\n        focus(nextFocused);\n    };\n    var value = {\n        focusedDay: focusedDay,\n        focusTarget: focusTarget,\n        blur: blur,\n        focus: focus,\n        focusDayAfter: function() {\n            return moveFocus(\"day\", \"after\");\n        },\n        focusDayBefore: function() {\n            return moveFocus(\"day\", \"before\");\n        },\n        focusWeekAfter: function() {\n            return moveFocus(\"week\", \"after\");\n        },\n        focusWeekBefore: function() {\n            return moveFocus(\"week\", \"before\");\n        },\n        focusMonthBefore: function() {\n            return moveFocus(\"month\", \"before\");\n        },\n        focusMonthAfter: function() {\n            return moveFocus(\"month\", \"after\");\n        },\n        focusYearBefore: function() {\n            return moveFocus(\"year\", \"before\");\n        },\n        focusYearAfter: function() {\n            return moveFocus(\"year\", \"after\");\n        },\n        focusStartOfWeek: function() {\n            return moveFocus(\"startOfWeek\", \"before\");\n        },\n        focusEndOfWeek: function() {\n            return moveFocus(\"endOfWeek\", \"after\");\n        }\n    };\n    return jsxRuntimeExports.jsx(FocusContext.Provider, {\n        value: value,\n        children: props.children\n    });\n}\n/**\n * Hook to access the {@link FocusContextValue}. Use this hook to handle the\n * focus state of the elements.\n *\n * This hook is meant to be used inside internal or custom components.\n */ function useFocusContext() {\n    var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(FocusContext);\n    if (!context) {\n        throw new Error(\"useFocusContext must be used within a FocusProvider\");\n    }\n    return context;\n}\n/**\n * Return the active modifiers for the specified day.\n *\n * This hook is meant to be used inside internal or custom components.\n *\n * @param day\n * @param displayMonth\n */ function useActiveModifiers(day, /**\n * The month where the date is displayed. If not the same as `date`, the day\n * is an \"outside day\".\n */ displayMonth) {\n    var modifiers = useModifiers();\n    var activeModifiers = getActiveModifiers(day, modifiers, displayMonth);\n    return activeModifiers;\n}\n/**\n * The SelectSingle context shares details about the selected days when in\n * single selection mode.\n *\n * Access this context from the {@link useSelectSingle} hook.\n */ var SelectSingleContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\n/** Provides the values for the {@link SelectSingleProvider}. */ function SelectSingleProvider(props) {\n    if (!isDayPickerSingle(props.initialProps)) {\n        var emptyContextValue = {\n            selected: undefined\n        };\n        return jsxRuntimeExports.jsx(SelectSingleContext.Provider, {\n            value: emptyContextValue,\n            children: props.children\n        });\n    }\n    return jsxRuntimeExports.jsx(SelectSingleProviderInternal, {\n        initialProps: props.initialProps,\n        children: props.children\n    });\n}\nfunction SelectSingleProviderInternal(_a) {\n    var initialProps = _a.initialProps, children = _a.children;\n    var onDayClick = function(day, activeModifiers, e) {\n        var _a, _b, _c;\n        (_a = initialProps.onDayClick) === null || _a === void 0 ? void 0 : _a.call(initialProps, day, activeModifiers, e);\n        if (activeModifiers.selected && !initialProps.required) {\n            (_b = initialProps.onSelect) === null || _b === void 0 ? void 0 : _b.call(initialProps, undefined, day, activeModifiers, e);\n            return;\n        }\n        (_c = initialProps.onSelect) === null || _c === void 0 ? void 0 : _c.call(initialProps, day, day, activeModifiers, e);\n    };\n    var contextValue = {\n        selected: initialProps.selected,\n        onDayClick: onDayClick\n    };\n    return jsxRuntimeExports.jsx(SelectSingleContext.Provider, {\n        value: contextValue,\n        children: children\n    });\n}\n/**\n * Hook to access the {@link SelectSingleContextValue}.\n *\n * This hook is meant to be used inside internal or custom components.\n */ function useSelectSingle() {\n    var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SelectSingleContext);\n    if (!context) {\n        throw new Error(\"useSelectSingle must be used within a SelectSingleProvider\");\n    }\n    return context;\n}\n/**\n * This hook returns details about the content to render in the day cell.\n *\n *\n * When a day cell is rendered in the table, DayPicker can either:\n *\n * - render nothing: when the day is outside the month or has matched the\n *   \"hidden\" modifier.\n * - render a button when `onDayClick` or a selection mode is set.\n * - render a non-interactive element: when no selection mode is set, the day\n *   cell shouldn’t respond to any interaction. DayPicker should render a `div`\n *   or a `span`.\n *\n * ### Usage\n *\n * Use this hook to customize the behavior of the {@link Day} component. Create a\n * new `Day` component using this hook and pass it to the `components` prop.\n * The source of {@link Day} can be a good starting point.\n *\n */ function useDayEventHandlers(date, activeModifiers) {\n    var dayPicker = useDayPicker();\n    var single = useSelectSingle();\n    var multiple = useSelectMultiple();\n    var range = useSelectRange();\n    var _a = useFocusContext(), focusDayAfter = _a.focusDayAfter, focusDayBefore = _a.focusDayBefore, focusWeekAfter = _a.focusWeekAfter, focusWeekBefore = _a.focusWeekBefore, blur = _a.blur, focus = _a.focus, focusMonthBefore = _a.focusMonthBefore, focusMonthAfter = _a.focusMonthAfter, focusYearBefore = _a.focusYearBefore, focusYearAfter = _a.focusYearAfter, focusStartOfWeek = _a.focusStartOfWeek, focusEndOfWeek = _a.focusEndOfWeek;\n    var onClick = function(e) {\n        var _a, _b, _c, _d;\n        if (isDayPickerSingle(dayPicker)) {\n            (_a = single.onDayClick) === null || _a === void 0 ? void 0 : _a.call(single, date, activeModifiers, e);\n        } else if (isDayPickerMultiple(dayPicker)) {\n            (_b = multiple.onDayClick) === null || _b === void 0 ? void 0 : _b.call(multiple, date, activeModifiers, e);\n        } else if (isDayPickerRange(dayPicker)) {\n            (_c = range.onDayClick) === null || _c === void 0 ? void 0 : _c.call(range, date, activeModifiers, e);\n        } else {\n            (_d = dayPicker.onDayClick) === null || _d === void 0 ? void 0 : _d.call(dayPicker, date, activeModifiers, e);\n        }\n    };\n    var onFocus = function(e) {\n        var _a;\n        focus(date);\n        (_a = dayPicker.onDayFocus) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onBlur = function(e) {\n        var _a;\n        blur();\n        (_a = dayPicker.onDayBlur) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onMouseEnter = function(e) {\n        var _a;\n        (_a = dayPicker.onDayMouseEnter) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onMouseLeave = function(e) {\n        var _a;\n        (_a = dayPicker.onDayMouseLeave) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onPointerEnter = function(e) {\n        var _a;\n        (_a = dayPicker.onDayPointerEnter) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onPointerLeave = function(e) {\n        var _a;\n        (_a = dayPicker.onDayPointerLeave) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onTouchCancel = function(e) {\n        var _a;\n        (_a = dayPicker.onDayTouchCancel) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onTouchEnd = function(e) {\n        var _a;\n        (_a = dayPicker.onDayTouchEnd) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onTouchMove = function(e) {\n        var _a;\n        (_a = dayPicker.onDayTouchMove) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onTouchStart = function(e) {\n        var _a;\n        (_a = dayPicker.onDayTouchStart) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onKeyUp = function(e) {\n        var _a;\n        (_a = dayPicker.onDayKeyUp) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onKeyDown = function(e) {\n        var _a;\n        switch(e.key){\n            case \"ArrowLeft\":\n                e.preventDefault();\n                e.stopPropagation();\n                dayPicker.dir === \"rtl\" ? focusDayAfter() : focusDayBefore();\n                break;\n            case \"ArrowRight\":\n                e.preventDefault();\n                e.stopPropagation();\n                dayPicker.dir === \"rtl\" ? focusDayBefore() : focusDayAfter();\n                break;\n            case \"ArrowDown\":\n                e.preventDefault();\n                e.stopPropagation();\n                focusWeekAfter();\n                break;\n            case \"ArrowUp\":\n                e.preventDefault();\n                e.stopPropagation();\n                focusWeekBefore();\n                break;\n            case \"PageUp\":\n                e.preventDefault();\n                e.stopPropagation();\n                e.shiftKey ? focusYearBefore() : focusMonthBefore();\n                break;\n            case \"PageDown\":\n                e.preventDefault();\n                e.stopPropagation();\n                e.shiftKey ? focusYearAfter() : focusMonthAfter();\n                break;\n            case \"Home\":\n                e.preventDefault();\n                e.stopPropagation();\n                focusStartOfWeek();\n                break;\n            case \"End\":\n                e.preventDefault();\n                e.stopPropagation();\n                focusEndOfWeek();\n                break;\n        }\n        (_a = dayPicker.onDayKeyDown) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var eventHandlers = {\n        onClick: onClick,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        onKeyDown: onKeyDown,\n        onKeyUp: onKeyUp,\n        onMouseEnter: onMouseEnter,\n        onMouseLeave: onMouseLeave,\n        onPointerEnter: onPointerEnter,\n        onPointerLeave: onPointerLeave,\n        onTouchCancel: onTouchCancel,\n        onTouchEnd: onTouchEnd,\n        onTouchMove: onTouchMove,\n        onTouchStart: onTouchStart\n    };\n    return eventHandlers;\n}\n/**\n * Return the current selected days when DayPicker is in selection mode. Days\n * selected by the custom selection mode are not returned.\n *\n * This hook is meant to be used inside internal or custom components.\n *\n */ function useSelectedDays() {\n    var dayPicker = useDayPicker();\n    var single = useSelectSingle();\n    var multiple = useSelectMultiple();\n    var range = useSelectRange();\n    var selectedDays = isDayPickerSingle(dayPicker) ? single.selected : isDayPickerMultiple(dayPicker) ? multiple.selected : isDayPickerRange(dayPicker) ? range.selected : undefined;\n    return selectedDays;\n}\nfunction isInternalModifier(modifier) {\n    return Object.values(InternalModifier).includes(modifier);\n}\n/**\n * Return the class names for the Day element, according to the given active\n * modifiers.\n *\n * Custom class names are set via `modifiersClassNames` or `classNames`,\n * where the first have the precedence.\n */ function getDayClassNames(dayPicker, activeModifiers) {\n    var classNames = [\n        dayPicker.classNames.day\n    ];\n    Object.keys(activeModifiers).forEach(function(modifier) {\n        var customClassName = dayPicker.modifiersClassNames[modifier];\n        if (customClassName) {\n            classNames.push(customClassName);\n        } else if (isInternalModifier(modifier)) {\n            var internalClassName = dayPicker.classNames[\"day_\".concat(modifier)];\n            if (internalClassName) {\n                classNames.push(internalClassName);\n            }\n        }\n    });\n    return classNames;\n}\n/** Return the style for the Day element, according to the given active modifiers. */ function getDayStyle(dayPicker, activeModifiers) {\n    var style = __assign({}, dayPicker.styles.day);\n    Object.keys(activeModifiers).forEach(function(modifier) {\n        var _a;\n        style = __assign(__assign({}, style), (_a = dayPicker.modifiersStyles) === null || _a === void 0 ? void 0 : _a[modifier]);\n    });\n    return style;\n}\n/**\n * Return props and data used to render the {@link Day} component.\n *\n * Use this hook when creating a component to replace the built-in `Day`\n * component.\n */ function useDayRender(/** The date to render. */ day, /** The month where the date is displayed (if not the same as `date`, it means it is an \"outside\" day). */ displayMonth, /** A ref to the button element that will be target of focus when rendered (if required). */ buttonRef) {\n    var _a;\n    var _b, _c;\n    var dayPicker = useDayPicker();\n    var focusContext = useFocusContext();\n    var activeModifiers = useActiveModifiers(day, displayMonth);\n    var eventHandlers = useDayEventHandlers(day, activeModifiers);\n    var selectedDays = useSelectedDays();\n    var isButton = Boolean(dayPicker.onDayClick || dayPicker.mode !== \"default\");\n    // Focus the button if the day is focused according to the focus context\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        var _a;\n        if (activeModifiers.outside) return;\n        if (!focusContext.focusedDay) return;\n        if (!isButton) return;\n        if ((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__.isSameDay)(focusContext.focusedDay, day)) {\n            (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n    }, [\n        focusContext.focusedDay,\n        day,\n        buttonRef,\n        isButton,\n        activeModifiers.outside\n    ]);\n    var className = getDayClassNames(dayPicker, activeModifiers).join(\" \");\n    var style = getDayStyle(dayPicker, activeModifiers);\n    var isHidden = Boolean(activeModifiers.outside && !dayPicker.showOutsideDays || activeModifiers.hidden);\n    var DayContentComponent = (_c = (_b = dayPicker.components) === null || _b === void 0 ? void 0 : _b.DayContent) !== null && _c !== void 0 ? _c : DayContent;\n    var children = jsxRuntimeExports.jsx(DayContentComponent, {\n        date: day,\n        displayMonth: displayMonth,\n        activeModifiers: activeModifiers\n    });\n    var divProps = {\n        style: style,\n        className: className,\n        children: children,\n        role: \"gridcell\"\n    };\n    var isFocusTarget = focusContext.focusTarget && (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__.isSameDay)(focusContext.focusTarget, day) && !activeModifiers.outside;\n    var isFocused = focusContext.focusedDay && (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__.isSameDay)(focusContext.focusedDay, day);\n    var buttonProps = __assign(__assign(__assign({}, divProps), (_a = {\n        disabled: activeModifiers.disabled,\n        role: \"gridcell\"\n    }, _a[\"aria-selected\"] = activeModifiers.selected, _a.tabIndex = isFocused || isFocusTarget ? 0 : -1, _a)), eventHandlers);\n    var dayRender = {\n        isButton: isButton,\n        isHidden: isHidden,\n        activeModifiers: activeModifiers,\n        selectedDays: selectedDays,\n        buttonProps: buttonProps,\n        divProps: divProps\n    };\n    return dayRender;\n}\n/**\n * The content of a day cell – as a button or span element according to its\n * modifiers.\n */ function Day(props) {\n    var buttonRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var dayRender = useDayRender(props.date, props.displayMonth, buttonRef);\n    if (dayRender.isHidden) {\n        return jsxRuntimeExports.jsx(\"div\", {\n            role: \"gridcell\"\n        });\n    }\n    if (!dayRender.isButton) {\n        return jsxRuntimeExports.jsx(\"div\", __assign({}, dayRender.divProps));\n    }\n    return jsxRuntimeExports.jsx(Button, __assign({\n        name: \"day\",\n        ref: buttonRef\n    }, dayRender.buttonProps));\n}\n/**\n * Render the week number element. If `onWeekNumberClick` is passed to DayPicker, it\n * renders a button, otherwise a span element.\n */ function WeekNumber(props) {\n    var weekNumber = props.number, dates = props.dates;\n    var _a = useDayPicker(), onWeekNumberClick = _a.onWeekNumberClick, styles = _a.styles, classNames = _a.classNames, locale = _a.locale, labelWeekNumber = _a.labels.labelWeekNumber, formatWeekNumber = _a.formatters.formatWeekNumber;\n    var content = formatWeekNumber(Number(weekNumber), {\n        locale: locale\n    });\n    if (!onWeekNumberClick) {\n        return jsxRuntimeExports.jsx(\"span\", {\n            className: classNames.weeknumber,\n            style: styles.weeknumber,\n            children: content\n        });\n    }\n    var label = labelWeekNumber(Number(weekNumber), {\n        locale: locale\n    });\n    var handleClick = function(e) {\n        onWeekNumberClick(weekNumber, dates, e);\n    };\n    return jsxRuntimeExports.jsx(Button, {\n        name: \"week-number\",\n        \"aria-label\": label,\n        className: classNames.weeknumber,\n        style: styles.weeknumber,\n        onClick: handleClick,\n        children: content\n    });\n}\n/** Render a row in the calendar, with the days and the week number. */ function Row(props) {\n    var _a, _b;\n    var _c = useDayPicker(), styles = _c.styles, classNames = _c.classNames, showWeekNumber = _c.showWeekNumber, components = _c.components;\n    var DayComponent = (_a = components === null || components === void 0 ? void 0 : components.Day) !== null && _a !== void 0 ? _a : Day;\n    var WeeknumberComponent = (_b = components === null || components === void 0 ? void 0 : components.WeekNumber) !== null && _b !== void 0 ? _b : WeekNumber;\n    var weekNumberCell;\n    if (showWeekNumber) {\n        weekNumberCell = jsxRuntimeExports.jsx(\"td\", {\n            className: classNames.cell,\n            style: styles.cell,\n            children: jsxRuntimeExports.jsx(WeeknumberComponent, {\n                number: props.weekNumber,\n                dates: props.dates\n            })\n        });\n    }\n    return jsxRuntimeExports.jsxs(\"tr\", {\n        className: classNames.row,\n        style: styles.row,\n        children: [\n            weekNumberCell,\n            props.dates.map(function(date) {\n                return jsxRuntimeExports.jsx(\"td\", {\n                    className: classNames.cell,\n                    style: styles.cell,\n                    role: \"presentation\",\n                    children: jsxRuntimeExports.jsx(DayComponent, {\n                        displayMonth: props.displayMonth,\n                        date: date\n                    })\n                }, (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_28__.getUnixTime)(date));\n            })\n        ]\n    });\n}\n/** Return the weeks between two dates.  */ function daysToMonthWeeks(fromDate, toDate, options) {\n    var toWeek = (options === null || options === void 0 ? void 0 : options.ISOWeek) ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_24__.endOfISOWeek)(toDate) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_25__.endOfWeek)(toDate, options);\n    var fromWeek = (options === null || options === void 0 ? void 0 : options.ISOWeek) ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_14__.startOfISOWeek)(fromDate) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_15__.startOfWeek)(fromDate, options);\n    var nOfDays = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__.differenceInCalendarDays)(toWeek, fromWeek);\n    var days = [];\n    for(var i = 0; i <= nOfDays; i++){\n        days.push((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__.addDays)(fromWeek, i));\n    }\n    var weeksInMonth = days.reduce(function(result, date) {\n        var weekNumber = (options === null || options === void 0 ? void 0 : options.ISOWeek) ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_29__.getISOWeek)(date) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_30__.getWeek)(date, options);\n        var existingWeek = result.find(function(value) {\n            return value.weekNumber === weekNumber;\n        });\n        if (existingWeek) {\n            existingWeek.dates.push(date);\n            return result;\n        }\n        result.push({\n            weekNumber: weekNumber,\n            dates: [\n                date\n            ]\n        });\n        return result;\n    }, []);\n    return weeksInMonth;\n}\n/**\n * Return the weeks belonging to the given month, adding the \"outside days\" to\n * the first and last week.\n */ function getMonthWeeks(month, options) {\n    var weeksInMonth = daysToMonthWeeks((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__.startOfMonth)(month), (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.endOfMonth)(month), options);\n    if (options === null || options === void 0 ? void 0 : options.useFixedWeeks) {\n        // Add extra weeks to the month, up to 6 weeks\n        var nrOfMonthWeeks = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_31__.getWeeksInMonth)(month, options);\n        if (nrOfMonthWeeks < 6) {\n            var lastWeek = weeksInMonth[weeksInMonth.length - 1];\n            var lastDate = lastWeek.dates[lastWeek.dates.length - 1];\n            var toDate = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_22__.addWeeks)(lastDate, 6 - nrOfMonthWeeks);\n            var extraWeeks = daysToMonthWeeks((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_22__.addWeeks)(lastDate, 1), toDate, options);\n            weeksInMonth.push.apply(weeksInMonth, extraWeeks);\n        }\n    }\n    return weeksInMonth;\n}\n/** Render the table with the calendar. */ function Table(props) {\n    var _a, _b, _c;\n    var _d = useDayPicker(), locale = _d.locale, classNames = _d.classNames, styles = _d.styles, hideHead = _d.hideHead, fixedWeeks = _d.fixedWeeks, components = _d.components, weekStartsOn = _d.weekStartsOn, firstWeekContainsDate = _d.firstWeekContainsDate, ISOWeek = _d.ISOWeek;\n    var weeks = getMonthWeeks(props.displayMonth, {\n        useFixedWeeks: Boolean(fixedWeeks),\n        ISOWeek: ISOWeek,\n        locale: locale,\n        weekStartsOn: weekStartsOn,\n        firstWeekContainsDate: firstWeekContainsDate\n    });\n    var HeadComponent = (_a = components === null || components === void 0 ? void 0 : components.Head) !== null && _a !== void 0 ? _a : Head;\n    var RowComponent = (_b = components === null || components === void 0 ? void 0 : components.Row) !== null && _b !== void 0 ? _b : Row;\n    var FooterComponent = (_c = components === null || components === void 0 ? void 0 : components.Footer) !== null && _c !== void 0 ? _c : Footer;\n    return jsxRuntimeExports.jsxs(\"table\", {\n        id: props.id,\n        className: classNames.table,\n        style: styles.table,\n        role: \"grid\",\n        \"aria-labelledby\": props[\"aria-labelledby\"],\n        children: [\n            !hideHead && jsxRuntimeExports.jsx(HeadComponent, {}),\n            jsxRuntimeExports.jsx(\"tbody\", {\n                className: classNames.tbody,\n                style: styles.tbody,\n                children: weeks.map(function(week) {\n                    return jsxRuntimeExports.jsx(RowComponent, {\n                        displayMonth: props.displayMonth,\n                        dates: week.dates,\n                        weekNumber: week.weekNumber\n                    }, week.weekNumber);\n                })\n            }),\n            jsxRuntimeExports.jsx(FooterComponent, {\n                displayMonth: props.displayMonth\n            })\n        ]\n    });\n}\n/*\nThe MIT License (MIT)\n\nCopyright (c) 2018-present, React Training LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/ /* eslint-disable prefer-const */ /* eslint-disable @typescript-eslint/ban-ts-comment */ /*\n * Welcome to @reach/auto-id!\n * Let's see if we can make sense of why this hook exists and its\n * implementation.\n *\n * Some background:\n *   1. Accessibility APIs rely heavily on element IDs\n *   2. Requiring developers to put IDs on every element in Reach UI is both\n *      cumbersome and error-prone\n *   3. With a component model, we can generate IDs for them!\n *\n * Solution 1: Generate random IDs.\n *\n * This works great as long as you don't server render your app. When React (in\n * the client) tries to reuse the markup from the server, the IDs won't match\n * and React will then recreate the entire DOM tree.\n *\n * Solution 2: Increment an integer\n *\n * This sounds great. Since we're rendering the exact same tree on the server\n * and client, we can increment a counter and get a deterministic result between\n * client and server. Also, JS integers can go up to nine-quadrillion. I'm\n * pretty sure the tab will be closed before an app never needs\n * 10 quadrillion IDs!\n *\n * Problem solved, right?\n *\n * Ah, but there's a catch! React's concurrent rendering makes this approach\n * non-deterministic. While the client and server will end up with the same\n * elements in the end, depending on suspense boundaries (and possibly some user\n * input during the initial render) the incrementing integers won't always match\n * up.\n *\n * Solution 3: Don't use IDs at all on the server; patch after first render.\n *\n * What we've done here is solution 2 with some tricks. With this approach, the\n * ID returned is an empty string on the first render. This way the server and\n * client have the same markup no matter how wild the concurrent rendering may\n * have gotten.\n *\n * After the render, we patch up the components with an incremented ID. This\n * causes a double render on any components with `useId`. Shouldn't be a problem\n * since the components using this hook should be small, and we're only updating\n * the ID attribute on the DOM, nothing big is happening.\n *\n * It doesn't have to be an incremented number, though--we could do generate\n * random strings instead, but incrementing a number is probably the cheapest\n * thing we can do.\n *\n * Additionally, we only do this patchup on the very first client render ever.\n * Any calls to `useId` that happen dynamically in the client will be\n * populated immediately with a value. So, we only get the double render after\n * server hydration and never again, SO BACK OFF ALRIGHT?\n */ function canUseDOM() {\n    return !!( false && 0);\n}\n/**\n * React currently throws a warning when using useLayoutEffect on the server. To\n * get around it, we can conditionally useEffect on the server (no-op) and\n * useLayoutEffect in the browser. We occasionally need useLayoutEffect to\n * ensure we don't get a render flash for certain operations, but we may also\n * need affected components to render on the server. One example is when setting\n * a component's descendants to retrieve their index values.\n *\n * Important to note that using this hook as an escape hatch will break the\n * eslint dependency warnings unless you rename the import to `useLayoutEffect`.\n * Use sparingly only when the effect won't effect the rendered HTML to avoid\n * any server/client mismatch.\n *\n * If a useLayoutEffect is needed and the result would create a mismatch, it's\n * likely that the component in question shouldn't be rendered on the server at\n * all, so a better approach would be to lazily render those in a parent\n * component after client-side hydration.\n *\n * https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * https://github.com/reduxjs/react-redux/blob/master/src/utils/useIsomorphicLayoutEffect.js\n *\n * @param effect\n * @param deps\n */ var useIsomorphicLayoutEffect = canUseDOM() ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\nvar serverHandoffComplete = false;\nvar id = 0;\nfunction genId() {\n    return \"react-day-picker-\".concat(++id);\n}\nfunction useId(providedId) {\n    // TODO: Remove error flag when updating internal deps to React 18. None of\n    // our tricks will play well with concurrent rendering anyway.\n    var _a;\n    // If this instance isn't part of the initial render, we don't have to do the\n    // double render/patch-up dance. We can just generate the ID and return it.\n    var initialId = providedId !== null && providedId !== void 0 ? providedId : serverHandoffComplete ? genId() : null;\n    var _b = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialId), id = _b[0], setId = _b[1];\n    useIsomorphicLayoutEffect(function() {\n        if (id === null) {\n            // Patch the ID after render. We do this in `useLayoutEffect` to avoid any\n            // rendering flicker, though it'll make the first render slower (unlikely\n            // to matter, but you're welcome to measure your app and let us know if\n            // it's a problem).\n            setId(genId());\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        if (serverHandoffComplete === false) {\n            // Flag all future uses of `useId` to skip the update dance. This is in\n            // `useEffect` because it goes after `useLayoutEffect`, ensuring we don't\n            // accidentally bail out of the patch-up dance prematurely.\n            serverHandoffComplete = true;\n        }\n    }, []);\n    return (_a = providedId !== null && providedId !== void 0 ? providedId : id) !== null && _a !== void 0 ? _a : undefined;\n}\n/** Render a month. */ function Month(props) {\n    var _a;\n    var _b;\n    var dayPicker = useDayPicker();\n    var dir = dayPicker.dir, classNames = dayPicker.classNames, styles = dayPicker.styles, components = dayPicker.components;\n    var displayMonths = useNavigation().displayMonths;\n    var captionId = useId(dayPicker.id ? \"\".concat(dayPicker.id, \"-\").concat(props.displayIndex) : undefined);\n    var tableId = dayPicker.id ? \"\".concat(dayPicker.id, \"-grid-\").concat(props.displayIndex) : undefined;\n    var className = [\n        classNames.month\n    ];\n    var style = styles.month;\n    var isStart = props.displayIndex === 0;\n    var isEnd = props.displayIndex === displayMonths.length - 1;\n    var isCenter = !isStart && !isEnd;\n    if (dir === \"rtl\") {\n        _a = [\n            isStart,\n            isEnd\n        ], isEnd = _a[0], isStart = _a[1];\n    }\n    if (isStart) {\n        className.push(classNames.caption_start);\n        style = __assign(__assign({}, style), styles.caption_start);\n    }\n    if (isEnd) {\n        className.push(classNames.caption_end);\n        style = __assign(__assign({}, style), styles.caption_end);\n    }\n    if (isCenter) {\n        className.push(classNames.caption_between);\n        style = __assign(__assign({}, style), styles.caption_between);\n    }\n    var CaptionComponent = (_b = components === null || components === void 0 ? void 0 : components.Caption) !== null && _b !== void 0 ? _b : Caption;\n    return jsxRuntimeExports.jsxs(\"div\", {\n        className: className.join(\" \"),\n        style: style,\n        children: [\n            jsxRuntimeExports.jsx(CaptionComponent, {\n                id: captionId,\n                displayMonth: props.displayMonth,\n                displayIndex: props.displayIndex\n            }),\n            jsxRuntimeExports.jsx(Table, {\n                id: tableId,\n                \"aria-labelledby\": captionId,\n                displayMonth: props.displayMonth\n            })\n        ]\n    }, props.displayIndex);\n}\n/**\n * Render the wrapper for the month grids.\n */ function Months(props) {\n    var _a = useDayPicker(), classNames = _a.classNames, styles = _a.styles;\n    return jsxRuntimeExports.jsx(\"div\", {\n        className: classNames.months,\n        style: styles.months,\n        children: props.children\n    });\n}\n/** Render the container with the months according to the number of months to display. */ function Root(_a) {\n    var _b, _c;\n    var initialProps = _a.initialProps;\n    var dayPicker = useDayPicker();\n    var focusContext = useFocusContext();\n    var navigation = useNavigation();\n    var _d = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false), hasInitialFocus = _d[0], setHasInitialFocus = _d[1];\n    // Focus the focus target when initialFocus is passed in\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        if (!dayPicker.initialFocus) return;\n        if (!focusContext.focusTarget) return;\n        if (hasInitialFocus) return;\n        focusContext.focus(focusContext.focusTarget);\n        setHasInitialFocus(true);\n    }, [\n        dayPicker.initialFocus,\n        hasInitialFocus,\n        focusContext.focus,\n        focusContext.focusTarget,\n        focusContext\n    ]);\n    // Apply classnames according to props\n    var classNames = [\n        dayPicker.classNames.root,\n        dayPicker.className\n    ];\n    if (dayPicker.numberOfMonths > 1) {\n        classNames.push(dayPicker.classNames.multiple_months);\n    }\n    if (dayPicker.showWeekNumber) {\n        classNames.push(dayPicker.classNames.with_weeknumber);\n    }\n    var style = __assign(__assign({}, dayPicker.styles.root), dayPicker.style);\n    var dataAttributes = Object.keys(initialProps).filter(function(key) {\n        return key.startsWith(\"data-\");\n    }).reduce(function(attrs, key) {\n        var _a;\n        return __assign(__assign({}, attrs), (_a = {}, _a[key] = initialProps[key], _a));\n    }, {});\n    var MonthsComponent = (_c = (_b = initialProps.components) === null || _b === void 0 ? void 0 : _b.Months) !== null && _c !== void 0 ? _c : Months;\n    return jsxRuntimeExports.jsx(\"div\", __assign({\n        className: classNames.join(\" \"),\n        style: style,\n        dir: dayPicker.dir,\n        id: dayPicker.id,\n        nonce: initialProps.nonce,\n        title: initialProps.title,\n        lang: initialProps.lang\n    }, dataAttributes, {\n        children: jsxRuntimeExports.jsx(MonthsComponent, {\n            children: navigation.displayMonths.map(function(month, i) {\n                return jsxRuntimeExports.jsx(Month, {\n                    displayIndex: i,\n                    displayMonth: month\n                }, i);\n            })\n        })\n    }));\n}\n/** Provide the value for all the context providers. */ function RootProvider(props) {\n    var children = props.children, initialProps = __rest(props, [\n        \"children\"\n    ]);\n    return jsxRuntimeExports.jsx(DayPickerProvider, {\n        initialProps: initialProps,\n        children: jsxRuntimeExports.jsx(NavigationProvider, {\n            children: jsxRuntimeExports.jsx(SelectSingleProvider, {\n                initialProps: initialProps,\n                children: jsxRuntimeExports.jsx(SelectMultipleProvider, {\n                    initialProps: initialProps,\n                    children: jsxRuntimeExports.jsx(SelectRangeProvider, {\n                        initialProps: initialProps,\n                        children: jsxRuntimeExports.jsx(ModifiersProvider, {\n                            children: jsxRuntimeExports.jsx(FocusProvider, {\n                                children: children\n                            })\n                        })\n                    })\n                })\n            })\n        })\n    });\n}\n/**\n * DayPicker render a date picker component to let users pick dates from a\n * calendar. See http://react-day-picker.js.org for updated documentation and\n * examples.\n *\n * ### Customization\n *\n * DayPicker offers different customization props. For example,\n *\n * - show multiple months using `numberOfMonths`\n * - display a dropdown to navigate the months via `captionLayout`\n * - display the week numbers with `showWeekNumbers`\n * - disable or hide days with `disabled` or `hidden`\n *\n * ### Controlling the months\n *\n * Change the initially displayed month using the `defaultMonth` prop. The\n * displayed months are controlled by DayPicker and stored in its internal\n * state. To control the months yourself, use `month` instead of `defaultMonth`\n * and use the `onMonthChange` event to set it.\n *\n * To limit the months the user can navigate to, use\n * `fromDate`/`fromMonth`/`fromYear` or `toDate`/`toMonth`/`toYear`.\n *\n * ### Selection modes\n *\n * DayPicker supports different selection mode that can be toggled using the\n * `mode` prop:\n *\n * - `mode=\"single\"`: only one day can be selected. Use `required` to make the\n *   selection required. Use the `onSelect` event handler to get the selected\n *   days.\n * - `mode=\"multiple\"`: users can select one or more days. Limit the amount of\n *   days that can be selected with the `min` or the `max` props.\n * - `mode=\"range\"`: users can select a range of days. Limit the amount of days\n *   in the range with the `min` or the `max` props.\n * - `mode=\"default\"` (default): the built-in selections are disabled. Implement\n *   your own selection mode with `onDayClick`.\n *\n * The selection modes should cover the most common use cases. In case you\n * need a more refined way of selecting days, use `mode=\"default\"`. Use the\n * `selected` props and add the day event handlers to add/remove days from the\n * selection.\n *\n * ### Modifiers\n *\n * A _modifier_ represents different styles or states for the days displayed in\n * the calendar (like \"selected\" or \"disabled\"). Define custom modifiers using\n * the `modifiers` prop.\n *\n * ### Formatters and custom component\n *\n * You can customize how the content is displayed in the date picker by using\n * either the formatters or replacing the internal components.\n *\n * For the most common cases you want to use the `formatters` prop to change how\n * the content is formatted in the calendar. Use the `components` prop to\n * replace the internal components, like the navigation icons.\n *\n * ### Styling\n *\n * DayPicker comes with a default, basic style in `react-day-picker/style` – use\n * it as template for your own style.\n *\n * If you are using CSS modules, pass the imported styles object the\n * `classNames` props.\n *\n * You can also style the elements via inline styles using the `styles` prop.\n *\n * ### Form fields\n *\n * If you need to bind the date picker to a form field, you can use the\n * `useInput` hooks for a basic behavior. See the `useInput` source as an\n * example to bind the date picker with form fields.\n *\n * ### Localization\n *\n * To localize DayPicker, import the locale from `date-fns` package and use the\n * `locale` prop.\n *\n * For example, to use Spanish locale:\n *\n * ```\n * import { es } from 'date-fns/locale';\n * <DayPicker locale={es} />\n * ```\n */ function DayPicker(props) {\n    return jsxRuntimeExports.jsx(RootProvider, __assign({}, props, {\n        children: jsxRuntimeExports.jsx(Root, {\n            initialProps: props\n        })\n    }));\n}\n/** @private */ function isValidDate(day) {\n    return !isNaN(day.getTime());\n}\n/** Return props and setters for binding an input field to DayPicker. */ function useInput(options) {\n    if (options === void 0) {\n        options = {};\n    }\n    var _a = options.locale, locale = _a === void 0 ? date_fns_locale__WEBPACK_IMPORTED_MODULE_2__.enUS : _a, required = options.required, _b = options.format, format$1 = _b === void 0 ? \"PP\" : _b, defaultSelected = options.defaultSelected, _c = options.today, today = _c === void 0 ? new Date() : _c;\n    var _d = parseFromToProps(options), fromDate = _d.fromDate, toDate = _d.toDate;\n    // Shortcut to the DateFns functions\n    var parseValue = function(value) {\n        return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_32__.parse)(value, format$1, today, {\n            locale: locale\n        });\n    };\n    // Initialize states\n    var _e = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultSelected !== null && defaultSelected !== void 0 ? defaultSelected : today), month = _e[0], setMonth = _e[1];\n    var _f = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultSelected), selectedDay = _f[0], setSelectedDay = _f[1];\n    var defaultInputValue = defaultSelected ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__.format)(defaultSelected, format$1, {\n        locale: locale\n    }) : \"\";\n    var _g = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultInputValue), inputValue = _g[0], setInputValue = _g[1];\n    var reset = function() {\n        setSelectedDay(defaultSelected);\n        setMonth(defaultSelected !== null && defaultSelected !== void 0 ? defaultSelected : today);\n        setInputValue(defaultInputValue !== null && defaultInputValue !== void 0 ? defaultInputValue : \"\");\n    };\n    var setSelected = function(date) {\n        setSelectedDay(date);\n        setMonth(date !== null && date !== void 0 ? date : today);\n        setInputValue(date ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__.format)(date, format$1, {\n            locale: locale\n        }) : \"\");\n    };\n    var handleDayClick = function(day, _a) {\n        var selected = _a.selected;\n        if (!required && selected) {\n            setSelectedDay(undefined);\n            setInputValue(\"\");\n            return;\n        }\n        setSelectedDay(day);\n        setInputValue(day ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__.format)(day, format$1, {\n            locale: locale\n        }) : \"\");\n    };\n    var handleMonthChange = function(month) {\n        setMonth(month);\n    };\n    // When changing the input field, save its value in state and check if the\n    // string is a valid date. If it is a valid day, set it as selected and update\n    // the calendar’s month.\n    var handleChange = function(e) {\n        setInputValue(e.target.value);\n        var day = parseValue(e.target.value);\n        var isBefore = fromDate && (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__.differenceInCalendarDays)(fromDate, day) > 0;\n        var isAfter = toDate && (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__.differenceInCalendarDays)(day, toDate) > 0;\n        if (!isValidDate(day) || isBefore || isAfter) {\n            setSelectedDay(undefined);\n            return;\n        }\n        setSelectedDay(day);\n        setMonth(day);\n    };\n    // Special case for _required_ fields: on blur, if the value of the input is not\n    // a valid date, reset the calendar and the input value.\n    var handleBlur = function(e) {\n        var day = parseValue(e.target.value);\n        if (!isValidDate(day)) {\n            reset();\n        }\n    };\n    // When focusing, make sure DayPicker visualizes the month of the date in the\n    // input field.\n    var handleFocus = function(e) {\n        if (!e.target.value) {\n            reset();\n            return;\n        }\n        var day = parseValue(e.target.value);\n        if (isValidDate(day)) {\n            setMonth(day);\n        }\n    };\n    var dayPickerProps = {\n        month: month,\n        onDayClick: handleDayClick,\n        onMonthChange: handleMonthChange,\n        selected: selectedDay,\n        locale: locale,\n        fromDate: fromDate,\n        toDate: toDate,\n        today: today\n    };\n    var inputProps = {\n        onBlur: handleBlur,\n        onChange: handleChange,\n        onFocus: handleFocus,\n        value: inputValue,\n        placeholder: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__.format)(new Date(), format$1, {\n            locale: locale\n        })\n    };\n    return {\n        dayPickerProps: dayPickerProps,\n        inputProps: inputProps,\n        reset: reset,\n        setSelected: setSelected\n    };\n}\n/** Returns true when the props are of type {@link DayPickerDefaultProps}. */ function isDayPickerDefault(props) {\n    return props.mode === undefined || props.mode === \"default\";\n}\n //# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtZGF5LXBpY2tlci9kaXN0L2luZGV4LmVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF3SDtBQUNnUjtBQUNqVztBQUV2Qzs7Ozs7Ozs7Ozs7Ozs4RUFhOEUsR0FDOUUsb0RBQW9ELEdBR3BELElBQUl3QyxXQUFXO0lBQ1hBLFdBQVdDLE9BQU9DLE1BQU0sSUFBSSxTQUFTRixTQUFTRyxDQUFDO1FBQzNDLElBQUssSUFBSUMsR0FBR0MsSUFBSSxHQUFHQyxJQUFJQyxVQUFVQyxNQUFNLEVBQUVILElBQUlDLEdBQUdELElBQUs7WUFDakRELElBQUlHLFNBQVMsQ0FBQ0YsRUFBRTtZQUNoQixJQUFLLElBQUlJLEtBQUtMLEVBQUcsSUFBSUgsT0FBT1MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1IsR0FBR0ssSUFBSU4sQ0FBQyxDQUFDTSxFQUFFLEdBQUdMLENBQUMsQ0FBQ0ssRUFBRTtRQUNoRjtRQUNBLE9BQU9OO0lBQ1g7SUFDQSxPQUFPSCxTQUFTYSxLQUFLLENBQUMsSUFBSSxFQUFFTjtBQUNoQztBQUVBLFNBQVNPLE9BQU9WLENBQUMsRUFBRVcsQ0FBQztJQUNoQixJQUFJWixJQUFJLENBQUM7SUFDVCxJQUFLLElBQUlNLEtBQUtMLEVBQUcsSUFBSUgsT0FBT1MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1IsR0FBR0ssTUFBTU0sRUFBRUMsT0FBTyxDQUFDUCxLQUFLLEdBQzlFTixDQUFDLENBQUNNLEVBQUUsR0FBR0wsQ0FBQyxDQUFDSyxFQUFFO0lBQ2YsSUFBSUwsS0FBSyxRQUFRLE9BQU9ILE9BQU9nQixxQkFBcUIsS0FBSyxZQUNyRCxJQUFLLElBQUlaLElBQUksR0FBR0ksSUFBSVIsT0FBT2dCLHFCQUFxQixDQUFDYixJ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QUFhO1FBQ2JwSSxRQUFRaUk7UUFDUnBXLFVBQVVRO1FBQ1Z5TixTQUFTb0k7UUFDVC9tQixPQUFPeW1CO1FBQ1BTLGFBQWFweEIsc1pBQU1BLENBQUMsSUFBSTZZLFFBQVFzWCxVQUFVO1lBQUU1WCxRQUFRQTtRQUFPO0lBQy9EO0lBQ0EsT0FBTztRQUFFMlksZ0JBQWdCQTtRQUFnQkMsWUFBWUE7UUFBWU4sT0FBT0E7UUFBT0MsYUFBYUE7SUFBWTtBQUM1RztBQUVBLDJFQUEyRSxHQUMzRSxTQUFTTyxtQkFBbUJ0bkIsS0FBSztJQUM3QixPQUFPQSxNQUFNbUssSUFBSSxLQUFLek0sYUFBYXNDLE1BQU1tSyxJQUFJLEtBQUs7QUFDdEQ7QUFFZzNCLENBQ2gzQixxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ib29raW5nLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRheS1waWNrZXIvZGlzdC9pbmRleC5lc20uanM/NmYzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcmVxdWlyZSQkMCwgeyBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0LCB1c2VTdGF0ZSwgZm9yd2FyZFJlZiwgdXNlRWZmZWN0LCB1c2VSZWYsIHVzZUxheW91dEVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGZvcm1hdCwgc3RhcnRPZk1vbnRoLCBlbmRPZk1vbnRoLCBzdGFydE9mRGF5LCBpc1NhbWVZZWFyLCBzZXRNb250aCwgc2V0WWVhciwgc3RhcnRPZlllYXIsIGRpZmZlcmVuY2VJbkNhbGVuZGFyTW9udGhzLCBhZGRNb250aHMsIGlzU2FtZU1vbnRoLCBpc0JlZm9yZSwgc3RhcnRPZklTT1dlZWssIHN0YXJ0T2ZXZWVrLCBhZGREYXlzLCBpc1NhbWVEYXksIGlzQWZ0ZXIsIHN1YkRheXMsIGRpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cywgaXNEYXRlLCBtYXgsIG1pbiwgYWRkV2Vla3MsIGFkZFllYXJzLCBlbmRPZklTT1dlZWssIGVuZE9mV2VlaywgZ2V0VW5peFRpbWUsIGdldElTT1dlZWssIGdldFdlZWssIGdldFdlZWtzSW5Nb250aCwgcGFyc2UgfSBmcm9tICdkYXRlLWZucyc7XG5pbXBvcnQgeyBlblVTIH0gZnJvbSAnZGF0ZS1mbnMvbG9jYWxlJztcblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5Db3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cclxuXHJcblBlcm1pc3Npb24gdG8gdXNlLCBjb3B5LCBtb2RpZnksIGFuZC9vciBkaXN0cmlidXRlIHRoaXMgc29mdHdhcmUgZm9yIGFueVxyXG5wdXJwb3NlIHdpdGggb3Igd2l0aG91dCBmZWUgaXMgaGVyZWJ5IGdyYW50ZWQuXHJcblxyXG5USEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiIEFORCBUSEUgQVVUSE9SIERJU0NMQUlNUyBBTEwgV0FSUkFOVElFUyBXSVRIXHJcblJFR0FSRCBUTyBUSElTIFNPRlRXQVJFIElOQ0xVRElORyBBTEwgSU1QTElFRCBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWVxyXG5BTkQgRklUTkVTUy4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUiBCRSBMSUFCTEUgRk9SIEFOWSBTUEVDSUFMLCBESVJFQ1QsXHJcbklORElSRUNULCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgT1IgQU5ZIERBTUFHRVMgV0hBVFNPRVZFUiBSRVNVTFRJTkcgRlJPTVxyXG5MT1NTIE9GIFVTRSwgREFUQSBPUiBQUk9GSVRTLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgTkVHTElHRU5DRSBPUlxyXG5PVEhFUiBUT1JUSU9VUyBBQ1RJT04sIEFSSVNJTkcgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgVVNFIE9SXHJcblBFUkZPUk1BTkNFIE9GIFRISVMgU09GVFdBUkUuXHJcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICovXHJcbi8qIGdsb2JhbCBSZWZsZWN0LCBQcm9taXNlLCBTdXBwcmVzc2VkRXJyb3IsIFN5bWJvbCAqL1xyXG5cclxuXHJcbnZhciBfX2Fzc2lnbiA9IGZ1bmN0aW9uKCkge1xyXG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uIF9fYXNzaWduKHQpIHtcclxuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcclxuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcclxuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKSB0W3BdID0gc1twXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHQ7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XHJcbn07XHJcblxyXG5mdW5jdGlvbiBfX3Jlc3QocywgZSkge1xyXG4gICAgdmFyIHQgPSB7fTtcclxuICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSAmJiBlLmluZGV4T2YocCkgPCAwKVxyXG4gICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgaWYgKHMgIT0gbnVsbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKVxyXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBwID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzKTsgaSA8IHAubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDAgJiYgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMsIHBbaV0pKVxyXG4gICAgICAgICAgICAgICAgdFtwW2ldXSA9IHNbcFtpXV07XHJcbiAgICAgICAgfVxyXG4gICAgcmV0dXJuIHQ7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIF9fc3ByZWFkQXJyYXkodG8sIGZyb20sIHBhY2spIHtcclxuICAgIGlmIChwYWNrIHx8IGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIGZvciAodmFyIGkgPSAwLCBsID0gZnJvbS5sZW5ndGgsIGFyOyBpIDwgbDsgaSsrKSB7XHJcbiAgICAgICAgaWYgKGFyIHx8ICEoaSBpbiBmcm9tKSkge1xyXG4gICAgICAgICAgICBpZiAoIWFyKSBhciA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGZyb20sIDAsIGkpO1xyXG4gICAgICAgICAgICBhcltpXSA9IGZyb21baV07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRvLmNvbmNhdChhciB8fCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tKSk7XHJcbn1cclxuXHJcbnR5cGVvZiBTdXBwcmVzc2VkRXJyb3IgPT09IFwiZnVuY3Rpb25cIiA/IFN1cHByZXNzZWRFcnJvciA6IGZ1bmN0aW9uIChlcnJvciwgc3VwcHJlc3NlZCwgbWVzc2FnZSkge1xyXG4gICAgdmFyIGUgPSBuZXcgRXJyb3IobWVzc2FnZSk7XHJcbiAgICByZXR1cm4gZS5uYW1lID0gXCJTdXBwcmVzc2VkRXJyb3JcIiwgZS5lcnJvciA9IGVycm9yLCBlLnN1cHByZXNzZWQgPSBzdXBwcmVzc2VkLCBlO1xyXG59O1xuXG52YXIganN4UnVudGltZSA9IHtleHBvcnRzOiB7fX07XG5cbnZhciByZWFjdEpzeFJ1bnRpbWVfZGV2ZWxvcG1lbnQgPSB7fTtcblxuLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogcmVhY3QtanN4LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG52YXIgaGFzUmVxdWlyZWRSZWFjdEpzeFJ1bnRpbWVfZGV2ZWxvcG1lbnQ7XG5cbmZ1bmN0aW9uIHJlcXVpcmVSZWFjdEpzeFJ1bnRpbWVfZGV2ZWxvcG1lbnQgKCkge1xuXHRpZiAoaGFzUmVxdWlyZWRSZWFjdEpzeFJ1bnRpbWVfZGV2ZWxvcG1lbnQpIHJldHVybiByZWFjdEpzeFJ1bnRpbWVfZGV2ZWxvcG1lbnQ7XG5cdGhhc1JlcXVpcmVkUmVhY3RKc3hSdW50aW1lX2RldmVsb3BtZW50ID0gMTtcblxuXHRpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG5cdCAgKGZ1bmN0aW9uKCkge1xuXG5cdHZhciBSZWFjdCA9IHJlcXVpcmUkJDA7XG5cblx0Ly8gQVRURU5USU9OXG5cdC8vIFdoZW4gYWRkaW5nIG5ldyBzeW1ib2xzIHRvIHRoaXMgZmlsZSxcblx0Ly8gUGxlYXNlIGNvbnNpZGVyIGFsc28gYWRkaW5nIHRvICdyZWFjdC1kZXZ0b29scy1zaGFyZWQvc3JjL2JhY2tlbmQvUmVhY3RTeW1ib2xzJ1xuXHQvLyBUaGUgU3ltYm9sIHVzZWQgdG8gdGFnIHRoZSBSZWFjdEVsZW1lbnQtbGlrZSB0eXBlcy5cblx0dmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9IFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKTtcblx0dmFyIFJFQUNUX1BPUlRBTF9UWVBFID0gU3ltYm9sLmZvcigncmVhY3QucG9ydGFsJyk7XG5cdHZhciBSRUFDVF9GUkFHTUVOVF9UWVBFID0gU3ltYm9sLmZvcigncmVhY3QuZnJhZ21lbnQnKTtcblx0dmFyIFJFQUNUX1NUUklDVF9NT0RFX1RZUEUgPSBTeW1ib2wuZm9yKCdyZWFjdC5zdHJpY3RfbW9kZScpO1xuXHR2YXIgUkVBQ1RfUFJPRklMRVJfVFlQRSA9IFN5bWJvbC5mb3IoJ3JlYWN0LnByb2ZpbGVyJyk7XG5cdHZhciBSRUFDVF9QUk9WSURFUl9UWVBFID0gU3ltYm9sLmZvcigncmVhY3QucHJvdmlkZXInKTtcblx0dmFyIFJFQUNUX0NPTlRFWFRfVFlQRSA9IFN5bWJvbC5mb3IoJ3JlYWN0LmNvbnRleHQnKTtcblx0dmFyIFJFQUNUX0ZPUldBUkRfUkVGX1RZUEUgPSBTeW1ib2wuZm9yKCdyZWFjdC5mb3J3YXJkX3JlZicpO1xuXHR2YXIgUkVBQ1RfU1VTUEVOU0VfVFlQRSA9IFN5bWJvbC5mb3IoJ3JlYWN0LnN1c3BlbnNlJyk7XG5cdHZhciBSRUFDVF9TVVNQRU5TRV9MSVNUX1RZUEUgPSBTeW1ib2wuZm9yKCdyZWFjdC5zdXNwZW5zZV9saXN0Jyk7XG5cdHZhciBSRUFDVF9NRU1PX1RZUEUgPSBTeW1ib2wuZm9yKCdyZWFjdC5tZW1vJyk7XG5cdHZhciBSRUFDVF9MQVpZX1RZUEUgPSBTeW1ib2wuZm9yKCdyZWFjdC5sYXp5Jyk7XG5cdHZhciBSRUFDVF9PRkZTQ1JFRU5fVFlQRSA9IFN5bWJvbC5mb3IoJ3JlYWN0Lm9mZnNjcmVlbicpO1xuXHR2YXIgTUFZQkVfSVRFUkFUT1JfU1lNQk9MID0gU3ltYm9sLml0ZXJhdG9yO1xuXHR2YXIgRkFVWF9JVEVSQVRPUl9TWU1CT0wgPSAnQEBpdGVyYXRvcic7XG5cdGZ1bmN0aW9uIGdldEl0ZXJhdG9yRm4obWF5YmVJdGVyYWJsZSkge1xuXHQgIGlmIChtYXliZUl0ZXJhYmxlID09PSBudWxsIHx8IHR5cGVvZiBtYXliZUl0ZXJhYmxlICE9PSAnb2JqZWN0Jykge1xuXHQgICAgcmV0dXJuIG51bGw7XG5cdCAgfVxuXG5cdCAgdmFyIG1heWJlSXRlcmF0b3IgPSBNQVlCRV9JVEVSQVRPUl9TWU1CT0wgJiYgbWF5YmVJdGVyYWJsZVtNQVlCRV9JVEVSQVRPUl9TWU1CT0xdIHx8IG1heWJlSXRlcmFibGVbRkFVWF9JVEVSQVRPUl9TWU1CT0xdO1xuXG5cdCAgaWYgKHR5cGVvZiBtYXliZUl0ZXJhdG9yID09PSAnZnVuY3Rpb24nKSB7XG5cdCAgICByZXR1cm4gbWF5YmVJdGVyYXRvcjtcblx0ICB9XG5cblx0ICByZXR1cm4gbnVsbDtcblx0fVxuXG5cdHZhciBSZWFjdFNoYXJlZEludGVybmFscyA9IFJlYWN0Ll9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEO1xuXG5cdGZ1bmN0aW9uIGVycm9yKGZvcm1hdCkge1xuXHQgIHtcblx0ICAgIHtcblx0ICAgICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4yID4gMSA/IF9sZW4yIC0gMSA6IDApLCBfa2V5MiA9IDE7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcblx0ICAgICAgICBhcmdzW19rZXkyIC0gMV0gPSBhcmd1bWVudHNbX2tleTJdO1xuXHQgICAgICB9XG5cblx0ICAgICAgcHJpbnRXYXJuaW5nKCdlcnJvcicsIGZvcm1hdCwgYXJncyk7XG5cdCAgICB9XG5cdCAgfVxuXHR9XG5cblx0ZnVuY3Rpb24gcHJpbnRXYXJuaW5nKGxldmVsLCBmb3JtYXQsIGFyZ3MpIHtcblx0ICAvLyBXaGVuIGNoYW5naW5nIHRoaXMgbG9naWMsIHlvdSBtaWdodCB3YW50IHRvIGFsc29cblx0ICAvLyB1cGRhdGUgY29uc29sZVdpdGhTdGFja0Rldi53d3cuanMgYXMgd2VsbC5cblx0ICB7XG5cdCAgICB2YXIgUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZSA9IFJlYWN0U2hhcmVkSW50ZXJuYWxzLlJlYWN0RGVidWdDdXJyZW50RnJhbWU7XG5cdCAgICB2YXIgc3RhY2sgPSBSZWFjdERlYnVnQ3VycmVudEZyYW1lLmdldFN0YWNrQWRkZW5kdW0oKTtcblxuXHQgICAgaWYgKHN0YWNrICE9PSAnJykge1xuXHQgICAgICBmb3JtYXQgKz0gJyVzJztcblx0ICAgICAgYXJncyA9IGFyZ3MuY29uY2F0KFtzdGFja10pO1xuXHQgICAgfSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaW50ZXJuYWwvc2FmZS1zdHJpbmctY29lcmNpb25cblxuXG5cdCAgICB2YXIgYXJnc1dpdGhGb3JtYXQgPSBhcmdzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuXHQgICAgICByZXR1cm4gU3RyaW5nKGl0ZW0pO1xuXHQgICAgfSk7IC8vIENhcmVmdWw6IFJOIGN1cnJlbnRseSBkZXBlbmRzIG9uIHRoaXMgcHJlZml4XG5cblx0ICAgIGFyZ3NXaXRoRm9ybWF0LnVuc2hpZnQoJ1dhcm5pbmc6ICcgKyBmb3JtYXQpOyAvLyBXZSBpbnRlbnRpb25hbGx5IGRvbid0IHVzZSBzcHJlYWQgKG9yIC5hcHBseSkgZGlyZWN0bHkgYmVjYXVzZSBpdFxuXHQgICAgLy8gYnJlYWtzIElFOTogaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2lzc3Vlcy8xMzYxMFxuXHQgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWludGVybmFsL25vLXByb2R1Y3Rpb24tbG9nZ2luZ1xuXG5cdCAgICBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHkuY2FsbChjb25zb2xlW2xldmVsXSwgY29uc29sZSwgYXJnc1dpdGhGb3JtYXQpO1xuXHQgIH1cblx0fVxuXG5cdC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblx0dmFyIGVuYWJsZVNjb3BlQVBJID0gZmFsc2U7IC8vIEV4cGVyaW1lbnRhbCBDcmVhdGUgRXZlbnQgSGFuZGxlIEFQSS5cblx0dmFyIGVuYWJsZUNhY2hlRWxlbWVudCA9IGZhbHNlO1xuXHR2YXIgZW5hYmxlVHJhbnNpdGlvblRyYWNpbmcgPSBmYWxzZTsgLy8gTm8ga25vd24gYnVncywgYnV0IG5lZWRzIHBlcmZvcm1hbmNlIHRlc3RpbmdcblxuXHR2YXIgZW5hYmxlTGVnYWN5SGlkZGVuID0gZmFsc2U7IC8vIEVuYWJsZXMgdW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2sgZmVhdHVyZSBpbiBGaWJlclxuXHQvLyBzdHVmZi4gSW50ZW5kZWQgdG8gZW5hYmxlIFJlYWN0IGNvcmUgbWVtYmVycyB0byBtb3JlIGVhc2lseSBkZWJ1ZyBzY2hlZHVsaW5nXG5cdC8vIGlzc3VlcyBpbiBERVYgYnVpbGRzLlxuXG5cdHZhciBlbmFibGVEZWJ1Z1RyYWNpbmcgPSBmYWxzZTsgLy8gVHJhY2sgd2hpY2ggRmliZXIocykgc2NoZWR1bGUgcmVuZGVyIHdvcmsuXG5cblx0dmFyIFJFQUNUX01PRFVMRV9SRUZFUkVOQ0U7XG5cblx0e1xuXHQgIFJFQUNUX01PRFVMRV9SRUZFUkVOQ0UgPSBTeW1ib2wuZm9yKCdyZWFjdC5tb2R1bGUucmVmZXJlbmNlJyk7XG5cdH1cblxuXHRmdW5jdGlvbiBpc1ZhbGlkRWxlbWVudFR5cGUodHlwZSkge1xuXHQgIGlmICh0eXBlb2YgdHlwZSA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHR5cGUgPT09ICdmdW5jdGlvbicpIHtcblx0ICAgIHJldHVybiB0cnVlO1xuXHQgIH0gLy8gTm90ZTogdHlwZW9mIG1pZ2h0IGJlIG90aGVyIHRoYW4gJ3N5bWJvbCcgb3IgJ251bWJlcicgKGUuZy4gaWYgaXQncyBhIHBvbHlmaWxsKS5cblxuXG5cdCAgaWYgKHR5cGUgPT09IFJFQUNUX0ZSQUdNRU5UX1RZUEUgfHwgdHlwZSA9PT0gUkVBQ1RfUFJPRklMRVJfVFlQRSB8fCBlbmFibGVEZWJ1Z1RyYWNpbmcgIHx8IHR5cGUgPT09IFJFQUNUX1NUUklDVF9NT0RFX1RZUEUgfHwgdHlwZSA9PT0gUkVBQ1RfU1VTUEVOU0VfVFlQRSB8fCB0eXBlID09PSBSRUFDVF9TVVNQRU5TRV9MSVNUX1RZUEUgfHwgZW5hYmxlTGVnYWN5SGlkZGVuICB8fCB0eXBlID09PSBSRUFDVF9PRkZTQ1JFRU5fVFlQRSB8fCBlbmFibGVTY29wZUFQSSAgfHwgZW5hYmxlQ2FjaGVFbGVtZW50ICB8fCBlbmFibGVUcmFuc2l0aW9uVHJhY2luZyApIHtcblx0ICAgIHJldHVybiB0cnVlO1xuXHQgIH1cblxuXHQgIGlmICh0eXBlb2YgdHlwZSA9PT0gJ29iamVjdCcgJiYgdHlwZSAhPT0gbnVsbCkge1xuXHQgICAgaWYgKHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX0xBWllfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9NRU1PX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfUFJPVklERVJfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9DT05URVhUX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRSB8fCAvLyBUaGlzIG5lZWRzIHRvIGluY2x1ZGUgYWxsIHBvc3NpYmxlIG1vZHVsZSByZWZlcmVuY2Ugb2JqZWN0XG5cdCAgICAvLyB0eXBlcyBzdXBwb3J0ZWQgYnkgYW55IEZsaWdodCBjb25maWd1cmF0aW9uIGFueXdoZXJlIHNpbmNlXG5cdCAgICAvLyB3ZSBkb24ndCBrbm93IHdoaWNoIEZsaWdodCBidWlsZCB0aGlzIHdpbGwgZW5kIHVwIGJlaW5nIHVzZWRcblx0ICAgIC8vIHdpdGguXG5cdCAgICB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9NT0RVTEVfUkVGRVJFTkNFIHx8IHR5cGUuZ2V0TW9kdWxlSWQgIT09IHVuZGVmaW5lZCkge1xuXHQgICAgICByZXR1cm4gdHJ1ZTtcblx0ICAgIH1cblx0ICB9XG5cblx0ICByZXR1cm4gZmFsc2U7XG5cdH1cblxuXHRmdW5jdGlvbiBnZXRXcmFwcGVkTmFtZShvdXRlclR5cGUsIGlubmVyVHlwZSwgd3JhcHBlck5hbWUpIHtcblx0ICB2YXIgZGlzcGxheU5hbWUgPSBvdXRlclR5cGUuZGlzcGxheU5hbWU7XG5cblx0ICBpZiAoZGlzcGxheU5hbWUpIHtcblx0ICAgIHJldHVybiBkaXNwbGF5TmFtZTtcblx0ICB9XG5cblx0ICB2YXIgZnVuY3Rpb25OYW1lID0gaW5uZXJUeXBlLmRpc3BsYXlOYW1lIHx8IGlubmVyVHlwZS5uYW1lIHx8ICcnO1xuXHQgIHJldHVybiBmdW5jdGlvbk5hbWUgIT09ICcnID8gd3JhcHBlck5hbWUgKyBcIihcIiArIGZ1bmN0aW9uTmFtZSArIFwiKVwiIDogd3JhcHBlck5hbWU7XG5cdH0gLy8gS2VlcCBpbiBzeW5jIHdpdGggcmVhY3QtcmVjb25jaWxlci9nZXRDb21wb25lbnROYW1lRnJvbUZpYmVyXG5cblxuXHRmdW5jdGlvbiBnZXRDb250ZXh0TmFtZSh0eXBlKSB7XG5cdCAgcmV0dXJuIHR5cGUuZGlzcGxheU5hbWUgfHwgJ0NvbnRleHQnO1xuXHR9IC8vIE5vdGUgdGhhdCB0aGUgcmVjb25jaWxlciBwYWNrYWdlIHNob3VsZCBnZW5lcmFsbHkgcHJlZmVyIHRvIHVzZSBnZXRDb21wb25lbnROYW1lRnJvbUZpYmVyKCkgaW5zdGVhZC5cblxuXG5cdGZ1bmN0aW9uIGdldENvbXBvbmVudE5hbWVGcm9tVHlwZSh0eXBlKSB7XG5cdCAgaWYgKHR5cGUgPT0gbnVsbCkge1xuXHQgICAgLy8gSG9zdCByb290LCB0ZXh0IG5vZGUgb3IganVzdCBpbnZhbGlkIHR5cGUuXG5cdCAgICByZXR1cm4gbnVsbDtcblx0ICB9XG5cblx0ICB7XG5cdCAgICBpZiAodHlwZW9mIHR5cGUudGFnID09PSAnbnVtYmVyJykge1xuXHQgICAgICBlcnJvcignUmVjZWl2ZWQgYW4gdW5leHBlY3RlZCBvYmplY3QgaW4gZ2V0Q29tcG9uZW50TmFtZUZyb21UeXBlKCkuICcgKyAnVGhpcyBpcyBsaWtlbHkgYSBidWcgaW4gUmVhY3QuIFBsZWFzZSBmaWxlIGFuIGlzc3VlLicpO1xuXHQgICAgfVxuXHQgIH1cblxuXHQgIGlmICh0eXBlb2YgdHlwZSA9PT0gJ2Z1bmN0aW9uJykge1xuXHQgICAgcmV0dXJuIHR5cGUuZGlzcGxheU5hbWUgfHwgdHlwZS5uYW1lIHx8IG51bGw7XG5cdCAgfVxuXG5cdCAgaWYgKHR5cGVvZiB0eXBlID09PSAnc3RyaW5nJykge1xuXHQgICAgcmV0dXJuIHR5cGU7XG5cdCAgfVxuXG5cdCAgc3dpdGNoICh0eXBlKSB7XG5cdCAgICBjYXNlIFJFQUNUX0ZSQUdNRU5UX1RZUEU6XG5cdCAgICAgIHJldHVybiAnRnJhZ21lbnQnO1xuXG5cdCAgICBjYXNlIFJFQUNUX1BPUlRBTF9UWVBFOlxuXHQgICAgICByZXR1cm4gJ1BvcnRhbCc7XG5cblx0ICAgIGNhc2UgUkVBQ1RfUFJPRklMRVJfVFlQRTpcblx0ICAgICAgcmV0dXJuICdQcm9maWxlcic7XG5cblx0ICAgIGNhc2UgUkVBQ1RfU1RSSUNUX01PREVfVFlQRTpcblx0ICAgICAgcmV0dXJuICdTdHJpY3RNb2RlJztcblxuXHQgICAgY2FzZSBSRUFDVF9TVVNQRU5TRV9UWVBFOlxuXHQgICAgICByZXR1cm4gJ1N1c3BlbnNlJztcblxuXHQgICAgY2FzZSBSRUFDVF9TVVNQRU5TRV9MSVNUX1RZUEU6XG5cdCAgICAgIHJldHVybiAnU3VzcGVuc2VMaXN0JztcblxuXHQgIH1cblxuXHQgIGlmICh0eXBlb2YgdHlwZSA9PT0gJ29iamVjdCcpIHtcblx0ICAgIHN3aXRjaCAodHlwZS4kJHR5cGVvZikge1xuXHQgICAgICBjYXNlIFJFQUNUX0NPTlRFWFRfVFlQRTpcblx0ICAgICAgICB2YXIgY29udGV4dCA9IHR5cGU7XG5cdCAgICAgICAgcmV0dXJuIGdldENvbnRleHROYW1lKGNvbnRleHQpICsgJy5Db25zdW1lcic7XG5cblx0ICAgICAgY2FzZSBSRUFDVF9QUk9WSURFUl9UWVBFOlxuXHQgICAgICAgIHZhciBwcm92aWRlciA9IHR5cGU7XG5cdCAgICAgICAgcmV0dXJuIGdldENvbnRleHROYW1lKHByb3ZpZGVyLl9jb250ZXh0KSArICcuUHJvdmlkZXInO1xuXG5cdCAgICAgIGNhc2UgUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRTpcblx0ICAgICAgICByZXR1cm4gZ2V0V3JhcHBlZE5hbWUodHlwZSwgdHlwZS5yZW5kZXIsICdGb3J3YXJkUmVmJyk7XG5cblx0ICAgICAgY2FzZSBSRUFDVF9NRU1PX1RZUEU6XG5cdCAgICAgICAgdmFyIG91dGVyTmFtZSA9IHR5cGUuZGlzcGxheU5hbWUgfHwgbnVsbDtcblxuXHQgICAgICAgIGlmIChvdXRlck5hbWUgIT09IG51bGwpIHtcblx0ICAgICAgICAgIHJldHVybiBvdXRlck5hbWU7XG5cdCAgICAgICAgfVxuXG5cdCAgICAgICAgcmV0dXJuIGdldENvbXBvbmVudE5hbWVGcm9tVHlwZSh0eXBlLnR5cGUpIHx8ICdNZW1vJztcblxuXHQgICAgICBjYXNlIFJFQUNUX0xBWllfVFlQRTpcblx0ICAgICAgICB7XG5cdCAgICAgICAgICB2YXIgbGF6eUNvbXBvbmVudCA9IHR5cGU7XG5cdCAgICAgICAgICB2YXIgcGF5bG9hZCA9IGxhenlDb21wb25lbnQuX3BheWxvYWQ7XG5cdCAgICAgICAgICB2YXIgaW5pdCA9IGxhenlDb21wb25lbnQuX2luaXQ7XG5cblx0ICAgICAgICAgIHRyeSB7XG5cdCAgICAgICAgICAgIHJldHVybiBnZXRDb21wb25lbnROYW1lRnJvbVR5cGUoaW5pdChwYXlsb2FkKSk7XG5cdCAgICAgICAgICB9IGNhdGNoICh4KSB7XG5cdCAgICAgICAgICAgIHJldHVybiBudWxsO1xuXHQgICAgICAgICAgfVxuXHQgICAgICAgIH1cblxuXHQgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZmFsbHRocm91Z2hcblx0ICAgIH1cblx0ICB9XG5cblx0ICByZXR1cm4gbnVsbDtcblx0fVxuXG5cdHZhciBhc3NpZ24gPSBPYmplY3QuYXNzaWduO1xuXG5cdC8vIEhlbHBlcnMgdG8gcGF0Y2ggY29uc29sZS5sb2dzIHRvIGF2b2lkIGxvZ2dpbmcgZHVyaW5nIHNpZGUtZWZmZWN0IGZyZWVcblx0Ly8gcmVwbGF5aW5nIG9uIHJlbmRlciBmdW5jdGlvbi4gVGhpcyBjdXJyZW50bHkgb25seSBwYXRjaGVzIHRoZSBvYmplY3Rcblx0Ly8gbGF6aWx5IHdoaWNoIHdvbid0IGNvdmVyIGlmIHRoZSBsb2cgZnVuY3Rpb24gd2FzIGV4dHJhY3RlZCBlYWdlcmx5LlxuXHQvLyBXZSBjb3VsZCBhbHNvIGVhZ2VybHkgcGF0Y2ggdGhlIG1ldGhvZC5cblx0dmFyIGRpc2FibGVkRGVwdGggPSAwO1xuXHR2YXIgcHJldkxvZztcblx0dmFyIHByZXZJbmZvO1xuXHR2YXIgcHJldldhcm47XG5cdHZhciBwcmV2RXJyb3I7XG5cdHZhciBwcmV2R3JvdXA7XG5cdHZhciBwcmV2R3JvdXBDb2xsYXBzZWQ7XG5cdHZhciBwcmV2R3JvdXBFbmQ7XG5cblx0ZnVuY3Rpb24gZGlzYWJsZWRMb2coKSB7fVxuXG5cdGRpc2FibGVkTG9nLl9fcmVhY3REaXNhYmxlZExvZyA9IHRydWU7XG5cdGZ1bmN0aW9uIGRpc2FibGVMb2dzKCkge1xuXHQgIHtcblx0ICAgIGlmIChkaXNhYmxlZERlcHRoID09PSAwKSB7XG5cdCAgICAgIC8qIGVzbGludC1kaXNhYmxlIHJlYWN0LWludGVybmFsL25vLXByb2R1Y3Rpb24tbG9nZ2luZyAqL1xuXHQgICAgICBwcmV2TG9nID0gY29uc29sZS5sb2c7XG5cdCAgICAgIHByZXZJbmZvID0gY29uc29sZS5pbmZvO1xuXHQgICAgICBwcmV2V2FybiA9IGNvbnNvbGUud2Fybjtcblx0ICAgICAgcHJldkVycm9yID0gY29uc29sZS5lcnJvcjtcblx0ICAgICAgcHJldkdyb3VwID0gY29uc29sZS5ncm91cDtcblx0ICAgICAgcHJldkdyb3VwQ29sbGFwc2VkID0gY29uc29sZS5ncm91cENvbGxhcHNlZDtcblx0ICAgICAgcHJldkdyb3VwRW5kID0gY29uc29sZS5ncm91cEVuZDsgLy8gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2lzc3Vlcy8xOTA5OVxuXG5cdCAgICAgIHZhciBwcm9wcyA9IHtcblx0ICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG5cdCAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcblx0ICAgICAgICB2YWx1ZTogZGlzYWJsZWRMb2csXG5cdCAgICAgICAgd3JpdGFibGU6IHRydWVcblx0ICAgICAgfTsgLy8gJEZsb3dGaXhNZSBGbG93IHRoaW5rcyBjb25zb2xlIGlzIGltbXV0YWJsZS5cblxuXHQgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhjb25zb2xlLCB7XG5cdCAgICAgICAgaW5mbzogcHJvcHMsXG5cdCAgICAgICAgbG9nOiBwcm9wcyxcblx0ICAgICAgICB3YXJuOiBwcm9wcyxcblx0ICAgICAgICBlcnJvcjogcHJvcHMsXG5cdCAgICAgICAgZ3JvdXA6IHByb3BzLFxuXHQgICAgICAgIGdyb3VwQ29sbGFwc2VkOiBwcm9wcyxcblx0ICAgICAgICBncm91cEVuZDogcHJvcHNcblx0ICAgICAgfSk7XG5cdCAgICAgIC8qIGVzbGludC1lbmFibGUgcmVhY3QtaW50ZXJuYWwvbm8tcHJvZHVjdGlvbi1sb2dnaW5nICovXG5cdCAgICB9XG5cblx0ICAgIGRpc2FibGVkRGVwdGgrKztcblx0ICB9XG5cdH1cblx0ZnVuY3Rpb24gcmVlbmFibGVMb2dzKCkge1xuXHQgIHtcblx0ICAgIGRpc2FibGVkRGVwdGgtLTtcblxuXHQgICAgaWYgKGRpc2FibGVkRGVwdGggPT09IDApIHtcblx0ICAgICAgLyogZXNsaW50LWRpc2FibGUgcmVhY3QtaW50ZXJuYWwvbm8tcHJvZHVjdGlvbi1sb2dnaW5nICovXG5cdCAgICAgIHZhciBwcm9wcyA9IHtcblx0ICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG5cdCAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcblx0ICAgICAgICB3cml0YWJsZTogdHJ1ZVxuXHQgICAgICB9OyAvLyAkRmxvd0ZpeE1lIEZsb3cgdGhpbmtzIGNvbnNvbGUgaXMgaW1tdXRhYmxlLlxuXG5cdCAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGNvbnNvbGUsIHtcblx0ICAgICAgICBsb2c6IGFzc2lnbih7fSwgcHJvcHMsIHtcblx0ICAgICAgICAgIHZhbHVlOiBwcmV2TG9nXG5cdCAgICAgICAgfSksXG5cdCAgICAgICAgaW5mbzogYXNzaWduKHt9LCBwcm9wcywge1xuXHQgICAgICAgICAgdmFsdWU6IHByZXZJbmZvXG5cdCAgICAgICAgfSksXG5cdCAgICAgICAgd2FybjogYXNzaWduKHt9LCBwcm9wcywge1xuXHQgICAgICAgICAgdmFsdWU6IHByZXZXYXJuXG5cdCAgICAgICAgfSksXG5cdCAgICAgICAgZXJyb3I6IGFzc2lnbih7fSwgcHJvcHMsIHtcblx0ICAgICAgICAgIHZhbHVlOiBwcmV2RXJyb3Jcblx0ICAgICAgICB9KSxcblx0ICAgICAgICBncm91cDogYXNzaWduKHt9LCBwcm9wcywge1xuXHQgICAgICAgICAgdmFsdWU6IHByZXZHcm91cFxuXHQgICAgICAgIH0pLFxuXHQgICAgICAgIGdyb3VwQ29sbGFwc2VkOiBhc3NpZ24oe30sIHByb3BzLCB7XG5cdCAgICAgICAgICB2YWx1ZTogcHJldkdyb3VwQ29sbGFwc2VkXG5cdCAgICAgICAgfSksXG5cdCAgICAgICAgZ3JvdXBFbmQ6IGFzc2lnbih7fSwgcHJvcHMsIHtcblx0ICAgICAgICAgIHZhbHVlOiBwcmV2R3JvdXBFbmRcblx0ICAgICAgICB9KVxuXHQgICAgICB9KTtcblx0ICAgICAgLyogZXNsaW50LWVuYWJsZSByZWFjdC1pbnRlcm5hbC9uby1wcm9kdWN0aW9uLWxvZ2dpbmcgKi9cblx0ICAgIH1cblxuXHQgICAgaWYgKGRpc2FibGVkRGVwdGggPCAwKSB7XG5cdCAgICAgIGVycm9yKCdkaXNhYmxlZERlcHRoIGZlbGwgYmVsb3cgemVyby4gJyArICdUaGlzIGlzIGEgYnVnIGluIFJlYWN0LiBQbGVhc2UgZmlsZSBhbiBpc3N1ZS4nKTtcblx0ICAgIH1cblx0ICB9XG5cdH1cblxuXHR2YXIgUmVhY3RDdXJyZW50RGlzcGF0Y2hlciA9IFJlYWN0U2hhcmVkSW50ZXJuYWxzLlJlYWN0Q3VycmVudERpc3BhdGNoZXI7XG5cdHZhciBwcmVmaXg7XG5cdGZ1bmN0aW9uIGRlc2NyaWJlQnVpbHRJbkNvbXBvbmVudEZyYW1lKG5hbWUsIHNvdXJjZSwgb3duZXJGbikge1xuXHQgIHtcblx0ICAgIGlmIChwcmVmaXggPT09IHVuZGVmaW5lZCkge1xuXHQgICAgICAvLyBFeHRyYWN0IHRoZSBWTSBzcGVjaWZpYyBwcmVmaXggdXNlZCBieSBlYWNoIGxpbmUuXG5cdCAgICAgIHRyeSB7XG5cdCAgICAgICAgdGhyb3cgRXJyb3IoKTtcblx0ICAgICAgfSBjYXRjaCAoeCkge1xuXHQgICAgICAgIHZhciBtYXRjaCA9IHguc3RhY2sudHJpbSgpLm1hdGNoKC9cXG4oICooYXQgKT8pLyk7XG5cdCAgICAgICAgcHJlZml4ID0gbWF0Y2ggJiYgbWF0Y2hbMV0gfHwgJyc7XG5cdCAgICAgIH1cblx0ICAgIH0gLy8gV2UgdXNlIHRoZSBwcmVmaXggdG8gZW5zdXJlIG91ciBzdGFja3MgbGluZSB1cCB3aXRoIG5hdGl2ZSBzdGFjayBmcmFtZXMuXG5cblxuXHQgICAgcmV0dXJuICdcXG4nICsgcHJlZml4ICsgbmFtZTtcblx0ICB9XG5cdH1cblx0dmFyIHJlZW50cnkgPSBmYWxzZTtcblx0dmFyIGNvbXBvbmVudEZyYW1lQ2FjaGU7XG5cblx0e1xuXHQgIHZhciBQb3NzaWJseVdlYWtNYXAgPSB0eXBlb2YgV2Vha01hcCA9PT0gJ2Z1bmN0aW9uJyA/IFdlYWtNYXAgOiBNYXA7XG5cdCAgY29tcG9uZW50RnJhbWVDYWNoZSA9IG5ldyBQb3NzaWJseVdlYWtNYXAoKTtcblx0fVxuXG5cdGZ1bmN0aW9uIGRlc2NyaWJlTmF0aXZlQ29tcG9uZW50RnJhbWUoZm4sIGNvbnN0cnVjdCkge1xuXHQgIC8vIElmIHNvbWV0aGluZyBhc2tlZCBmb3IgYSBzdGFjayBpbnNpZGUgYSBmYWtlIHJlbmRlciwgaXQgc2hvdWxkIGdldCBpZ25vcmVkLlxuXHQgIGlmICggIWZuIHx8IHJlZW50cnkpIHtcblx0ICAgIHJldHVybiAnJztcblx0ICB9XG5cblx0ICB7XG5cdCAgICB2YXIgZnJhbWUgPSBjb21wb25lbnRGcmFtZUNhY2hlLmdldChmbik7XG5cblx0ICAgIGlmIChmcmFtZSAhPT0gdW5kZWZpbmVkKSB7XG5cdCAgICAgIHJldHVybiBmcmFtZTtcblx0ICAgIH1cblx0ICB9XG5cblx0ICB2YXIgY29udHJvbDtcblx0ICByZWVudHJ5ID0gdHJ1ZTtcblx0ICB2YXIgcHJldmlvdXNQcmVwYXJlU3RhY2tUcmFjZSA9IEVycm9yLnByZXBhcmVTdGFja1RyYWNlOyAvLyAkRmxvd0ZpeE1lIEl0IGRvZXMgYWNjZXB0IHVuZGVmaW5lZC5cblxuXHQgIEVycm9yLnByZXBhcmVTdGFja1RyYWNlID0gdW5kZWZpbmVkO1xuXHQgIHZhciBwcmV2aW91c0Rpc3BhdGNoZXI7XG5cblx0ICB7XG5cdCAgICBwcmV2aW91c0Rpc3BhdGNoZXIgPSBSZWFjdEN1cnJlbnREaXNwYXRjaGVyLmN1cnJlbnQ7IC8vIFNldCB0aGUgZGlzcGF0Y2hlciBpbiBERVYgYmVjYXVzZSB0aGlzIG1pZ2h0IGJlIGNhbGwgaW4gdGhlIHJlbmRlciBmdW5jdGlvblxuXHQgICAgLy8gZm9yIHdhcm5pbmdzLlxuXG5cdCAgICBSZWFjdEN1cnJlbnREaXNwYXRjaGVyLmN1cnJlbnQgPSBudWxsO1xuXHQgICAgZGlzYWJsZUxvZ3MoKTtcblx0ICB9XG5cblx0ICB0cnkge1xuXHQgICAgLy8gVGhpcyBzaG91bGQgdGhyb3cuXG5cdCAgICBpZiAoY29uc3RydWN0KSB7XG5cdCAgICAgIC8vIFNvbWV0aGluZyBzaG91bGQgYmUgc2V0dGluZyB0aGUgcHJvcHMgaW4gdGhlIGNvbnN0cnVjdG9yLlxuXHQgICAgICB2YXIgRmFrZSA9IGZ1bmN0aW9uICgpIHtcblx0ICAgICAgICB0aHJvdyBFcnJvcigpO1xuXHQgICAgICB9OyAvLyAkRmxvd0ZpeE1lXG5cblxuXHQgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRmFrZS5wcm90b3R5cGUsICdwcm9wcycsIHtcblx0ICAgICAgICBzZXQ6IGZ1bmN0aW9uICgpIHtcblx0ICAgICAgICAgIC8vIFdlIHVzZSBhIHRocm93aW5nIHNldHRlciBpbnN0ZWFkIG9mIGZyb3plbiBvciBub24td3JpdGFibGUgcHJvcHNcblx0ICAgICAgICAgIC8vIGJlY2F1c2UgdGhhdCB3b24ndCB0aHJvdyBpbiBhIG5vbi1zdHJpY3QgbW9kZSBmdW5jdGlvbi5cblx0ICAgICAgICAgIHRocm93IEVycm9yKCk7XG5cdCAgICAgICAgfVxuXHQgICAgICB9KTtcblxuXHQgICAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09ICdvYmplY3QnICYmIFJlZmxlY3QuY29uc3RydWN0KSB7XG5cdCAgICAgICAgLy8gV2UgY29uc3RydWN0IGEgZGlmZmVyZW50IGNvbnRyb2wgZm9yIHRoaXMgY2FzZSB0byBpbmNsdWRlIGFueSBleHRyYVxuXHQgICAgICAgIC8vIGZyYW1lcyBhZGRlZCBieSB0aGUgY29uc3RydWN0IGNhbGwuXG5cdCAgICAgICAgdHJ5IHtcblx0ICAgICAgICAgIFJlZmxlY3QuY29uc3RydWN0KEZha2UsIFtdKTtcblx0ICAgICAgICB9IGNhdGNoICh4KSB7XG5cdCAgICAgICAgICBjb250cm9sID0geDtcblx0ICAgICAgICB9XG5cblx0ICAgICAgICBSZWZsZWN0LmNvbnN0cnVjdChmbiwgW10sIEZha2UpO1xuXHQgICAgICB9IGVsc2Uge1xuXHQgICAgICAgIHRyeSB7XG5cdCAgICAgICAgICBGYWtlLmNhbGwoKTtcblx0ICAgICAgICB9IGNhdGNoICh4KSB7XG5cdCAgICAgICAgICBjb250cm9sID0geDtcblx0ICAgICAgICB9XG5cblx0ICAgICAgICBmbi5jYWxsKEZha2UucHJvdG90eXBlKTtcblx0ICAgICAgfVxuXHQgICAgfSBlbHNlIHtcblx0ICAgICAgdHJ5IHtcblx0ICAgICAgICB0aHJvdyBFcnJvcigpO1xuXHQgICAgICB9IGNhdGNoICh4KSB7XG5cdCAgICAgICAgY29udHJvbCA9IHg7XG5cdCAgICAgIH1cblxuXHQgICAgICBmbigpO1xuXHQgICAgfVxuXHQgIH0gY2F0Y2ggKHNhbXBsZSkge1xuXHQgICAgLy8gVGhpcyBpcyBpbmxpbmVkIG1hbnVhbGx5IGJlY2F1c2UgY2xvc3VyZSBkb2Vzbid0IGRvIGl0IGZvciB1cy5cblx0ICAgIGlmIChzYW1wbGUgJiYgY29udHJvbCAmJiB0eXBlb2Ygc2FtcGxlLnN0YWNrID09PSAnc3RyaW5nJykge1xuXHQgICAgICAvLyBUaGlzIGV4dHJhY3RzIHRoZSBmaXJzdCBmcmFtZSBmcm9tIHRoZSBzYW1wbGUgdGhhdCBpc24ndCBhbHNvIGluIHRoZSBjb250cm9sLlxuXHQgICAgICAvLyBTa2lwcGluZyBvbmUgZnJhbWUgdGhhdCB3ZSBhc3N1bWUgaXMgdGhlIGZyYW1lIHRoYXQgY2FsbHMgdGhlIHR3by5cblx0ICAgICAgdmFyIHNhbXBsZUxpbmVzID0gc2FtcGxlLnN0YWNrLnNwbGl0KCdcXG4nKTtcblx0ICAgICAgdmFyIGNvbnRyb2xMaW5lcyA9IGNvbnRyb2wuc3RhY2suc3BsaXQoJ1xcbicpO1xuXHQgICAgICB2YXIgcyA9IHNhbXBsZUxpbmVzLmxlbmd0aCAtIDE7XG5cdCAgICAgIHZhciBjID0gY29udHJvbExpbmVzLmxlbmd0aCAtIDE7XG5cblx0ICAgICAgd2hpbGUgKHMgPj0gMSAmJiBjID49IDAgJiYgc2FtcGxlTGluZXNbc10gIT09IGNvbnRyb2xMaW5lc1tjXSkge1xuXHQgICAgICAgIC8vIFdlIGV4cGVjdCBhdCBsZWFzdCBvbmUgc3RhY2sgZnJhbWUgdG8gYmUgc2hhcmVkLlxuXHQgICAgICAgIC8vIFR5cGljYWxseSB0aGlzIHdpbGwgYmUgdGhlIHJvb3QgbW9zdCBvbmUuIEhvd2V2ZXIsIHN0YWNrIGZyYW1lcyBtYXkgYmVcblx0ICAgICAgICAvLyBjdXQgb2ZmIGR1ZSB0byBtYXhpbXVtIHN0YWNrIGxpbWl0cy4gSW4gdGhpcyBjYXNlLCBvbmUgbWF5YmUgY3V0IG9mZlxuXHQgICAgICAgIC8vIGVhcmxpZXIgdGhhbiB0aGUgb3RoZXIuIFdlIGFzc3VtZSB0aGF0IHRoZSBzYW1wbGUgaXMgbG9uZ2VyIG9yIHRoZSBzYW1lXG5cdCAgICAgICAgLy8gYW5kIHRoZXJlIGZvciBjdXQgb2ZmIGVhcmxpZXIuIFNvIHdlIHNob3VsZCBmaW5kIHRoZSByb290IG1vc3QgZnJhbWUgaW5cblx0ICAgICAgICAvLyB0aGUgc2FtcGxlIHNvbWV3aGVyZSBpbiB0aGUgY29udHJvbC5cblx0ICAgICAgICBjLS07XG5cdCAgICAgIH1cblxuXHQgICAgICBmb3IgKDsgcyA+PSAxICYmIGMgPj0gMDsgcy0tLCBjLS0pIHtcblx0ICAgICAgICAvLyBOZXh0IHdlIGZpbmQgdGhlIGZpcnN0IG9uZSB0aGF0IGlzbid0IHRoZSBzYW1lIHdoaWNoIHNob3VsZCBiZSB0aGVcblx0ICAgICAgICAvLyBmcmFtZSB0aGF0IGNhbGxlZCBvdXIgc2FtcGxlIGZ1bmN0aW9uIGFuZCB0aGUgY29udHJvbC5cblx0ICAgICAgICBpZiAoc2FtcGxlTGluZXNbc10gIT09IGNvbnRyb2xMaW5lc1tjXSkge1xuXHQgICAgICAgICAgLy8gSW4gVjgsIHRoZSBmaXJzdCBsaW5lIGlzIGRlc2NyaWJpbmcgdGhlIG1lc3NhZ2UgYnV0IG90aGVyIFZNcyBkb24ndC5cblx0ICAgICAgICAgIC8vIElmIHdlJ3JlIGFib3V0IHRvIHJldHVybiB0aGUgZmlyc3QgbGluZSwgYW5kIHRoZSBjb250cm9sIGlzIGFsc28gb24gdGhlIHNhbWVcblx0ICAgICAgICAgIC8vIGxpbmUsIHRoYXQncyBhIHByZXR0eSBnb29kIGluZGljYXRvciB0aGF0IG91ciBzYW1wbGUgdGhyZXcgYXQgc2FtZSBsaW5lIGFzXG5cdCAgICAgICAgICAvLyB0aGUgY29udHJvbC4gSS5lLiBiZWZvcmUgd2UgZW50ZXJlZCB0aGUgc2FtcGxlIGZyYW1lLiBTbyB3ZSBpZ25vcmUgdGhpcyByZXN1bHQuXG5cdCAgICAgICAgICAvLyBUaGlzIGNhbiBoYXBwZW4gaWYgeW91IHBhc3NlZCBhIGNsYXNzIHRvIGZ1bmN0aW9uIGNvbXBvbmVudCwgb3Igbm9uLWZ1bmN0aW9uLlxuXHQgICAgICAgICAgaWYgKHMgIT09IDEgfHwgYyAhPT0gMSkge1xuXHQgICAgICAgICAgICBkbyB7XG5cdCAgICAgICAgICAgICAgcy0tO1xuXHQgICAgICAgICAgICAgIGMtLTsgLy8gV2UgbWF5IHN0aWxsIGhhdmUgc2ltaWxhciBpbnRlcm1lZGlhdGUgZnJhbWVzIGZyb20gdGhlIGNvbnN0cnVjdCBjYWxsLlxuXHQgICAgICAgICAgICAgIC8vIFRoZSBuZXh0IG9uZSB0aGF0IGlzbid0IHRoZSBzYW1lIHNob3VsZCBiZSBvdXIgbWF0Y2ggdGhvdWdoLlxuXG5cdCAgICAgICAgICAgICAgaWYgKGMgPCAwIHx8IHNhbXBsZUxpbmVzW3NdICE9PSBjb250cm9sTGluZXNbY10pIHtcblx0ICAgICAgICAgICAgICAgIC8vIFY4IGFkZHMgYSBcIm5ld1wiIHByZWZpeCBmb3IgbmF0aXZlIGNsYXNzZXMuIExldCdzIHJlbW92ZSBpdCB0byBtYWtlIGl0IHByZXR0aWVyLlxuXHQgICAgICAgICAgICAgICAgdmFyIF9mcmFtZSA9ICdcXG4nICsgc2FtcGxlTGluZXNbc10ucmVwbGFjZSgnIGF0IG5ldyAnLCAnIGF0ICcpOyAvLyBJZiBvdXIgY29tcG9uZW50IGZyYW1lIGlzIGxhYmVsZWQgXCI8YW5vbnltb3VzPlwiXG5cdCAgICAgICAgICAgICAgICAvLyBidXQgd2UgaGF2ZSBhIHVzZXItcHJvdmlkZWQgXCJkaXNwbGF5TmFtZVwiXG5cdCAgICAgICAgICAgICAgICAvLyBzcGxpY2UgaXQgaW4gdG8gbWFrZSB0aGUgc3RhY2sgbW9yZSByZWFkYWJsZS5cblxuXG5cdCAgICAgICAgICAgICAgICBpZiAoZm4uZGlzcGxheU5hbWUgJiYgX2ZyYW1lLmluY2x1ZGVzKCc8YW5vbnltb3VzPicpKSB7XG5cdCAgICAgICAgICAgICAgICAgIF9mcmFtZSA9IF9mcmFtZS5yZXBsYWNlKCc8YW5vbnltb3VzPicsIGZuLmRpc3BsYXlOYW1lKTtcblx0ICAgICAgICAgICAgICAgIH1cblxuXHQgICAgICAgICAgICAgICAge1xuXHQgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGZuID09PSAnZnVuY3Rpb24nKSB7XG5cdCAgICAgICAgICAgICAgICAgICAgY29tcG9uZW50RnJhbWVDYWNoZS5zZXQoZm4sIF9mcmFtZSk7XG5cdCAgICAgICAgICAgICAgICAgIH1cblx0ICAgICAgICAgICAgICAgIH0gLy8gUmV0dXJuIHRoZSBsaW5lIHdlIGZvdW5kLlxuXG5cblx0ICAgICAgICAgICAgICAgIHJldHVybiBfZnJhbWU7XG5cdCAgICAgICAgICAgICAgfVxuXHQgICAgICAgICAgICB9IHdoaWxlIChzID49IDEgJiYgYyA+PSAwKTtcblx0ICAgICAgICAgIH1cblxuXHQgICAgICAgICAgYnJlYWs7XG5cdCAgICAgICAgfVxuXHQgICAgICB9XG5cdCAgICB9XG5cdCAgfSBmaW5hbGx5IHtcblx0ICAgIHJlZW50cnkgPSBmYWxzZTtcblxuXHQgICAge1xuXHQgICAgICBSZWFjdEN1cnJlbnREaXNwYXRjaGVyLmN1cnJlbnQgPSBwcmV2aW91c0Rpc3BhdGNoZXI7XG5cdCAgICAgIHJlZW5hYmxlTG9ncygpO1xuXHQgICAgfVxuXG5cdCAgICBFcnJvci5wcmVwYXJlU3RhY2tUcmFjZSA9IHByZXZpb3VzUHJlcGFyZVN0YWNrVHJhY2U7XG5cdCAgfSAvLyBGYWxsYmFjayB0byBqdXN0IHVzaW5nIHRoZSBuYW1lIGlmIHdlIGNvdWxkbid0IG1ha2UgaXQgdGhyb3cuXG5cblxuXHQgIHZhciBuYW1lID0gZm4gPyBmbi5kaXNwbGF5TmFtZSB8fCBmbi5uYW1lIDogJyc7XG5cdCAgdmFyIHN5bnRoZXRpY0ZyYW1lID0gbmFtZSA/IGRlc2NyaWJlQnVpbHRJbkNvbXBvbmVudEZyYW1lKG5hbWUpIDogJyc7XG5cblx0ICB7XG5cdCAgICBpZiAodHlwZW9mIGZuID09PSAnZnVuY3Rpb24nKSB7XG5cdCAgICAgIGNvbXBvbmVudEZyYW1lQ2FjaGUuc2V0KGZuLCBzeW50aGV0aWNGcmFtZSk7XG5cdCAgICB9XG5cdCAgfVxuXG5cdCAgcmV0dXJuIHN5bnRoZXRpY0ZyYW1lO1xuXHR9XG5cdGZ1bmN0aW9uIGRlc2NyaWJlRnVuY3Rpb25Db21wb25lbnRGcmFtZShmbiwgc291cmNlLCBvd25lckZuKSB7XG5cdCAge1xuXHQgICAgcmV0dXJuIGRlc2NyaWJlTmF0aXZlQ29tcG9uZW50RnJhbWUoZm4sIGZhbHNlKTtcblx0ICB9XG5cdH1cblxuXHRmdW5jdGlvbiBzaG91bGRDb25zdHJ1Y3QoQ29tcG9uZW50KSB7XG5cdCAgdmFyIHByb3RvdHlwZSA9IENvbXBvbmVudC5wcm90b3R5cGU7XG5cdCAgcmV0dXJuICEhKHByb3RvdHlwZSAmJiBwcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudCk7XG5cdH1cblxuXHRmdW5jdGlvbiBkZXNjcmliZVVua25vd25FbGVtZW50VHlwZUZyYW1lSW5ERVYodHlwZSwgc291cmNlLCBvd25lckZuKSB7XG5cblx0ICBpZiAodHlwZSA9PSBudWxsKSB7XG5cdCAgICByZXR1cm4gJyc7XG5cdCAgfVxuXG5cdCAgaWYgKHR5cGVvZiB0eXBlID09PSAnZnVuY3Rpb24nKSB7XG5cdCAgICB7XG5cdCAgICAgIHJldHVybiBkZXNjcmliZU5hdGl2ZUNvbXBvbmVudEZyYW1lKHR5cGUsIHNob3VsZENvbnN0cnVjdCh0eXBlKSk7XG5cdCAgICB9XG5cdCAgfVxuXG5cdCAgaWYgKHR5cGVvZiB0eXBlID09PSAnc3RyaW5nJykge1xuXHQgICAgcmV0dXJuIGRlc2NyaWJlQnVpbHRJbkNvbXBvbmVudEZyYW1lKHR5cGUpO1xuXHQgIH1cblxuXHQgIHN3aXRjaCAodHlwZSkge1xuXHQgICAgY2FzZSBSRUFDVF9TVVNQRU5TRV9UWVBFOlxuXHQgICAgICByZXR1cm4gZGVzY3JpYmVCdWlsdEluQ29tcG9uZW50RnJhbWUoJ1N1c3BlbnNlJyk7XG5cblx0ICAgIGNhc2UgUkVBQ1RfU1VTUEVOU0VfTElTVF9UWVBFOlxuXHQgICAgICByZXR1cm4gZGVzY3JpYmVCdWlsdEluQ29tcG9uZW50RnJhbWUoJ1N1c3BlbnNlTGlzdCcpO1xuXHQgIH1cblxuXHQgIGlmICh0eXBlb2YgdHlwZSA9PT0gJ29iamVjdCcpIHtcblx0ICAgIHN3aXRjaCAodHlwZS4kJHR5cGVvZikge1xuXHQgICAgICBjYXNlIFJFQUNUX0ZPUldBUkRfUkVGX1RZUEU6XG5cdCAgICAgICAgcmV0dXJuIGRlc2NyaWJlRnVuY3Rpb25Db21wb25lbnRGcmFtZSh0eXBlLnJlbmRlcik7XG5cblx0ICAgICAgY2FzZSBSRUFDVF9NRU1PX1RZUEU6XG5cdCAgICAgICAgLy8gTWVtbyBtYXkgY29udGFpbiBhbnkgY29tcG9uZW50IHR5cGUgc28gd2UgcmVjdXJzaXZlbHkgcmVzb2x2ZSBpdC5cblx0ICAgICAgICByZXR1cm4gZGVzY3JpYmVVbmtub3duRWxlbWVudFR5cGVGcmFtZUluREVWKHR5cGUudHlwZSwgc291cmNlLCBvd25lckZuKTtcblxuXHQgICAgICBjYXNlIFJFQUNUX0xBWllfVFlQRTpcblx0ICAgICAgICB7XG5cdCAgICAgICAgICB2YXIgbGF6eUNvbXBvbmVudCA9IHR5cGU7XG5cdCAgICAgICAgICB2YXIgcGF5bG9hZCA9IGxhenlDb21wb25lbnQuX3BheWxvYWQ7XG5cdCAgICAgICAgICB2YXIgaW5pdCA9IGxhenlDb21wb25lbnQuX2luaXQ7XG5cblx0ICAgICAgICAgIHRyeSB7XG5cdCAgICAgICAgICAgIC8vIExhenkgbWF5IGNvbnRhaW4gYW55IGNvbXBvbmVudCB0eXBlIHNvIHdlIHJlY3Vyc2l2ZWx5IHJlc29sdmUgaXQuXG5cdCAgICAgICAgICAgIHJldHVybiBkZXNjcmliZVVua25vd25FbGVtZW50VHlwZUZyYW1lSW5ERVYoaW5pdChwYXlsb2FkKSwgc291cmNlLCBvd25lckZuKTtcblx0ICAgICAgICAgIH0gY2F0Y2ggKHgpIHt9XG5cdCAgICAgICAgfVxuXHQgICAgfVxuXHQgIH1cblxuXHQgIHJldHVybiAnJztcblx0fVxuXG5cdHZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cblx0dmFyIGxvZ2dlZFR5cGVGYWlsdXJlcyA9IHt9O1xuXHR2YXIgUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZSA9IFJlYWN0U2hhcmVkSW50ZXJuYWxzLlJlYWN0RGVidWdDdXJyZW50RnJhbWU7XG5cblx0ZnVuY3Rpb24gc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQoZWxlbWVudCkge1xuXHQgIHtcblx0ICAgIGlmIChlbGVtZW50KSB7XG5cdCAgICAgIHZhciBvd25lciA9IGVsZW1lbnQuX293bmVyO1xuXHQgICAgICB2YXIgc3RhY2sgPSBkZXNjcmliZVVua25vd25FbGVtZW50VHlwZUZyYW1lSW5ERVYoZWxlbWVudC50eXBlLCBlbGVtZW50Ll9zb3VyY2UsIG93bmVyID8gb3duZXIudHlwZSA6IG51bGwpO1xuXHQgICAgICBSZWFjdERlYnVnQ3VycmVudEZyYW1lLnNldEV4dHJhU3RhY2tGcmFtZShzdGFjayk7XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgICBSZWFjdERlYnVnQ3VycmVudEZyYW1lLnNldEV4dHJhU3RhY2tGcmFtZShudWxsKTtcblx0ICAgIH1cblx0ICB9XG5cdH1cblxuXHRmdW5jdGlvbiBjaGVja1Byb3BUeXBlcyh0eXBlU3BlY3MsIHZhbHVlcywgbG9jYXRpb24sIGNvbXBvbmVudE5hbWUsIGVsZW1lbnQpIHtcblx0ICB7XG5cdCAgICAvLyAkRmxvd0ZpeE1lIFRoaXMgaXMgb2theSBidXQgRmxvdyBkb2Vzbid0IGtub3cgaXQuXG5cdCAgICB2YXIgaGFzID0gRnVuY3Rpb24uY2FsbC5iaW5kKGhhc093blByb3BlcnR5KTtcblxuXHQgICAgZm9yICh2YXIgdHlwZVNwZWNOYW1lIGluIHR5cGVTcGVjcykge1xuXHQgICAgICBpZiAoaGFzKHR5cGVTcGVjcywgdHlwZVNwZWNOYW1lKSkge1xuXHQgICAgICAgIHZhciBlcnJvciQxID0gdm9pZCAwOyAvLyBQcm9wIHR5cGUgdmFsaWRhdGlvbiBtYXkgdGhyb3cuIEluIGNhc2UgdGhleSBkbywgd2UgZG9uJ3Qgd2FudCB0b1xuXHQgICAgICAgIC8vIGZhaWwgdGhlIHJlbmRlciBwaGFzZSB3aGVyZSBpdCBkaWRuJ3QgZmFpbCBiZWZvcmUuIFNvIHdlIGxvZyBpdC5cblx0ICAgICAgICAvLyBBZnRlciB0aGVzZSBoYXZlIGJlZW4gY2xlYW5lZCB1cCwgd2UnbGwgbGV0IHRoZW0gdGhyb3cuXG5cblx0ICAgICAgICB0cnkge1xuXHQgICAgICAgICAgLy8gVGhpcyBpcyBpbnRlbnRpb25hbGx5IGFuIGludmFyaWFudCB0aGF0IGdldHMgY2F1Z2h0LiBJdCdzIHRoZSBzYW1lXG5cdCAgICAgICAgICAvLyBiZWhhdmlvciBhcyB3aXRob3V0IHRoaXMgc3RhdGVtZW50IGV4Y2VwdCB3aXRoIGEgYmV0dGVyIG1lc3NhZ2UuXG5cdCAgICAgICAgICBpZiAodHlwZW9mIHR5cGVTcGVjc1t0eXBlU3BlY05hbWVdICE9PSAnZnVuY3Rpb24nKSB7XG5cdCAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1pbnRlcm5hbC9wcm9kLWVycm9yLWNvZGVzXG5cdCAgICAgICAgICAgIHZhciBlcnIgPSBFcnJvcigoY29tcG9uZW50TmFtZSB8fCAnUmVhY3QgY2xhc3MnKSArICc6ICcgKyBsb2NhdGlvbiArICcgdHlwZSBgJyArIHR5cGVTcGVjTmFtZSArICdgIGlzIGludmFsaWQ7ICcgKyAnaXQgbXVzdCBiZSBhIGZ1bmN0aW9uLCB1c3VhbGx5IGZyb20gdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLCBidXQgcmVjZWl2ZWQgYCcgKyB0eXBlb2YgdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0gKyAnYC4nICsgJ1RoaXMgb2Z0ZW4gaGFwcGVucyBiZWNhdXNlIG9mIHR5cG9zIHN1Y2ggYXMgYFByb3BUeXBlcy5mdW5jdGlvbmAgaW5zdGVhZCBvZiBgUHJvcFR5cGVzLmZ1bmNgLicpO1xuXHQgICAgICAgICAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcblx0ICAgICAgICAgICAgdGhyb3cgZXJyO1xuXHQgICAgICAgICAgfVxuXG5cdCAgICAgICAgICBlcnJvciQxID0gdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0odmFsdWVzLCB0eXBlU3BlY05hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBudWxsLCAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnKTtcblx0ICAgICAgICB9IGNhdGNoIChleCkge1xuXHQgICAgICAgICAgZXJyb3IkMSA9IGV4O1xuXHQgICAgICAgIH1cblxuXHQgICAgICAgIGlmIChlcnJvciQxICYmICEoZXJyb3IkMSBpbnN0YW5jZW9mIEVycm9yKSkge1xuXHQgICAgICAgICAgc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQoZWxlbWVudCk7XG5cblx0ICAgICAgICAgIGVycm9yKCclczogdHlwZSBzcGVjaWZpY2F0aW9uIG9mICVzJyArICcgYCVzYCBpcyBpbnZhbGlkOyB0aGUgdHlwZSBjaGVja2VyICcgKyAnZnVuY3Rpb24gbXVzdCByZXR1cm4gYG51bGxgIG9yIGFuIGBFcnJvcmAgYnV0IHJldHVybmVkIGEgJXMuICcgKyAnWW91IG1heSBoYXZlIGZvcmdvdHRlbiB0byBwYXNzIGFuIGFyZ3VtZW50IHRvIHRoZSB0eXBlIGNoZWNrZXIgJyArICdjcmVhdG9yIChhcnJheU9mLCBpbnN0YW5jZU9mLCBvYmplY3RPZiwgb25lT2YsIG9uZU9mVHlwZSwgYW5kICcgKyAnc2hhcGUgYWxsIHJlcXVpcmUgYW4gYXJndW1lbnQpLicsIGNvbXBvbmVudE5hbWUgfHwgJ1JlYWN0IGNsYXNzJywgbG9jYXRpb24sIHR5cGVTcGVjTmFtZSwgdHlwZW9mIGVycm9yJDEpO1xuXG5cdCAgICAgICAgICBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudChudWxsKTtcblx0ICAgICAgICB9XG5cblx0ICAgICAgICBpZiAoZXJyb3IkMSBpbnN0YW5jZW9mIEVycm9yICYmICEoZXJyb3IkMS5tZXNzYWdlIGluIGxvZ2dlZFR5cGVGYWlsdXJlcykpIHtcblx0ICAgICAgICAgIC8vIE9ubHkgbW9uaXRvciB0aGlzIGZhaWx1cmUgb25jZSBiZWNhdXNlIHRoZXJlIHRlbmRzIHRvIGJlIGEgbG90IG9mIHRoZVxuXHQgICAgICAgICAgLy8gc2FtZSBlcnJvci5cblx0ICAgICAgICAgIGxvZ2dlZFR5cGVGYWlsdXJlc1tlcnJvciQxLm1lc3NhZ2VdID0gdHJ1ZTtcblx0ICAgICAgICAgIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50KGVsZW1lbnQpO1xuXG5cdCAgICAgICAgICBlcnJvcignRmFpbGVkICVzIHR5cGU6ICVzJywgbG9jYXRpb24sIGVycm9yJDEubWVzc2FnZSk7XG5cblx0ICAgICAgICAgIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50KG51bGwpO1xuXHQgICAgICAgIH1cblx0ICAgICAgfVxuXHQgICAgfVxuXHQgIH1cblx0fVxuXG5cdHZhciBpc0FycmF5SW1wbCA9IEFycmF5LmlzQXJyYXk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZWRlY2xhcmVcblxuXHRmdW5jdGlvbiBpc0FycmF5KGEpIHtcblx0ICByZXR1cm4gaXNBcnJheUltcGwoYSk7XG5cdH1cblxuXHQvKlxuXHQgKiBUaGUgYCcnICsgdmFsdWVgIHBhdHRlcm4gKHVzZWQgaW4gaW4gcGVyZi1zZW5zaXRpdmUgY29kZSkgdGhyb3dzIGZvciBTeW1ib2xcblx0ICogYW5kIFRlbXBvcmFsLiogdHlwZXMuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvcHVsbC8yMjA2NC5cblx0ICpcblx0ICogVGhlIGZ1bmN0aW9ucyBpbiB0aGlzIG1vZHVsZSB3aWxsIHRocm93IGFuIGVhc2llci10by11bmRlcnN0YW5kLFxuXHQgKiBlYXNpZXItdG8tZGVidWcgZXhjZXB0aW9uIHdpdGggYSBjbGVhciBlcnJvcnMgbWVzc2FnZSBtZXNzYWdlIGV4cGxhaW5pbmcgdGhlXG5cdCAqIHByb2JsZW0uIChJbnN0ZWFkIG9mIGEgY29uZnVzaW5nIGV4Y2VwdGlvbiB0aHJvd24gaW5zaWRlIHRoZSBpbXBsZW1lbnRhdGlvblxuXHQgKiBvZiB0aGUgYHZhbHVlYCBvYmplY3QpLlxuXHQgKi9cblx0Ly8gJEZsb3dGaXhNZSBvbmx5IGNhbGxlZCBpbiBERVYsIHNvIHZvaWQgcmV0dXJuIGlzIG5vdCBwb3NzaWJsZS5cblx0ZnVuY3Rpb24gdHlwZU5hbWUodmFsdWUpIHtcblx0ICB7XG5cdCAgICAvLyB0b1N0cmluZ1RhZyBpcyBuZWVkZWQgZm9yIG5hbWVzcGFjZWQgdHlwZXMgbGlrZSBUZW1wb3JhbC5JbnN0YW50XG5cdCAgICB2YXIgaGFzVG9TdHJpbmdUYWcgPSB0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmIFN5bWJvbC50b1N0cmluZ1RhZztcblx0ICAgIHZhciB0eXBlID0gaGFzVG9TdHJpbmdUYWcgJiYgdmFsdWVbU3ltYm9sLnRvU3RyaW5nVGFnXSB8fCB2YWx1ZS5jb25zdHJ1Y3Rvci5uYW1lIHx8ICdPYmplY3QnO1xuXHQgICAgcmV0dXJuIHR5cGU7XG5cdCAgfVxuXHR9IC8vICRGbG93Rml4TWUgb25seSBjYWxsZWQgaW4gREVWLCBzbyB2b2lkIHJldHVybiBpcyBub3QgcG9zc2libGUuXG5cblxuXHRmdW5jdGlvbiB3aWxsQ29lcmNpb25UaHJvdyh2YWx1ZSkge1xuXHQgIHtcblx0ICAgIHRyeSB7XG5cdCAgICAgIHRlc3RTdHJpbmdDb2VyY2lvbih2YWx1ZSk7XG5cdCAgICAgIHJldHVybiBmYWxzZTtcblx0ICAgIH0gY2F0Y2ggKGUpIHtcblx0ICAgICAgcmV0dXJuIHRydWU7XG5cdCAgICB9XG5cdCAgfVxuXHR9XG5cblx0ZnVuY3Rpb24gdGVzdFN0cmluZ0NvZXJjaW9uKHZhbHVlKSB7XG5cdCAgLy8gSWYgeW91IGVuZGVkIHVwIGhlcmUgYnkgZm9sbG93aW5nIGFuIGV4Y2VwdGlvbiBjYWxsIHN0YWNrLCBoZXJlJ3Mgd2hhdCdzXG5cdCAgLy8gaGFwcGVuZWQ6IHlvdSBzdXBwbGllZCBhbiBvYmplY3Qgb3Igc3ltYm9sIHZhbHVlIHRvIFJlYWN0IChhcyBhIHByb3AsIGtleSxcblx0ICAvLyBET00gYXR0cmlidXRlLCBDU1MgcHJvcGVydHksIHN0cmluZyByZWYsIGV0Yy4pIGFuZCB3aGVuIFJlYWN0IHRyaWVkIHRvXG5cdCAgLy8gY29lcmNlIGl0IHRvIGEgc3RyaW5nIHVzaW5nIGAnJyArIHZhbHVlYCwgYW4gZXhjZXB0aW9uIHdhcyB0aHJvd24uXG5cdCAgLy9cblx0ICAvLyBUaGUgbW9zdCBjb21tb24gdHlwZXMgdGhhdCB3aWxsIGNhdXNlIHRoaXMgZXhjZXB0aW9uIGFyZSBgU3ltYm9sYCBpbnN0YW5jZXNcblx0ICAvLyBhbmQgVGVtcG9yYWwgb2JqZWN0cyBsaWtlIGBUZW1wb3JhbC5JbnN0YW50YC4gQnV0IGFueSBvYmplY3QgdGhhdCBoYXMgYVxuXHQgIC8vIGB2YWx1ZU9mYCBvciBgW1N5bWJvbC50b1ByaW1pdGl2ZV1gIG1ldGhvZCB0aGF0IHRocm93cyB3aWxsIGFsc28gY2F1c2UgdGhpc1xuXHQgIC8vIGV4Y2VwdGlvbi4gKExpYnJhcnkgYXV0aG9ycyBkbyB0aGlzIHRvIHByZXZlbnQgdXNlcnMgZnJvbSB1c2luZyBidWlsdC1pblxuXHQgIC8vIG51bWVyaWMgb3BlcmF0b3JzIGxpa2UgYCtgIG9yIGNvbXBhcmlzb24gb3BlcmF0b3JzIGxpa2UgYD49YCBiZWNhdXNlIGN1c3RvbVxuXHQgIC8vIG1ldGhvZHMgYXJlIG5lZWRlZCB0byBwZXJmb3JtIGFjY3VyYXRlIGFyaXRobWV0aWMgb3IgY29tcGFyaXNvbi4pXG5cdCAgLy9cblx0ICAvLyBUbyBmaXggdGhlIHByb2JsZW0sIGNvZXJjZSB0aGlzIG9iamVjdCBvciBzeW1ib2wgdmFsdWUgdG8gYSBzdHJpbmcgYmVmb3JlXG5cdCAgLy8gcGFzc2luZyBpdCB0byBSZWFjdC4gVGhlIG1vc3QgcmVsaWFibGUgd2F5IGlzIHVzdWFsbHkgYFN0cmluZyh2YWx1ZSlgLlxuXHQgIC8vXG5cdCAgLy8gVG8gZmluZCB3aGljaCB2YWx1ZSBpcyB0aHJvd2luZywgY2hlY2sgdGhlIGJyb3dzZXIgb3IgZGVidWdnZXIgY29uc29sZS5cblx0ICAvLyBCZWZvcmUgdGhpcyBleGNlcHRpb24gd2FzIHRocm93biwgdGhlcmUgc2hvdWxkIGJlIGBjb25zb2xlLmVycm9yYCBvdXRwdXRcblx0ICAvLyB0aGF0IHNob3dzIHRoZSB0eXBlIChTeW1ib2wsIFRlbXBvcmFsLlBsYWluRGF0ZSwgZXRjLikgdGhhdCBjYXVzZWQgdGhlXG5cdCAgLy8gcHJvYmxlbSBhbmQgaG93IHRoYXQgdHlwZSB3YXMgdXNlZDoga2V5LCBhdHJyaWJ1dGUsIGlucHV0IHZhbHVlIHByb3AsIGV0Yy5cblx0ICAvLyBJbiBtb3N0IGNhc2VzLCB0aGlzIGNvbnNvbGUgb3V0cHV0IGFsc28gc2hvd3MgdGhlIGNvbXBvbmVudCBhbmQgaXRzXG5cdCAgLy8gYW5jZXN0b3IgY29tcG9uZW50cyB3aGVyZSB0aGUgZXhjZXB0aW9uIGhhcHBlbmVkLlxuXHQgIC8vXG5cdCAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWludGVybmFsL3NhZmUtc3RyaW5nLWNvZXJjaW9uXG5cdCAgcmV0dXJuICcnICsgdmFsdWU7XG5cdH1cblx0ZnVuY3Rpb24gY2hlY2tLZXlTdHJpbmdDb2VyY2lvbih2YWx1ZSkge1xuXHQgIHtcblx0ICAgIGlmICh3aWxsQ29lcmNpb25UaHJvdyh2YWx1ZSkpIHtcblx0ICAgICAgZXJyb3IoJ1RoZSBwcm92aWRlZCBrZXkgaXMgYW4gdW5zdXBwb3J0ZWQgdHlwZSAlcy4nICsgJyBUaGlzIHZhbHVlIG11c3QgYmUgY29lcmNlZCB0byBhIHN0cmluZyBiZWZvcmUgYmVmb3JlIHVzaW5nIGl0IGhlcmUuJywgdHlwZU5hbWUodmFsdWUpKTtcblxuXHQgICAgICByZXR1cm4gdGVzdFN0cmluZ0NvZXJjaW9uKHZhbHVlKTsgLy8gdGhyb3cgKHRvIGhlbHAgY2FsbGVycyBmaW5kIHRyb3VibGVzaG9vdGluZyBjb21tZW50cylcblx0ICAgIH1cblx0ICB9XG5cdH1cblxuXHR2YXIgUmVhY3RDdXJyZW50T3duZXIgPSBSZWFjdFNoYXJlZEludGVybmFscy5SZWFjdEN1cnJlbnRPd25lcjtcblx0dmFyIFJFU0VSVkVEX1BST1BTID0ge1xuXHQgIGtleTogdHJ1ZSxcblx0ICByZWY6IHRydWUsXG5cdCAgX19zZWxmOiB0cnVlLFxuXHQgIF9fc291cmNlOiB0cnVlXG5cdH07XG5cdHZhciBzcGVjaWFsUHJvcEtleVdhcm5pbmdTaG93bjtcblx0dmFyIHNwZWNpYWxQcm9wUmVmV2FybmluZ1Nob3duO1xuXHR2YXIgZGlkV2FybkFib3V0U3RyaW5nUmVmcztcblxuXHR7XG5cdCAgZGlkV2FybkFib3V0U3RyaW5nUmVmcyA9IHt9O1xuXHR9XG5cblx0ZnVuY3Rpb24gaGFzVmFsaWRSZWYoY29uZmlnKSB7XG5cdCAge1xuXHQgICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwoY29uZmlnLCAncmVmJykpIHtcblx0ICAgICAgdmFyIGdldHRlciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoY29uZmlnLCAncmVmJykuZ2V0O1xuXG5cdCAgICAgIGlmIChnZXR0ZXIgJiYgZ2V0dGVyLmlzUmVhY3RXYXJuaW5nKSB7XG5cdCAgICAgICAgcmV0dXJuIGZhbHNlO1xuXHQgICAgICB9XG5cdCAgICB9XG5cdCAgfVxuXG5cdCAgcmV0dXJuIGNvbmZpZy5yZWYgIT09IHVuZGVmaW5lZDtcblx0fVxuXG5cdGZ1bmN0aW9uIGhhc1ZhbGlkS2V5KGNvbmZpZykge1xuXHQgIHtcblx0ICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGNvbmZpZywgJ2tleScpKSB7XG5cdCAgICAgIHZhciBnZXR0ZXIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGNvbmZpZywgJ2tleScpLmdldDtcblxuXHQgICAgICBpZiAoZ2V0dGVyICYmIGdldHRlci5pc1JlYWN0V2FybmluZykge1xuXHQgICAgICAgIHJldHVybiBmYWxzZTtcblx0ICAgICAgfVxuXHQgICAgfVxuXHQgIH1cblxuXHQgIHJldHVybiBjb25maWcua2V5ICE9PSB1bmRlZmluZWQ7XG5cdH1cblxuXHRmdW5jdGlvbiB3YXJuSWZTdHJpbmdSZWZDYW5ub3RCZUF1dG9Db252ZXJ0ZWQoY29uZmlnLCBzZWxmKSB7XG5cdCAge1xuXHQgICAgaWYgKHR5cGVvZiBjb25maWcucmVmID09PSAnc3RyaW5nJyAmJiBSZWFjdEN1cnJlbnRPd25lci5jdXJyZW50ICYmIHNlbGYgJiYgUmVhY3RDdXJyZW50T3duZXIuY3VycmVudC5zdGF0ZU5vZGUgIT09IHNlbGYpIHtcblx0ICAgICAgdmFyIGNvbXBvbmVudE5hbWUgPSBnZXRDb21wb25lbnROYW1lRnJvbVR5cGUoUmVhY3RDdXJyZW50T3duZXIuY3VycmVudC50eXBlKTtcblxuXHQgICAgICBpZiAoIWRpZFdhcm5BYm91dFN0cmluZ1JlZnNbY29tcG9uZW50TmFtZV0pIHtcblx0ICAgICAgICBlcnJvcignQ29tcG9uZW50IFwiJXNcIiBjb250YWlucyB0aGUgc3RyaW5nIHJlZiBcIiVzXCIuICcgKyAnU3VwcG9ydCBmb3Igc3RyaW5nIHJlZnMgd2lsbCBiZSByZW1vdmVkIGluIGEgZnV0dXJlIG1ham9yIHJlbGVhc2UuICcgKyAnVGhpcyBjYXNlIGNhbm5vdCBiZSBhdXRvbWF0aWNhbGx5IGNvbnZlcnRlZCB0byBhbiBhcnJvdyBmdW5jdGlvbi4gJyArICdXZSBhc2sgeW91IHRvIG1hbnVhbGx5IGZpeCB0aGlzIGNhc2UgYnkgdXNpbmcgdXNlUmVmKCkgb3IgY3JlYXRlUmVmKCkgaW5zdGVhZC4gJyArICdMZWFybiBtb3JlIGFib3V0IHVzaW5nIHJlZnMgc2FmZWx5IGhlcmU6ICcgKyAnaHR0cHM6Ly9yZWFjdGpzLm9yZy9saW5rL3N0cmljdC1tb2RlLXN0cmluZy1yZWYnLCBnZXRDb21wb25lbnROYW1lRnJvbVR5cGUoUmVhY3RDdXJyZW50T3duZXIuY3VycmVudC50eXBlKSwgY29uZmlnLnJlZik7XG5cblx0ICAgICAgICBkaWRXYXJuQWJvdXRTdHJpbmdSZWZzW2NvbXBvbmVudE5hbWVdID0gdHJ1ZTtcblx0ICAgICAgfVxuXHQgICAgfVxuXHQgIH1cblx0fVxuXG5cdGZ1bmN0aW9uIGRlZmluZUtleVByb3BXYXJuaW5nR2V0dGVyKHByb3BzLCBkaXNwbGF5TmFtZSkge1xuXHQgIHtcblx0ICAgIHZhciB3YXJuQWJvdXRBY2Nlc3NpbmdLZXkgPSBmdW5jdGlvbiAoKSB7XG5cdCAgICAgIGlmICghc3BlY2lhbFByb3BLZXlXYXJuaW5nU2hvd24pIHtcblx0ICAgICAgICBzcGVjaWFsUHJvcEtleVdhcm5pbmdTaG93biA9IHRydWU7XG5cblx0ICAgICAgICBlcnJvcignJXM6IGBrZXlgIGlzIG5vdCBhIHByb3AuIFRyeWluZyB0byBhY2Nlc3MgaXQgd2lsbCByZXN1bHQgJyArICdpbiBgdW5kZWZpbmVkYCBiZWluZyByZXR1cm5lZC4gSWYgeW91IG5lZWQgdG8gYWNjZXNzIHRoZSBzYW1lICcgKyAndmFsdWUgd2l0aGluIHRoZSBjaGlsZCBjb21wb25lbnQsIHlvdSBzaG91bGQgcGFzcyBpdCBhcyBhIGRpZmZlcmVudCAnICsgJ3Byb3AuIChodHRwczovL3JlYWN0anMub3JnL2xpbmsvc3BlY2lhbC1wcm9wcyknLCBkaXNwbGF5TmFtZSk7XG5cdCAgICAgIH1cblx0ICAgIH07XG5cblx0ICAgIHdhcm5BYm91dEFjY2Vzc2luZ0tleS5pc1JlYWN0V2FybmluZyA9IHRydWU7XG5cdCAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkocHJvcHMsICdrZXknLCB7XG5cdCAgICAgIGdldDogd2FybkFib3V0QWNjZXNzaW5nS2V5LFxuXHQgICAgICBjb25maWd1cmFibGU6IHRydWVcblx0ICAgIH0pO1xuXHQgIH1cblx0fVxuXG5cdGZ1bmN0aW9uIGRlZmluZVJlZlByb3BXYXJuaW5nR2V0dGVyKHByb3BzLCBkaXNwbGF5TmFtZSkge1xuXHQgIHtcblx0ICAgIHZhciB3YXJuQWJvdXRBY2Nlc3NpbmdSZWYgPSBmdW5jdGlvbiAoKSB7XG5cdCAgICAgIGlmICghc3BlY2lhbFByb3BSZWZXYXJuaW5nU2hvd24pIHtcblx0ICAgICAgICBzcGVjaWFsUHJvcFJlZldhcm5pbmdTaG93biA9IHRydWU7XG5cblx0ICAgICAgICBlcnJvcignJXM6IGByZWZgIGlzIG5vdCBhIHByb3AuIFRyeWluZyB0byBhY2Nlc3MgaXQgd2lsbCByZXN1bHQgJyArICdpbiBgdW5kZWZpbmVkYCBiZWluZyByZXR1cm5lZC4gSWYgeW91IG5lZWQgdG8gYWNjZXNzIHRoZSBzYW1lICcgKyAndmFsdWUgd2l0aGluIHRoZSBjaGlsZCBjb21wb25lbnQsIHlvdSBzaG91bGQgcGFzcyBpdCBhcyBhIGRpZmZlcmVudCAnICsgJ3Byb3AuIChodHRwczovL3JlYWN0anMub3JnL2xpbmsvc3BlY2lhbC1wcm9wcyknLCBkaXNwbGF5TmFtZSk7XG5cdCAgICAgIH1cblx0ICAgIH07XG5cblx0ICAgIHdhcm5BYm91dEFjY2Vzc2luZ1JlZi5pc1JlYWN0V2FybmluZyA9IHRydWU7XG5cdCAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkocHJvcHMsICdyZWYnLCB7XG5cdCAgICAgIGdldDogd2FybkFib3V0QWNjZXNzaW5nUmVmLFxuXHQgICAgICBjb25maWd1cmFibGU6IHRydWVcblx0ICAgIH0pO1xuXHQgIH1cblx0fVxuXHQvKipcblx0ICogRmFjdG9yeSBtZXRob2QgdG8gY3JlYXRlIGEgbmV3IFJlYWN0IGVsZW1lbnQuIFRoaXMgbm8gbG9uZ2VyIGFkaGVyZXMgdG9cblx0ICogdGhlIGNsYXNzIHBhdHRlcm4sIHNvIGRvIG5vdCB1c2UgbmV3IHRvIGNhbGwgaXQuIEFsc28sIGluc3RhbmNlb2YgY2hlY2tcblx0ICogd2lsbCBub3Qgd29yay4gSW5zdGVhZCB0ZXN0ICQkdHlwZW9mIGZpZWxkIGFnYWluc3QgU3ltYm9sLmZvcigncmVhY3QuZWxlbWVudCcpIHRvIGNoZWNrXG5cdCAqIGlmIHNvbWV0aGluZyBpcyBhIFJlYWN0IEVsZW1lbnQuXG5cdCAqXG5cdCAqIEBwYXJhbSB7Kn0gdHlwZVxuXHQgKiBAcGFyYW0geyp9IHByb3BzXG5cdCAqIEBwYXJhbSB7Kn0ga2V5XG5cdCAqIEBwYXJhbSB7c3RyaW5nfG9iamVjdH0gcmVmXG5cdCAqIEBwYXJhbSB7Kn0gb3duZXJcblx0ICogQHBhcmFtIHsqfSBzZWxmIEEgKnRlbXBvcmFyeSogaGVscGVyIHRvIGRldGVjdCBwbGFjZXMgd2hlcmUgYHRoaXNgIGlzXG5cdCAqIGRpZmZlcmVudCBmcm9tIHRoZSBgb3duZXJgIHdoZW4gUmVhY3QuY3JlYXRlRWxlbWVudCBpcyBjYWxsZWQsIHNvIHRoYXQgd2Vcblx0ICogY2FuIHdhcm4uIFdlIHdhbnQgdG8gZ2V0IHJpZCBvZiBvd25lciBhbmQgcmVwbGFjZSBzdHJpbmcgYHJlZmBzIHdpdGggYXJyb3dcblx0ICogZnVuY3Rpb25zLCBhbmQgYXMgbG9uZyBhcyBgdGhpc2AgYW5kIG93bmVyIGFyZSB0aGUgc2FtZSwgdGhlcmUgd2lsbCBiZSBub1xuXHQgKiBjaGFuZ2UgaW4gYmVoYXZpb3IuXG5cdCAqIEBwYXJhbSB7Kn0gc291cmNlIEFuIGFubm90YXRpb24gb2JqZWN0IChhZGRlZCBieSBhIHRyYW5zcGlsZXIgb3Igb3RoZXJ3aXNlKVxuXHQgKiBpbmRpY2F0aW5nIGZpbGVuYW1lLCBsaW5lIG51bWJlciwgYW5kL29yIG90aGVyIGluZm9ybWF0aW9uLlxuXHQgKiBAaW50ZXJuYWxcblx0ICovXG5cblxuXHR2YXIgUmVhY3RFbGVtZW50ID0gZnVuY3Rpb24gKHR5cGUsIGtleSwgcmVmLCBzZWxmLCBzb3VyY2UsIG93bmVyLCBwcm9wcykge1xuXHQgIHZhciBlbGVtZW50ID0ge1xuXHQgICAgLy8gVGhpcyB0YWcgYWxsb3dzIHVzIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgYXMgYSBSZWFjdCBFbGVtZW50XG5cdCAgICAkJHR5cGVvZjogUkVBQ1RfRUxFTUVOVF9UWVBFLFxuXHQgICAgLy8gQnVpbHQtaW4gcHJvcGVydGllcyB0aGF0IGJlbG9uZyBvbiB0aGUgZWxlbWVudFxuXHQgICAgdHlwZTogdHlwZSxcblx0ICAgIGtleToga2V5LFxuXHQgICAgcmVmOiByZWYsXG5cdCAgICBwcm9wczogcHJvcHMsXG5cdCAgICAvLyBSZWNvcmQgdGhlIGNvbXBvbmVudCByZXNwb25zaWJsZSBmb3IgY3JlYXRpbmcgdGhpcyBlbGVtZW50LlxuXHQgICAgX293bmVyOiBvd25lclxuXHQgIH07XG5cblx0ICB7XG5cdCAgICAvLyBUaGUgdmFsaWRhdGlvbiBmbGFnIGlzIGN1cnJlbnRseSBtdXRhdGl2ZS4gV2UgcHV0IGl0IG9uXG5cdCAgICAvLyBhbiBleHRlcm5hbCBiYWNraW5nIHN0b3JlIHNvIHRoYXQgd2UgY2FuIGZyZWV6ZSB0aGUgd2hvbGUgb2JqZWN0LlxuXHQgICAgLy8gVGhpcyBjYW4gYmUgcmVwbGFjZWQgd2l0aCBhIFdlYWtNYXAgb25jZSB0aGV5IGFyZSBpbXBsZW1lbnRlZCBpblxuXHQgICAgLy8gY29tbW9ubHkgdXNlZCBkZXZlbG9wbWVudCBlbnZpcm9ubWVudHMuXG5cdCAgICBlbGVtZW50Ll9zdG9yZSA9IHt9OyAvLyBUbyBtYWtlIGNvbXBhcmluZyBSZWFjdEVsZW1lbnRzIGVhc2llciBmb3IgdGVzdGluZyBwdXJwb3Nlcywgd2UgbWFrZVxuXHQgICAgLy8gdGhlIHZhbGlkYXRpb24gZmxhZyBub24tZW51bWVyYWJsZSAod2hlcmUgcG9zc2libGUsIHdoaWNoIHNob3VsZFxuXHQgICAgLy8gaW5jbHVkZSBldmVyeSBlbnZpcm9ubWVudCB3ZSBydW4gdGVzdHMgaW4pLCBzbyB0aGUgdGVzdCBmcmFtZXdvcmtcblx0ICAgIC8vIGlnbm9yZXMgaXQuXG5cblx0ICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlbGVtZW50Ll9zdG9yZSwgJ3ZhbGlkYXRlZCcsIHtcblx0ICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcblx0ICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG5cdCAgICAgIHdyaXRhYmxlOiB0cnVlLFxuXHQgICAgICB2YWx1ZTogZmFsc2Vcblx0ICAgIH0pOyAvLyBzZWxmIGFuZCBzb3VyY2UgYXJlIERFViBvbmx5IHByb3BlcnRpZXMuXG5cblx0ICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlbGVtZW50LCAnX3NlbGYnLCB7XG5cdCAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG5cdCAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuXHQgICAgICB3cml0YWJsZTogZmFsc2UsXG5cdCAgICAgIHZhbHVlOiBzZWxmXG5cdCAgICB9KTsgLy8gVHdvIGVsZW1lbnRzIGNyZWF0ZWQgaW4gdHdvIGRpZmZlcmVudCBwbGFjZXMgc2hvdWxkIGJlIGNvbnNpZGVyZWRcblx0ICAgIC8vIGVxdWFsIGZvciB0ZXN0aW5nIHB1cnBvc2VzIGFuZCB0aGVyZWZvcmUgd2UgaGlkZSBpdCBmcm9tIGVudW1lcmF0aW9uLlxuXG5cdCAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZWxlbWVudCwgJ19zb3VyY2UnLCB7XG5cdCAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG5cdCAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuXHQgICAgICB3cml0YWJsZTogZmFsc2UsXG5cdCAgICAgIHZhbHVlOiBzb3VyY2Vcblx0ICAgIH0pO1xuXG5cdCAgICBpZiAoT2JqZWN0LmZyZWV6ZSkge1xuXHQgICAgICBPYmplY3QuZnJlZXplKGVsZW1lbnQucHJvcHMpO1xuXHQgICAgICBPYmplY3QuZnJlZXplKGVsZW1lbnQpO1xuXHQgICAgfVxuXHQgIH1cblxuXHQgIHJldHVybiBlbGVtZW50O1xuXHR9O1xuXHQvKipcblx0ICogaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0anMvcmZjcy9wdWxsLzEwN1xuXHQgKiBAcGFyYW0geyp9IHR5cGVcblx0ICogQHBhcmFtIHtvYmplY3R9IHByb3BzXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcblx0ICovXG5cblx0ZnVuY3Rpb24ganN4REVWKHR5cGUsIGNvbmZpZywgbWF5YmVLZXksIHNvdXJjZSwgc2VsZikge1xuXHQgIHtcblx0ICAgIHZhciBwcm9wTmFtZTsgLy8gUmVzZXJ2ZWQgbmFtZXMgYXJlIGV4dHJhY3RlZFxuXG5cdCAgICB2YXIgcHJvcHMgPSB7fTtcblx0ICAgIHZhciBrZXkgPSBudWxsO1xuXHQgICAgdmFyIHJlZiA9IG51bGw7IC8vIEN1cnJlbnRseSwga2V5IGNhbiBiZSBzcHJlYWQgaW4gYXMgYSBwcm9wLiBUaGlzIGNhdXNlcyBhIHBvdGVudGlhbFxuXHQgICAgLy8gaXNzdWUgaWYga2V5IGlzIGFsc28gZXhwbGljaXRseSBkZWNsYXJlZCAoaWUuIDxkaXYgey4uLnByb3BzfSBrZXk9XCJIaVwiIC8+XG5cdCAgICAvLyBvciA8ZGl2IGtleT1cIkhpXCIgey4uLnByb3BzfSAvPiApLiBXZSB3YW50IHRvIGRlcHJlY2F0ZSBrZXkgc3ByZWFkLFxuXHQgICAgLy8gYnV0IGFzIGFuIGludGVybWVkaWFyeSBzdGVwLCB3ZSB3aWxsIHVzZSBqc3hERVYgZm9yIGV2ZXJ5dGhpbmcgZXhjZXB0XG5cdCAgICAvLyA8ZGl2IHsuLi5wcm9wc30ga2V5PVwiSGlcIiAvPiwgYmVjYXVzZSB3ZSBhcmVuJ3QgY3VycmVudGx5IGFibGUgdG8gdGVsbCBpZlxuXHQgICAgLy8ga2V5IGlzIGV4cGxpY2l0bHkgZGVjbGFyZWQgdG8gYmUgdW5kZWZpbmVkIG9yIG5vdC5cblxuXHQgICAgaWYgKG1heWJlS2V5ICE9PSB1bmRlZmluZWQpIHtcblx0ICAgICAge1xuXHQgICAgICAgIGNoZWNrS2V5U3RyaW5nQ29lcmNpb24obWF5YmVLZXkpO1xuXHQgICAgICB9XG5cblx0ICAgICAga2V5ID0gJycgKyBtYXliZUtleTtcblx0ICAgIH1cblxuXHQgICAgaWYgKGhhc1ZhbGlkS2V5KGNvbmZpZykpIHtcblx0ICAgICAge1xuXHQgICAgICAgIGNoZWNrS2V5U3RyaW5nQ29lcmNpb24oY29uZmlnLmtleSk7XG5cdCAgICAgIH1cblxuXHQgICAgICBrZXkgPSAnJyArIGNvbmZpZy5rZXk7XG5cdCAgICB9XG5cblx0ICAgIGlmIChoYXNWYWxpZFJlZihjb25maWcpKSB7XG5cdCAgICAgIHJlZiA9IGNvbmZpZy5yZWY7XG5cdCAgICAgIHdhcm5JZlN0cmluZ1JlZkNhbm5vdEJlQXV0b0NvbnZlcnRlZChjb25maWcsIHNlbGYpO1xuXHQgICAgfSAvLyBSZW1haW5pbmcgcHJvcGVydGllcyBhcmUgYWRkZWQgdG8gYSBuZXcgcHJvcHMgb2JqZWN0XG5cblxuXHQgICAgZm9yIChwcm9wTmFtZSBpbiBjb25maWcpIHtcblx0ICAgICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwoY29uZmlnLCBwcm9wTmFtZSkgJiYgIVJFU0VSVkVEX1BST1BTLmhhc093blByb3BlcnR5KHByb3BOYW1lKSkge1xuXHQgICAgICAgIHByb3BzW3Byb3BOYW1lXSA9IGNvbmZpZ1twcm9wTmFtZV07XG5cdCAgICAgIH1cblx0ICAgIH0gLy8gUmVzb2x2ZSBkZWZhdWx0IHByb3BzXG5cblxuXHQgICAgaWYgKHR5cGUgJiYgdHlwZS5kZWZhdWx0UHJvcHMpIHtcblx0ICAgICAgdmFyIGRlZmF1bHRQcm9wcyA9IHR5cGUuZGVmYXVsdFByb3BzO1xuXG5cdCAgICAgIGZvciAocHJvcE5hbWUgaW4gZGVmYXVsdFByb3BzKSB7XG5cdCAgICAgICAgaWYgKHByb3BzW3Byb3BOYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG5cdCAgICAgICAgICBwcm9wc1twcm9wTmFtZV0gPSBkZWZhdWx0UHJvcHNbcHJvcE5hbWVdO1xuXHQgICAgICAgIH1cblx0ICAgICAgfVxuXHQgICAgfVxuXG5cdCAgICBpZiAoa2V5IHx8IHJlZikge1xuXHQgICAgICB2YXIgZGlzcGxheU5hbWUgPSB0eXBlb2YgdHlwZSA9PT0gJ2Z1bmN0aW9uJyA/IHR5cGUuZGlzcGxheU5hbWUgfHwgdHlwZS5uYW1lIHx8ICdVbmtub3duJyA6IHR5cGU7XG5cblx0ICAgICAgaWYgKGtleSkge1xuXHQgICAgICAgIGRlZmluZUtleVByb3BXYXJuaW5nR2V0dGVyKHByb3BzLCBkaXNwbGF5TmFtZSk7XG5cdCAgICAgIH1cblxuXHQgICAgICBpZiAocmVmKSB7XG5cdCAgICAgICAgZGVmaW5lUmVmUHJvcFdhcm5pbmdHZXR0ZXIocHJvcHMsIGRpc3BsYXlOYW1lKTtcblx0ICAgICAgfVxuXHQgICAgfVxuXG5cdCAgICByZXR1cm4gUmVhY3RFbGVtZW50KHR5cGUsIGtleSwgcmVmLCBzZWxmLCBzb3VyY2UsIFJlYWN0Q3VycmVudE93bmVyLmN1cnJlbnQsIHByb3BzKTtcblx0ICB9XG5cdH1cblxuXHR2YXIgUmVhY3RDdXJyZW50T3duZXIkMSA9IFJlYWN0U2hhcmVkSW50ZXJuYWxzLlJlYWN0Q3VycmVudE93bmVyO1xuXHR2YXIgUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZSQxID0gUmVhY3RTaGFyZWRJbnRlcm5hbHMuUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZTtcblxuXHRmdW5jdGlvbiBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudCQxKGVsZW1lbnQpIHtcblx0ICB7XG5cdCAgICBpZiAoZWxlbWVudCkge1xuXHQgICAgICB2YXIgb3duZXIgPSBlbGVtZW50Ll9vd25lcjtcblx0ICAgICAgdmFyIHN0YWNrID0gZGVzY3JpYmVVbmtub3duRWxlbWVudFR5cGVGcmFtZUluREVWKGVsZW1lbnQudHlwZSwgZWxlbWVudC5fc291cmNlLCBvd25lciA/IG93bmVyLnR5cGUgOiBudWxsKTtcblx0ICAgICAgUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZSQxLnNldEV4dHJhU3RhY2tGcmFtZShzdGFjayk7XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgICBSZWFjdERlYnVnQ3VycmVudEZyYW1lJDEuc2V0RXh0cmFTdGFja0ZyYW1lKG51bGwpO1xuXHQgICAgfVxuXHQgIH1cblx0fVxuXG5cdHZhciBwcm9wVHlwZXNNaXNzcGVsbFdhcm5pbmdTaG93bjtcblxuXHR7XG5cdCAgcHJvcFR5cGVzTWlzc3BlbGxXYXJuaW5nU2hvd24gPSBmYWxzZTtcblx0fVxuXHQvKipcblx0ICogVmVyaWZpZXMgdGhlIG9iamVjdCBpcyBhIFJlYWN0RWxlbWVudC5cblx0ICogU2VlIGh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9yZWFjdC1hcGkuaHRtbCNpc3ZhbGlkZWxlbWVudFxuXHQgKiBAcGFyYW0gez9vYmplY3R9IG9iamVjdFxuXHQgKiBAcmV0dXJuIHtib29sZWFufSBUcnVlIGlmIGBvYmplY3RgIGlzIGEgUmVhY3RFbGVtZW50LlxuXHQgKiBAZmluYWxcblx0ICovXG5cblxuXHRmdW5jdGlvbiBpc1ZhbGlkRWxlbWVudChvYmplY3QpIHtcblx0ICB7XG5cdCAgICByZXR1cm4gdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiYgb2JqZWN0ICE9PSBudWxsICYmIG9iamVjdC4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFO1xuXHQgIH1cblx0fVxuXG5cdGZ1bmN0aW9uIGdldERlY2xhcmF0aW9uRXJyb3JBZGRlbmR1bSgpIHtcblx0ICB7XG5cdCAgICBpZiAoUmVhY3RDdXJyZW50T3duZXIkMS5jdXJyZW50KSB7XG5cdCAgICAgIHZhciBuYW1lID0gZ2V0Q29tcG9uZW50TmFtZUZyb21UeXBlKFJlYWN0Q3VycmVudE93bmVyJDEuY3VycmVudC50eXBlKTtcblxuXHQgICAgICBpZiAobmFtZSkge1xuXHQgICAgICAgIHJldHVybiAnXFxuXFxuQ2hlY2sgdGhlIHJlbmRlciBtZXRob2Qgb2YgYCcgKyBuYW1lICsgJ2AuJztcblx0ICAgICAgfVxuXHQgICAgfVxuXG5cdCAgICByZXR1cm4gJyc7XG5cdCAgfVxuXHR9XG5cblx0ZnVuY3Rpb24gZ2V0U291cmNlSW5mb0Vycm9yQWRkZW5kdW0oc291cmNlKSB7XG5cdCAge1xuXHQgICAgaWYgKHNvdXJjZSAhPT0gdW5kZWZpbmVkKSB7XG5cdCAgICAgIHZhciBmaWxlTmFtZSA9IHNvdXJjZS5maWxlTmFtZS5yZXBsYWNlKC9eLipbXFxcXFxcL10vLCAnJyk7XG5cdCAgICAgIHZhciBsaW5lTnVtYmVyID0gc291cmNlLmxpbmVOdW1iZXI7XG5cdCAgICAgIHJldHVybiAnXFxuXFxuQ2hlY2sgeW91ciBjb2RlIGF0ICcgKyBmaWxlTmFtZSArICc6JyArIGxpbmVOdW1iZXIgKyAnLic7XG5cdCAgICB9XG5cblx0ICAgIHJldHVybiAnJztcblx0ICB9XG5cdH1cblx0LyoqXG5cdCAqIFdhcm4gaWYgdGhlcmUncyBubyBrZXkgZXhwbGljaXRseSBzZXQgb24gZHluYW1pYyBhcnJheXMgb2YgY2hpbGRyZW4gb3Jcblx0ICogb2JqZWN0IGtleXMgYXJlIG5vdCB2YWxpZC4gVGhpcyBhbGxvd3MgdXMgdG8ga2VlcCB0cmFjayBvZiBjaGlsZHJlbiBiZXR3ZWVuXG5cdCAqIHVwZGF0ZXMuXG5cdCAqL1xuXG5cblx0dmFyIG93bmVySGFzS2V5VXNlV2FybmluZyA9IHt9O1xuXG5cdGZ1bmN0aW9uIGdldEN1cnJlbnRDb21wb25lbnRFcnJvckluZm8ocGFyZW50VHlwZSkge1xuXHQgIHtcblx0ICAgIHZhciBpbmZvID0gZ2V0RGVjbGFyYXRpb25FcnJvckFkZGVuZHVtKCk7XG5cblx0ICAgIGlmICghaW5mbykge1xuXHQgICAgICB2YXIgcGFyZW50TmFtZSA9IHR5cGVvZiBwYXJlbnRUeXBlID09PSAnc3RyaW5nJyA/IHBhcmVudFR5cGUgOiBwYXJlbnRUeXBlLmRpc3BsYXlOYW1lIHx8IHBhcmVudFR5cGUubmFtZTtcblxuXHQgICAgICBpZiAocGFyZW50TmFtZSkge1xuXHQgICAgICAgIGluZm8gPSBcIlxcblxcbkNoZWNrIHRoZSB0b3AtbGV2ZWwgcmVuZGVyIGNhbGwgdXNpbmcgPFwiICsgcGFyZW50TmFtZSArIFwiPi5cIjtcblx0ICAgICAgfVxuXHQgICAgfVxuXG5cdCAgICByZXR1cm4gaW5mbztcblx0ICB9XG5cdH1cblx0LyoqXG5cdCAqIFdhcm4gaWYgdGhlIGVsZW1lbnQgZG9lc24ndCBoYXZlIGFuIGV4cGxpY2l0IGtleSBhc3NpZ25lZCB0byBpdC5cblx0ICogVGhpcyBlbGVtZW50IGlzIGluIGFuIGFycmF5LiBUaGUgYXJyYXkgY291bGQgZ3JvdyBhbmQgc2hyaW5rIG9yIGJlXG5cdCAqIHJlb3JkZXJlZC4gQWxsIGNoaWxkcmVuIHRoYXQgaGF2ZW4ndCBhbHJlYWR5IGJlZW4gdmFsaWRhdGVkIGFyZSByZXF1aXJlZCB0b1xuXHQgKiBoYXZlIGEgXCJrZXlcIiBwcm9wZXJ0eSBhc3NpZ25lZCB0byBpdC4gRXJyb3Igc3RhdHVzZXMgYXJlIGNhY2hlZCBzbyBhIHdhcm5pbmdcblx0ICogd2lsbCBvbmx5IGJlIHNob3duIG9uY2UuXG5cdCAqXG5cdCAqIEBpbnRlcm5hbFxuXHQgKiBAcGFyYW0ge1JlYWN0RWxlbWVudH0gZWxlbWVudCBFbGVtZW50IHRoYXQgcmVxdWlyZXMgYSBrZXkuXG5cdCAqIEBwYXJhbSB7Kn0gcGFyZW50VHlwZSBlbGVtZW50J3MgcGFyZW50J3MgdHlwZS5cblx0ICovXG5cblxuXHRmdW5jdGlvbiB2YWxpZGF0ZUV4cGxpY2l0S2V5KGVsZW1lbnQsIHBhcmVudFR5cGUpIHtcblx0ICB7XG5cdCAgICBpZiAoIWVsZW1lbnQuX3N0b3JlIHx8IGVsZW1lbnQuX3N0b3JlLnZhbGlkYXRlZCB8fCBlbGVtZW50LmtleSAhPSBudWxsKSB7XG5cdCAgICAgIHJldHVybjtcblx0ICAgIH1cblxuXHQgICAgZWxlbWVudC5fc3RvcmUudmFsaWRhdGVkID0gdHJ1ZTtcblx0ICAgIHZhciBjdXJyZW50Q29tcG9uZW50RXJyb3JJbmZvID0gZ2V0Q3VycmVudENvbXBvbmVudEVycm9ySW5mbyhwYXJlbnRUeXBlKTtcblxuXHQgICAgaWYgKG93bmVySGFzS2V5VXNlV2FybmluZ1tjdXJyZW50Q29tcG9uZW50RXJyb3JJbmZvXSkge1xuXHQgICAgICByZXR1cm47XG5cdCAgICB9XG5cblx0ICAgIG93bmVySGFzS2V5VXNlV2FybmluZ1tjdXJyZW50Q29tcG9uZW50RXJyb3JJbmZvXSA9IHRydWU7IC8vIFVzdWFsbHkgdGhlIGN1cnJlbnQgb3duZXIgaXMgdGhlIG9mZmVuZGVyLCBidXQgaWYgaXQgYWNjZXB0cyBjaGlsZHJlbiBhcyBhXG5cdCAgICAvLyBwcm9wZXJ0eSwgaXQgbWF5IGJlIHRoZSBjcmVhdG9yIG9mIHRoZSBjaGlsZCB0aGF0J3MgcmVzcG9uc2libGUgZm9yXG5cdCAgICAvLyBhc3NpZ25pbmcgaXQgYSBrZXkuXG5cblx0ICAgIHZhciBjaGlsZE93bmVyID0gJyc7XG5cblx0ICAgIGlmIChlbGVtZW50ICYmIGVsZW1lbnQuX293bmVyICYmIGVsZW1lbnQuX293bmVyICE9PSBSZWFjdEN1cnJlbnRPd25lciQxLmN1cnJlbnQpIHtcblx0ICAgICAgLy8gR2l2ZSB0aGUgY29tcG9uZW50IHRoYXQgb3JpZ2luYWxseSBjcmVhdGVkIHRoaXMgY2hpbGQuXG5cdCAgICAgIGNoaWxkT3duZXIgPSBcIiBJdCB3YXMgcGFzc2VkIGEgY2hpbGQgZnJvbSBcIiArIGdldENvbXBvbmVudE5hbWVGcm9tVHlwZShlbGVtZW50Ll9vd25lci50eXBlKSArIFwiLlwiO1xuXHQgICAgfVxuXG5cdCAgICBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudCQxKGVsZW1lbnQpO1xuXG5cdCAgICBlcnJvcignRWFjaCBjaGlsZCBpbiBhIGxpc3Qgc2hvdWxkIGhhdmUgYSB1bmlxdWUgXCJrZXlcIiBwcm9wLicgKyAnJXMlcyBTZWUgaHR0cHM6Ly9yZWFjdGpzLm9yZy9saW5rL3dhcm5pbmcta2V5cyBmb3IgbW9yZSBpbmZvcm1hdGlvbi4nLCBjdXJyZW50Q29tcG9uZW50RXJyb3JJbmZvLCBjaGlsZE93bmVyKTtcblxuXHQgICAgc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQkMShudWxsKTtcblx0ICB9XG5cdH1cblx0LyoqXG5cdCAqIEVuc3VyZSB0aGF0IGV2ZXJ5IGVsZW1lbnQgZWl0aGVyIGlzIHBhc3NlZCBpbiBhIHN0YXRpYyBsb2NhdGlvbiwgaW4gYW5cblx0ICogYXJyYXkgd2l0aCBhbiBleHBsaWNpdCBrZXlzIHByb3BlcnR5IGRlZmluZWQsIG9yIGluIGFuIG9iamVjdCBsaXRlcmFsXG5cdCAqIHdpdGggdmFsaWQga2V5IHByb3BlcnR5LlxuXHQgKlxuXHQgKiBAaW50ZXJuYWxcblx0ICogQHBhcmFtIHtSZWFjdE5vZGV9IG5vZGUgU3RhdGljYWxseSBwYXNzZWQgY2hpbGQgb2YgYW55IHR5cGUuXG5cdCAqIEBwYXJhbSB7Kn0gcGFyZW50VHlwZSBub2RlJ3MgcGFyZW50J3MgdHlwZS5cblx0ICovXG5cblxuXHRmdW5jdGlvbiB2YWxpZGF0ZUNoaWxkS2V5cyhub2RlLCBwYXJlbnRUeXBlKSB7XG5cdCAge1xuXHQgICAgaWYgKHR5cGVvZiBub2RlICE9PSAnb2JqZWN0Jykge1xuXHQgICAgICByZXR1cm47XG5cdCAgICB9XG5cblx0ICAgIGlmIChpc0FycmF5KG5vZGUpKSB7XG5cdCAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbm9kZS5sZW5ndGg7IGkrKykge1xuXHQgICAgICAgIHZhciBjaGlsZCA9IG5vZGVbaV07XG5cblx0ICAgICAgICBpZiAoaXNWYWxpZEVsZW1lbnQoY2hpbGQpKSB7XG5cdCAgICAgICAgICB2YWxpZGF0ZUV4cGxpY2l0S2V5KGNoaWxkLCBwYXJlbnRUeXBlKTtcblx0ICAgICAgICB9XG5cdCAgICAgIH1cblx0ICAgIH0gZWxzZSBpZiAoaXNWYWxpZEVsZW1lbnQobm9kZSkpIHtcblx0ICAgICAgLy8gVGhpcyBlbGVtZW50IHdhcyBwYXNzZWQgaW4gYSB2YWxpZCBsb2NhdGlvbi5cblx0ICAgICAgaWYgKG5vZGUuX3N0b3JlKSB7XG5cdCAgICAgICAgbm9kZS5fc3RvcmUudmFsaWRhdGVkID0gdHJ1ZTtcblx0ICAgICAgfVxuXHQgICAgfSBlbHNlIGlmIChub2RlKSB7XG5cdCAgICAgIHZhciBpdGVyYXRvckZuID0gZ2V0SXRlcmF0b3JGbihub2RlKTtcblxuXHQgICAgICBpZiAodHlwZW9mIGl0ZXJhdG9yRm4gPT09ICdmdW5jdGlvbicpIHtcblx0ICAgICAgICAvLyBFbnRyeSBpdGVyYXRvcnMgdXNlZCB0byBwcm92aWRlIGltcGxpY2l0IGtleXMsXG5cdCAgICAgICAgLy8gYnV0IG5vdyB3ZSBwcmludCBhIHNlcGFyYXRlIHdhcm5pbmcgZm9yIHRoZW0gbGF0ZXIuXG5cdCAgICAgICAgaWYgKGl0ZXJhdG9yRm4gIT09IG5vZGUuZW50cmllcykge1xuXHQgICAgICAgICAgdmFyIGl0ZXJhdG9yID0gaXRlcmF0b3JGbi5jYWxsKG5vZGUpO1xuXHQgICAgICAgICAgdmFyIHN0ZXA7XG5cblx0ICAgICAgICAgIHdoaWxlICghKHN0ZXAgPSBpdGVyYXRvci5uZXh0KCkpLmRvbmUpIHtcblx0ICAgICAgICAgICAgaWYgKGlzVmFsaWRFbGVtZW50KHN0ZXAudmFsdWUpKSB7XG5cdCAgICAgICAgICAgICAgdmFsaWRhdGVFeHBsaWNpdEtleShzdGVwLnZhbHVlLCBwYXJlbnRUeXBlKTtcblx0ICAgICAgICAgICAgfVxuXHQgICAgICAgICAgfVxuXHQgICAgICAgIH1cblx0ICAgICAgfVxuXHQgICAgfVxuXHQgIH1cblx0fVxuXHQvKipcblx0ICogR2l2ZW4gYW4gZWxlbWVudCwgdmFsaWRhdGUgdGhhdCBpdHMgcHJvcHMgZm9sbG93IHRoZSBwcm9wVHlwZXMgZGVmaW5pdGlvbixcblx0ICogcHJvdmlkZWQgYnkgdGhlIHR5cGUuXG5cdCAqXG5cdCAqIEBwYXJhbSB7UmVhY3RFbGVtZW50fSBlbGVtZW50XG5cdCAqL1xuXG5cblx0ZnVuY3Rpb24gdmFsaWRhdGVQcm9wVHlwZXMoZWxlbWVudCkge1xuXHQgIHtcblx0ICAgIHZhciB0eXBlID0gZWxlbWVudC50eXBlO1xuXG5cdCAgICBpZiAodHlwZSA9PT0gbnVsbCB8fCB0eXBlID09PSB1bmRlZmluZWQgfHwgdHlwZW9mIHR5cGUgPT09ICdzdHJpbmcnKSB7XG5cdCAgICAgIHJldHVybjtcblx0ICAgIH1cblxuXHQgICAgdmFyIHByb3BUeXBlcztcblxuXHQgICAgaWYgKHR5cGVvZiB0eXBlID09PSAnZnVuY3Rpb24nKSB7XG5cdCAgICAgIHByb3BUeXBlcyA9IHR5cGUucHJvcFR5cGVzO1xuXHQgICAgfSBlbHNlIGlmICh0eXBlb2YgdHlwZSA9PT0gJ29iamVjdCcgJiYgKHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX0ZPUldBUkRfUkVGX1RZUEUgfHwgLy8gTm90ZTogTWVtbyBvbmx5IGNoZWNrcyBvdXRlciBwcm9wcyBoZXJlLlxuXHQgICAgLy8gSW5uZXIgcHJvcHMgYXJlIGNoZWNrZWQgaW4gdGhlIHJlY29uY2lsZXIuXG5cdCAgICB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9NRU1PX1RZUEUpKSB7XG5cdCAgICAgIHByb3BUeXBlcyA9IHR5cGUucHJvcFR5cGVzO1xuXHQgICAgfSBlbHNlIHtcblx0ICAgICAgcmV0dXJuO1xuXHQgICAgfVxuXG5cdCAgICBpZiAocHJvcFR5cGVzKSB7XG5cdCAgICAgIC8vIEludGVudGlvbmFsbHkgaW5zaWRlIHRvIGF2b2lkIHRyaWdnZXJpbmcgbGF6eSBpbml0aWFsaXplcnM6XG5cdCAgICAgIHZhciBuYW1lID0gZ2V0Q29tcG9uZW50TmFtZUZyb21UeXBlKHR5cGUpO1xuXHQgICAgICBjaGVja1Byb3BUeXBlcyhwcm9wVHlwZXMsIGVsZW1lbnQucHJvcHMsICdwcm9wJywgbmFtZSwgZWxlbWVudCk7XG5cdCAgICB9IGVsc2UgaWYgKHR5cGUuUHJvcFR5cGVzICE9PSB1bmRlZmluZWQgJiYgIXByb3BUeXBlc01pc3NwZWxsV2FybmluZ1Nob3duKSB7XG5cdCAgICAgIHByb3BUeXBlc01pc3NwZWxsV2FybmluZ1Nob3duID0gdHJ1ZTsgLy8gSW50ZW50aW9uYWxseSBpbnNpZGUgdG8gYXZvaWQgdHJpZ2dlcmluZyBsYXp5IGluaXRpYWxpemVyczpcblxuXHQgICAgICB2YXIgX25hbWUgPSBnZXRDb21wb25lbnROYW1lRnJvbVR5cGUodHlwZSk7XG5cblx0ICAgICAgZXJyb3IoJ0NvbXBvbmVudCAlcyBkZWNsYXJlZCBgUHJvcFR5cGVzYCBpbnN0ZWFkIG9mIGBwcm9wVHlwZXNgLiBEaWQgeW91IG1pc3NwZWxsIHRoZSBwcm9wZXJ0eSBhc3NpZ25tZW50PycsIF9uYW1lIHx8ICdVbmtub3duJyk7XG5cdCAgICB9XG5cblx0ICAgIGlmICh0eXBlb2YgdHlwZS5nZXREZWZhdWx0UHJvcHMgPT09ICdmdW5jdGlvbicgJiYgIXR5cGUuZ2V0RGVmYXVsdFByb3BzLmlzUmVhY3RDbGFzc0FwcHJvdmVkKSB7XG5cdCAgICAgIGVycm9yKCdnZXREZWZhdWx0UHJvcHMgaXMgb25seSB1c2VkIG9uIGNsYXNzaWMgUmVhY3QuY3JlYXRlQ2xhc3MgJyArICdkZWZpbml0aW9ucy4gVXNlIGEgc3RhdGljIHByb3BlcnR5IG5hbWVkIGBkZWZhdWx0UHJvcHNgIGluc3RlYWQuJyk7XG5cdCAgICB9XG5cdCAgfVxuXHR9XG5cdC8qKlxuXHQgKiBHaXZlbiBhIGZyYWdtZW50LCB2YWxpZGF0ZSB0aGF0IGl0IGNhbiBvbmx5IGJlIHByb3ZpZGVkIHdpdGggZnJhZ21lbnQgcHJvcHNcblx0ICogQHBhcmFtIHtSZWFjdEVsZW1lbnR9IGZyYWdtZW50XG5cdCAqL1xuXG5cblx0ZnVuY3Rpb24gdmFsaWRhdGVGcmFnbWVudFByb3BzKGZyYWdtZW50KSB7XG5cdCAge1xuXHQgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhmcmFnbWVudC5wcm9wcyk7XG5cblx0ICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuXHQgICAgICB2YXIga2V5ID0ga2V5c1tpXTtcblxuXHQgICAgICBpZiAoa2V5ICE9PSAnY2hpbGRyZW4nICYmIGtleSAhPT0gJ2tleScpIHtcblx0ICAgICAgICBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudCQxKGZyYWdtZW50KTtcblxuXHQgICAgICAgIGVycm9yKCdJbnZhbGlkIHByb3AgYCVzYCBzdXBwbGllZCB0byBgUmVhY3QuRnJhZ21lbnRgLiAnICsgJ1JlYWN0LkZyYWdtZW50IGNhbiBvbmx5IGhhdmUgYGtleWAgYW5kIGBjaGlsZHJlbmAgcHJvcHMuJywga2V5KTtcblxuXHQgICAgICAgIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50JDEobnVsbCk7XG5cdCAgICAgICAgYnJlYWs7XG5cdCAgICAgIH1cblx0ICAgIH1cblxuXHQgICAgaWYgKGZyYWdtZW50LnJlZiAhPT0gbnVsbCkge1xuXHQgICAgICBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudCQxKGZyYWdtZW50KTtcblxuXHQgICAgICBlcnJvcignSW52YWxpZCBhdHRyaWJ1dGUgYHJlZmAgc3VwcGxpZWQgdG8gYFJlYWN0LkZyYWdtZW50YC4nKTtcblxuXHQgICAgICBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudCQxKG51bGwpO1xuXHQgICAgfVxuXHQgIH1cblx0fVxuXG5cdGZ1bmN0aW9uIGpzeFdpdGhWYWxpZGF0aW9uKHR5cGUsIHByb3BzLCBrZXksIGlzU3RhdGljQ2hpbGRyZW4sIHNvdXJjZSwgc2VsZikge1xuXHQgIHtcblx0ICAgIHZhciB2YWxpZFR5cGUgPSBpc1ZhbGlkRWxlbWVudFR5cGUodHlwZSk7IC8vIFdlIHdhcm4gaW4gdGhpcyBjYXNlIGJ1dCBkb24ndCB0aHJvdy4gV2UgZXhwZWN0IHRoZSBlbGVtZW50IGNyZWF0aW9uIHRvXG5cdCAgICAvLyBzdWNjZWVkIGFuZCB0aGVyZSB3aWxsIGxpa2VseSBiZSBlcnJvcnMgaW4gcmVuZGVyLlxuXG5cdCAgICBpZiAoIXZhbGlkVHlwZSkge1xuXHQgICAgICB2YXIgaW5mbyA9ICcnO1xuXG5cdCAgICAgIGlmICh0eXBlID09PSB1bmRlZmluZWQgfHwgdHlwZW9mIHR5cGUgPT09ICdvYmplY3QnICYmIHR5cGUgIT09IG51bGwgJiYgT2JqZWN0LmtleXModHlwZSkubGVuZ3RoID09PSAwKSB7XG5cdCAgICAgICAgaW5mbyArPSAnIFlvdSBsaWtlbHkgZm9yZ290IHRvIGV4cG9ydCB5b3VyIGNvbXBvbmVudCBmcm9tIHRoZSBmaWxlICcgKyBcIml0J3MgZGVmaW5lZCBpbiwgb3IgeW91IG1pZ2h0IGhhdmUgbWl4ZWQgdXAgZGVmYXVsdCBhbmQgbmFtZWQgaW1wb3J0cy5cIjtcblx0ICAgICAgfVxuXG5cdCAgICAgIHZhciBzb3VyY2VJbmZvID0gZ2V0U291cmNlSW5mb0Vycm9yQWRkZW5kdW0oc291cmNlKTtcblxuXHQgICAgICBpZiAoc291cmNlSW5mbykge1xuXHQgICAgICAgIGluZm8gKz0gc291cmNlSW5mbztcblx0ICAgICAgfSBlbHNlIHtcblx0ICAgICAgICBpbmZvICs9IGdldERlY2xhcmF0aW9uRXJyb3JBZGRlbmR1bSgpO1xuXHQgICAgICB9XG5cblx0ICAgICAgdmFyIHR5cGVTdHJpbmc7XG5cblx0ICAgICAgaWYgKHR5cGUgPT09IG51bGwpIHtcblx0ICAgICAgICB0eXBlU3RyaW5nID0gJ251bGwnO1xuXHQgICAgICB9IGVsc2UgaWYgKGlzQXJyYXkodHlwZSkpIHtcblx0ICAgICAgICB0eXBlU3RyaW5nID0gJ2FycmF5Jztcblx0ICAgICAgfSBlbHNlIGlmICh0eXBlICE9PSB1bmRlZmluZWQgJiYgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFKSB7XG5cdCAgICAgICAgdHlwZVN0cmluZyA9IFwiPFwiICsgKGdldENvbXBvbmVudE5hbWVGcm9tVHlwZSh0eXBlLnR5cGUpIHx8ICdVbmtub3duJykgKyBcIiAvPlwiO1xuXHQgICAgICAgIGluZm8gPSAnIERpZCB5b3UgYWNjaWRlbnRhbGx5IGV4cG9ydCBhIEpTWCBsaXRlcmFsIGluc3RlYWQgb2YgYSBjb21wb25lbnQ/Jztcblx0ICAgICAgfSBlbHNlIHtcblx0ICAgICAgICB0eXBlU3RyaW5nID0gdHlwZW9mIHR5cGU7XG5cdCAgICAgIH1cblxuXHQgICAgICBlcnJvcignUmVhY3QuanN4OiB0eXBlIGlzIGludmFsaWQgLS0gZXhwZWN0ZWQgYSBzdHJpbmcgKGZvciAnICsgJ2J1aWx0LWluIGNvbXBvbmVudHMpIG9yIGEgY2xhc3MvZnVuY3Rpb24gKGZvciBjb21wb3NpdGUgJyArICdjb21wb25lbnRzKSBidXQgZ290OiAlcy4lcycsIHR5cGVTdHJpbmcsIGluZm8pO1xuXHQgICAgfVxuXG5cdCAgICB2YXIgZWxlbWVudCA9IGpzeERFVih0eXBlLCBwcm9wcywga2V5LCBzb3VyY2UsIHNlbGYpOyAvLyBUaGUgcmVzdWx0IGNhbiBiZSBudWxsaXNoIGlmIGEgbW9jayBvciBhIGN1c3RvbSBmdW5jdGlvbiBpcyB1c2VkLlxuXHQgICAgLy8gVE9ETzogRHJvcCB0aGlzIHdoZW4gdGhlc2UgYXJlIG5vIGxvbmdlciBhbGxvd2VkIGFzIHRoZSB0eXBlIGFyZ3VtZW50LlxuXG5cdCAgICBpZiAoZWxlbWVudCA9PSBudWxsKSB7XG5cdCAgICAgIHJldHVybiBlbGVtZW50O1xuXHQgICAgfSAvLyBTa2lwIGtleSB3YXJuaW5nIGlmIHRoZSB0eXBlIGlzbid0IHZhbGlkIHNpbmNlIG91ciBrZXkgdmFsaWRhdGlvbiBsb2dpY1xuXHQgICAgLy8gZG9lc24ndCBleHBlY3QgYSBub24tc3RyaW5nL2Z1bmN0aW9uIHR5cGUgYW5kIGNhbiB0aHJvdyBjb25mdXNpbmcgZXJyb3JzLlxuXHQgICAgLy8gV2UgZG9uJ3Qgd2FudCBleGNlcHRpb24gYmVoYXZpb3IgdG8gZGlmZmVyIGJldHdlZW4gZGV2IGFuZCBwcm9kLlxuXHQgICAgLy8gKFJlbmRlcmluZyB3aWxsIHRocm93IHdpdGggYSBoZWxwZnVsIG1lc3NhZ2UgYW5kIGFzIHNvb24gYXMgdGhlIHR5cGUgaXNcblx0ICAgIC8vIGZpeGVkLCB0aGUga2V5IHdhcm5pbmdzIHdpbGwgYXBwZWFyLilcblxuXG5cdCAgICBpZiAodmFsaWRUeXBlKSB7XG5cdCAgICAgIHZhciBjaGlsZHJlbiA9IHByb3BzLmNoaWxkcmVuO1xuXG5cdCAgICAgIGlmIChjaGlsZHJlbiAhPT0gdW5kZWZpbmVkKSB7XG5cdCAgICAgICAgaWYgKGlzU3RhdGljQ2hpbGRyZW4pIHtcblx0ICAgICAgICAgIGlmIChpc0FycmF5KGNoaWxkcmVuKSkge1xuXHQgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG5cdCAgICAgICAgICAgICAgdmFsaWRhdGVDaGlsZEtleXMoY2hpbGRyZW5baV0sIHR5cGUpO1xuXHQgICAgICAgICAgICB9XG5cblx0ICAgICAgICAgICAgaWYgKE9iamVjdC5mcmVlemUpIHtcblx0ICAgICAgICAgICAgICBPYmplY3QuZnJlZXplKGNoaWxkcmVuKTtcblx0ICAgICAgICAgICAgfVxuXHQgICAgICAgICAgfSBlbHNlIHtcblx0ICAgICAgICAgICAgZXJyb3IoJ1JlYWN0LmpzeDogU3RhdGljIGNoaWxkcmVuIHNob3VsZCBhbHdheXMgYmUgYW4gYXJyYXkuICcgKyAnWW91IGFyZSBsaWtlbHkgZXhwbGljaXRseSBjYWxsaW5nIFJlYWN0LmpzeHMgb3IgUmVhY3QuanN4REVWLiAnICsgJ1VzZSB0aGUgQmFiZWwgdHJhbnNmb3JtIGluc3RlYWQuJyk7XG5cdCAgICAgICAgICB9XG5cdCAgICAgICAgfSBlbHNlIHtcblx0ICAgICAgICAgIHZhbGlkYXRlQ2hpbGRLZXlzKGNoaWxkcmVuLCB0eXBlKTtcblx0ICAgICAgICB9XG5cdCAgICAgIH1cblx0ICAgIH1cblxuXHQgICAgaWYgKHR5cGUgPT09IFJFQUNUX0ZSQUdNRU5UX1RZUEUpIHtcblx0ICAgICAgdmFsaWRhdGVGcmFnbWVudFByb3BzKGVsZW1lbnQpO1xuXHQgICAgfSBlbHNlIHtcblx0ICAgICAgdmFsaWRhdGVQcm9wVHlwZXMoZWxlbWVudCk7XG5cdCAgICB9XG5cblx0ICAgIHJldHVybiBlbGVtZW50O1xuXHQgIH1cblx0fSAvLyBUaGVzZSB0d28gZnVuY3Rpb25zIGV4aXN0IHRvIHN0aWxsIGdldCBjaGlsZCB3YXJuaW5ncyBpbiBkZXZcblx0Ly8gZXZlbiB3aXRoIHRoZSBwcm9kIHRyYW5zZm9ybS4gVGhpcyBtZWFucyB0aGF0IGpzeERFViBpcyBwdXJlbHlcblx0Ly8gb3B0LWluIGJlaGF2aW9yIGZvciBiZXR0ZXIgbWVzc2FnZXMgYnV0IHRoYXQgd2Ugd29uJ3Qgc3RvcFxuXHQvLyBnaXZpbmcgeW91IHdhcm5pbmdzIGlmIHlvdSB1c2UgcHJvZHVjdGlvbiBhcGlzLlxuXG5cdGZ1bmN0aW9uIGpzeFdpdGhWYWxpZGF0aW9uU3RhdGljKHR5cGUsIHByb3BzLCBrZXkpIHtcblx0ICB7XG5cdCAgICByZXR1cm4ganN4V2l0aFZhbGlkYXRpb24odHlwZSwgcHJvcHMsIGtleSwgdHJ1ZSk7XG5cdCAgfVxuXHR9XG5cdGZ1bmN0aW9uIGpzeFdpdGhWYWxpZGF0aW9uRHluYW1pYyh0eXBlLCBwcm9wcywga2V5KSB7XG5cdCAge1xuXHQgICAgcmV0dXJuIGpzeFdpdGhWYWxpZGF0aW9uKHR5cGUsIHByb3BzLCBrZXksIGZhbHNlKTtcblx0ICB9XG5cdH1cblxuXHR2YXIganN4ID0gIGpzeFdpdGhWYWxpZGF0aW9uRHluYW1pYyA7IC8vIHdlIG1heSB3YW50IHRvIHNwZWNpYWwgY2FzZSBqc3hzIGludGVybmFsbHkgdG8gdGFrZSBhZHZhbnRhZ2Ugb2Ygc3RhdGljIGNoaWxkcmVuLlxuXHQvLyBmb3Igbm93IHdlIGNhbiBzaGlwIGlkZW50aWNhbCBwcm9kIGZ1bmN0aW9uc1xuXG5cdHZhciBqc3hzID0gIGpzeFdpdGhWYWxpZGF0aW9uU3RhdGljIDtcblxuXHRyZWFjdEpzeFJ1bnRpbWVfZGV2ZWxvcG1lbnQuRnJhZ21lbnQgPSBSRUFDVF9GUkFHTUVOVF9UWVBFO1xuXHRyZWFjdEpzeFJ1bnRpbWVfZGV2ZWxvcG1lbnQuanN4ID0ganN4O1xuXHRyZWFjdEpzeFJ1bnRpbWVfZGV2ZWxvcG1lbnQuanN4cyA9IGpzeHM7XG5cdCAgfSkoKTtcblx0fVxuXHRyZXR1cm4gcmVhY3RKc3hSdW50aW1lX2RldmVsb3BtZW50O1xufVxuXG52YXIgcmVhY3RKc3hSdW50aW1lX3Byb2R1Y3Rpb25fbWluID0ge307XG5cbi8qKlxuICogQGxpY2Vuc2UgUmVhY3RcbiAqIHJlYWN0LWpzeC1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxudmFyIGhhc1JlcXVpcmVkUmVhY3RKc3hSdW50aW1lX3Byb2R1Y3Rpb25fbWluO1xuXG5mdW5jdGlvbiByZXF1aXJlUmVhY3RKc3hSdW50aW1lX3Byb2R1Y3Rpb25fbWluICgpIHtcblx0aWYgKGhhc1JlcXVpcmVkUmVhY3RKc3hSdW50aW1lX3Byb2R1Y3Rpb25fbWluKSByZXR1cm4gcmVhY3RKc3hSdW50aW1lX3Byb2R1Y3Rpb25fbWluO1xuXHRoYXNSZXF1aXJlZFJlYWN0SnN4UnVudGltZV9wcm9kdWN0aW9uX21pbiA9IDE7XG52YXIgZj1yZXF1aXJlJCQwLGs9U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIiksbD1TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIiksbT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LG49Zi5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRC5SZWFjdEN1cnJlbnRPd25lcixwPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5cdGZ1bmN0aW9uIHEoYyxhLGcpe3ZhciBiLGQ9e30sZT1udWxsLGg9bnVsbDt2b2lkIDAhPT1nJiYoZT1cIlwiK2cpO3ZvaWQgMCE9PWEua2V5JiYoZT1cIlwiK2Eua2V5KTt2b2lkIDAhPT1hLnJlZiYmKGg9YS5yZWYpO2ZvcihiIGluIGEpbS5jYWxsKGEsYikmJiFwLmhhc093blByb3BlcnR5KGIpJiYoZFtiXT1hW2JdKTtpZihjJiZjLmRlZmF1bHRQcm9wcylmb3IoYiBpbiBhPWMuZGVmYXVsdFByb3BzLGEpdm9pZCAwPT09ZFtiXSYmKGRbYl09YVtiXSk7cmV0dXJuIHskJHR5cGVvZjprLHR5cGU6YyxrZXk6ZSxyZWY6aCxwcm9wczpkLF9vd25lcjpuLmN1cnJlbnR9fXJlYWN0SnN4UnVudGltZV9wcm9kdWN0aW9uX21pbi5GcmFnbWVudD1sO3JlYWN0SnN4UnVudGltZV9wcm9kdWN0aW9uX21pbi5qc3g9cTtyZWFjdEpzeFJ1bnRpbWVfcHJvZHVjdGlvbl9taW4uanN4cz1xO1xuXHRyZXR1cm4gcmVhY3RKc3hSdW50aW1lX3Byb2R1Y3Rpb25fbWluO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBqc3hSdW50aW1lLmV4cG9ydHMgPSByZXF1aXJlUmVhY3RKc3hSdW50aW1lX3Byb2R1Y3Rpb25fbWluKCk7XG59IGVsc2Uge1xuICBqc3hSdW50aW1lLmV4cG9ydHMgPSByZXF1aXJlUmVhY3RKc3hSdW50aW1lX2RldmVsb3BtZW50KCk7XG59XG5cbnZhciBqc3hSdW50aW1lRXhwb3J0cyA9IGpzeFJ1bnRpbWUuZXhwb3J0cztcblxuLyoqIFJldHVybnMgdHJ1ZSB3aGVuIHRoZSBwcm9wcyBhcmUgb2YgdHlwZSB7QGxpbmsgRGF5UGlja2VyTXVsdGlwbGVQcm9wc30uICovXG5mdW5jdGlvbiBpc0RheVBpY2tlck11bHRpcGxlKHByb3BzKSB7XG4gICAgcmV0dXJuIHByb3BzLm1vZGUgPT09ICdtdWx0aXBsZSc7XG59XG5cbi8qKiBSZXR1cm5zIHRydWUgd2hlbiB0aGUgcHJvcHMgYXJlIG9mIHR5cGUge0BsaW5rIERheVBpY2tlclJhbmdlUHJvcHN9LiAqL1xuZnVuY3Rpb24gaXNEYXlQaWNrZXJSYW5nZShwcm9wcykge1xuICAgIHJldHVybiBwcm9wcy5tb2RlID09PSAncmFuZ2UnO1xufVxuXG4vKiogUmV0dXJucyB0cnVlIHdoZW4gdGhlIHByb3BzIGFyZSBvZiB0eXBlIHtAbGluayBEYXlQaWNrZXJTaW5nbGVQcm9wc30uICovXG5mdW5jdGlvbiBpc0RheVBpY2tlclNpbmdsZShwcm9wcykge1xuICAgIHJldHVybiBwcm9wcy5tb2RlID09PSAnc2luZ2xlJztcbn1cblxuLyoqXG4gKiBUaGUgbmFtZSBvZiB0aGUgZGVmYXVsdCBDU1MgY2xhc3Nlcy5cbiAqL1xudmFyIGRlZmF1bHRDbGFzc05hbWVzID0ge1xuICAgIHJvb3Q6ICdyZHAnLFxuICAgIG11bHRpcGxlX21vbnRoczogJ3JkcC1tdWx0aXBsZV9tb250aHMnLFxuICAgIHdpdGhfd2Vla251bWJlcjogJ3JkcC13aXRoX3dlZWtudW1iZXInLFxuICAgIHZoaWRkZW46ICdyZHAtdmhpZGRlbicsXG4gICAgYnV0dG9uX3Jlc2V0OiAncmRwLWJ1dHRvbl9yZXNldCcsXG4gICAgYnV0dG9uOiAncmRwLWJ1dHRvbicsXG4gICAgY2FwdGlvbjogJ3JkcC1jYXB0aW9uJyxcbiAgICBjYXB0aW9uX3N0YXJ0OiAncmRwLWNhcHRpb25fc3RhcnQnLFxuICAgIGNhcHRpb25fZW5kOiAncmRwLWNhcHRpb25fZW5kJyxcbiAgICBjYXB0aW9uX2JldHdlZW46ICdyZHAtY2FwdGlvbl9iZXR3ZWVuJyxcbiAgICBjYXB0aW9uX2xhYmVsOiAncmRwLWNhcHRpb25fbGFiZWwnLFxuICAgIGNhcHRpb25fZHJvcGRvd25zOiAncmRwLWNhcHRpb25fZHJvcGRvd25zJyxcbiAgICBkcm9wZG93bjogJ3JkcC1kcm9wZG93bicsXG4gICAgZHJvcGRvd25fbW9udGg6ICdyZHAtZHJvcGRvd25fbW9udGgnLFxuICAgIGRyb3Bkb3duX3llYXI6ICdyZHAtZHJvcGRvd25feWVhcicsXG4gICAgZHJvcGRvd25faWNvbjogJ3JkcC1kcm9wZG93bl9pY29uJyxcbiAgICBtb250aHM6ICdyZHAtbW9udGhzJyxcbiAgICBtb250aDogJ3JkcC1tb250aCcsXG4gICAgdGFibGU6ICdyZHAtdGFibGUnLFxuICAgIHRib2R5OiAncmRwLXRib2R5JyxcbiAgICB0Zm9vdDogJ3JkcC10Zm9vdCcsXG4gICAgaGVhZDogJ3JkcC1oZWFkJyxcbiAgICBoZWFkX3JvdzogJ3JkcC1oZWFkX3JvdycsXG4gICAgaGVhZF9jZWxsOiAncmRwLWhlYWRfY2VsbCcsXG4gICAgbmF2OiAncmRwLW5hdicsXG4gICAgbmF2X2J1dHRvbjogJ3JkcC1uYXZfYnV0dG9uJyxcbiAgICBuYXZfYnV0dG9uX3ByZXZpb3VzOiAncmRwLW5hdl9idXR0b25fcHJldmlvdXMnLFxuICAgIG5hdl9idXR0b25fbmV4dDogJ3JkcC1uYXZfYnV0dG9uX25leHQnLFxuICAgIG5hdl9pY29uOiAncmRwLW5hdl9pY29uJyxcbiAgICByb3c6ICdyZHAtcm93JyxcbiAgICB3ZWVrbnVtYmVyOiAncmRwLXdlZWtudW1iZXInLFxuICAgIGNlbGw6ICdyZHAtY2VsbCcsXG4gICAgZGF5OiAncmRwLWRheScsXG4gICAgZGF5X3RvZGF5OiAncmRwLWRheV90b2RheScsXG4gICAgZGF5X291dHNpZGU6ICdyZHAtZGF5X291dHNpZGUnLFxuICAgIGRheV9zZWxlY3RlZDogJ3JkcC1kYXlfc2VsZWN0ZWQnLFxuICAgIGRheV9kaXNhYmxlZDogJ3JkcC1kYXlfZGlzYWJsZWQnLFxuICAgIGRheV9oaWRkZW46ICdyZHAtZGF5X2hpZGRlbicsXG4gICAgZGF5X3JhbmdlX3N0YXJ0OiAncmRwLWRheV9yYW5nZV9zdGFydCcsXG4gICAgZGF5X3JhbmdlX2VuZDogJ3JkcC1kYXlfcmFuZ2VfZW5kJyxcbiAgICBkYXlfcmFuZ2VfbWlkZGxlOiAncmRwLWRheV9yYW5nZV9taWRkbGUnXG59O1xuXG4vKipcbiAqIFRoZSBkZWZhdWx0IGZvcm1hdHRlciBmb3IgdGhlIGNhcHRpb24uXG4gKi9cbmZ1bmN0aW9uIGZvcm1hdENhcHRpb24obW9udGgsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gZm9ybWF0KG1vbnRoLCAnTExMTCB5Jywgb3B0aW9ucyk7XG59XG5cbi8qKlxuICogVGhlIGRlZmF1bHQgZm9ybWF0dGVyIGZvciB0aGUgRGF5IGJ1dHRvbi5cbiAqL1xuZnVuY3Rpb24gZm9ybWF0RGF5KGRheSwgb3B0aW9ucykge1xuICAgIHJldHVybiBmb3JtYXQoZGF5LCAnZCcsIG9wdGlvbnMpO1xufVxuXG4vKipcbiAqIFRoZSBkZWZhdWx0IGZvcm1hdHRlciBmb3IgdGhlIE1vbnRoIGNhcHRpb24uXG4gKi9cbmZ1bmN0aW9uIGZvcm1hdE1vbnRoQ2FwdGlvbihtb250aCwgb3B0aW9ucykge1xuICAgIHJldHVybiBmb3JtYXQobW9udGgsICdMTExMJywgb3B0aW9ucyk7XG59XG5cbi8qKlxuICogVGhlIGRlZmF1bHQgZm9ybWF0dGVyIGZvciB0aGUgd2VlayBudW1iZXIuXG4gKi9cbmZ1bmN0aW9uIGZvcm1hdFdlZWtOdW1iZXIod2Vla051bWJlcikge1xuICAgIHJldHVybiBcIlwiLmNvbmNhdCh3ZWVrTnVtYmVyKTtcbn1cblxuLyoqXG4gKiBUaGUgZGVmYXVsdCBmb3JtYXR0ZXIgZm9yIHRoZSBuYW1lIG9mIHRoZSB3ZWVrZGF5LlxuICovXG5mdW5jdGlvbiBmb3JtYXRXZWVrZGF5TmFtZSh3ZWVrZGF5LCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGZvcm1hdCh3ZWVrZGF5LCAnY2NjY2NjJywgb3B0aW9ucyk7XG59XG5cbi8qKlxuICogVGhlIGRlZmF1bHQgZm9ybWF0dGVyIGZvciB0aGUgWWVhciBjYXB0aW9uLlxuICovXG5mdW5jdGlvbiBmb3JtYXRZZWFyQ2FwdGlvbih5ZWFyLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGZvcm1hdCh5ZWFyLCAneXl5eScsIG9wdGlvbnMpO1xufVxuXG52YXIgZm9ybWF0dGVycyA9IC8qI19fUFVSRV9fKi9PYmplY3QuZnJlZXplKHtcbiAgICBfX3Byb3RvX186IG51bGwsXG4gICAgZm9ybWF0Q2FwdGlvbjogZm9ybWF0Q2FwdGlvbixcbiAgICBmb3JtYXREYXk6IGZvcm1hdERheSxcbiAgICBmb3JtYXRNb250aENhcHRpb246IGZvcm1hdE1vbnRoQ2FwdGlvbixcbiAgICBmb3JtYXRXZWVrTnVtYmVyOiBmb3JtYXRXZWVrTnVtYmVyLFxuICAgIGZvcm1hdFdlZWtkYXlOYW1lOiBmb3JtYXRXZWVrZGF5TmFtZSxcbiAgICBmb3JtYXRZZWFyQ2FwdGlvbjogZm9ybWF0WWVhckNhcHRpb25cbn0pO1xuXG4vKipcbiAqIFRoZSBkZWZhdWx0IEFSSUEgbGFiZWwgZm9yIHRoZSBkYXkgYnV0dG9uLlxuICovXG52YXIgbGFiZWxEYXkgPSBmdW5jdGlvbiAoZGF5LCBhY3RpdmVNb2RpZmllcnMsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gZm9ybWF0KGRheSwgJ2RvIE1NTU0gKEVFRUUpJywgb3B0aW9ucyk7XG59O1xuXG4vKipcbiAqIFRoZSBkZWZhdWx0IEFSSUEgbGFiZWwgZm9yIHRoZSBXZWVrTnVtYmVyIGVsZW1lbnQuXG4gKi9cbnZhciBsYWJlbE1vbnRoRHJvcGRvd24gPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuICdNb250aDogJztcbn07XG5cbi8qKlxuICogVGhlIGRlZmF1bHQgQVJJQSBsYWJlbCBmb3IgbmV4dCBtb250aCBidXR0b24gaW4gbmF2aWdhdGlvblxuICovXG52YXIgbGFiZWxOZXh0ID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAnR28gdG8gbmV4dCBtb250aCc7XG59O1xuXG4vKipcbiAqIFRoZSBkZWZhdWx0IEFSSUEgbGFiZWwgZm9yIHByZXZpb3VzIG1vbnRoIGJ1dHRvbiBpbiBuYXZpZ2F0aW9uXG4gKi9cbnZhciBsYWJlbFByZXZpb3VzID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAnR28gdG8gcHJldmlvdXMgbW9udGgnO1xufTtcblxuLyoqXG4gKiBUaGUgZGVmYXVsdCBBUklBIGxhYmVsIGZvciB0aGUgV2Vla2RheSBlbGVtZW50LlxuICovXG52YXIgbGFiZWxXZWVrZGF5ID0gZnVuY3Rpb24gKGRheSwgb3B0aW9ucykge1xuICAgIHJldHVybiBmb3JtYXQoZGF5LCAnY2NjYycsIG9wdGlvbnMpO1xufTtcblxuLyoqXG4gKiBUaGUgZGVmYXVsdCBBUklBIGxhYmVsIGZvciB0aGUgV2Vla051bWJlciBlbGVtZW50LlxuICovXG52YXIgbGFiZWxXZWVrTnVtYmVyID0gZnVuY3Rpb24gKG4pIHtcbiAgICByZXR1cm4gXCJXZWVrIG4uIFwiLmNvbmNhdChuKTtcbn07XG5cbi8qKlxuICogVGhlIGRlZmF1bHQgQVJJQSBsYWJlbCBmb3IgdGhlIFdlZWtOdW1iZXIgZWxlbWVudC5cbiAqL1xudmFyIGxhYmVsWWVhckRyb3Bkb3duID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAnWWVhcjogJztcbn07XG5cbnZhciBsYWJlbHMgPSAvKiNfX1BVUkVfXyovT2JqZWN0LmZyZWV6ZSh7XG4gICAgX19wcm90b19fOiBudWxsLFxuICAgIGxhYmVsRGF5OiBsYWJlbERheSxcbiAgICBsYWJlbE1vbnRoRHJvcGRvd246IGxhYmVsTW9udGhEcm9wZG93bixcbiAgICBsYWJlbE5leHQ6IGxhYmVsTmV4dCxcbiAgICBsYWJlbFByZXZpb3VzOiBsYWJlbFByZXZpb3VzLFxuICAgIGxhYmVsV2Vla051bWJlcjogbGFiZWxXZWVrTnVtYmVyLFxuICAgIGxhYmVsV2Vla2RheTogbGFiZWxXZWVrZGF5LFxuICAgIGxhYmVsWWVhckRyb3Bkb3duOiBsYWJlbFllYXJEcm9wZG93blxufSk7XG5cbi8qKlxuICogUmV0dXJucyB0aGUgZGVmYXVsdCB2YWx1ZXMgdG8gdXNlIGluIHRoZSBEYXlQaWNrZXJDb250ZXh0LCBpbiBjYXNlIHRoZXkgYXJlXG4gKiBub3QgcGFzc2VkIGRvd24gd2l0aCB0aGUgRGF5UGlja2VyIGluaXRpYWwgcHJvcHMuXG4gKi9cbmZ1bmN0aW9uIGdldERlZmF1bHRDb250ZXh0VmFsdWVzKCkge1xuICAgIHZhciBjYXB0aW9uTGF5b3V0ID0gJ2J1dHRvbnMnO1xuICAgIHZhciBjbGFzc05hbWVzID0gZGVmYXVsdENsYXNzTmFtZXM7XG4gICAgdmFyIGxvY2FsZSA9IGVuVVM7XG4gICAgdmFyIG1vZGlmaWVyc0NsYXNzTmFtZXMgPSB7fTtcbiAgICB2YXIgbW9kaWZpZXJzID0ge307XG4gICAgdmFyIG51bWJlck9mTW9udGhzID0gMTtcbiAgICB2YXIgc3R5bGVzID0ge307XG4gICAgdmFyIHRvZGF5ID0gbmV3IERhdGUoKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBjYXB0aW9uTGF5b3V0OiBjYXB0aW9uTGF5b3V0LFxuICAgICAgICBjbGFzc05hbWVzOiBjbGFzc05hbWVzLFxuICAgICAgICBmb3JtYXR0ZXJzOiBmb3JtYXR0ZXJzLFxuICAgICAgICBsYWJlbHM6IGxhYmVscyxcbiAgICAgICAgbG9jYWxlOiBsb2NhbGUsXG4gICAgICAgIG1vZGlmaWVyc0NsYXNzTmFtZXM6IG1vZGlmaWVyc0NsYXNzTmFtZXMsXG4gICAgICAgIG1vZGlmaWVyczogbW9kaWZpZXJzLFxuICAgICAgICBudW1iZXJPZk1vbnRoczogbnVtYmVyT2ZNb250aHMsXG4gICAgICAgIHN0eWxlczogc3R5bGVzLFxuICAgICAgICB0b2RheTogdG9kYXksXG4gICAgICAgIG1vZGU6ICdkZWZhdWx0J1xuICAgIH07XG59XG5cbi8qKiBSZXR1cm4gdGhlIGBmcm9tRGF0ZWAgYW5kIGB0b0RhdGVgIHByb3AgdmFsdWVzIHZhbHVlcyBwYXJzaW5nIHRoZSBEYXlQaWNrZXIgcHJvcHMuICovXG5mdW5jdGlvbiBwYXJzZUZyb21Ub1Byb3BzKHByb3BzKSB7XG4gICAgdmFyIGZyb21ZZWFyID0gcHJvcHMuZnJvbVllYXIsIHRvWWVhciA9IHByb3BzLnRvWWVhciwgZnJvbU1vbnRoID0gcHJvcHMuZnJvbU1vbnRoLCB0b01vbnRoID0gcHJvcHMudG9Nb250aDtcbiAgICB2YXIgZnJvbURhdGUgPSBwcm9wcy5mcm9tRGF0ZSwgdG9EYXRlID0gcHJvcHMudG9EYXRlO1xuICAgIGlmIChmcm9tTW9udGgpIHtcbiAgICAgICAgZnJvbURhdGUgPSBzdGFydE9mTW9udGgoZnJvbU1vbnRoKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoZnJvbVllYXIpIHtcbiAgICAgICAgZnJvbURhdGUgPSBuZXcgRGF0ZShmcm9tWWVhciwgMCwgMSk7XG4gICAgfVxuICAgIGlmICh0b01vbnRoKSB7XG4gICAgICAgIHRvRGF0ZSA9IGVuZE9mTW9udGgodG9Nb250aCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHRvWWVhcikge1xuICAgICAgICB0b0RhdGUgPSBuZXcgRGF0ZSh0b1llYXIsIDExLCAzMSk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGZyb21EYXRlOiBmcm9tRGF0ZSA/IHN0YXJ0T2ZEYXkoZnJvbURhdGUpIDogdW5kZWZpbmVkLFxuICAgICAgICB0b0RhdGU6IHRvRGF0ZSA/IHN0YXJ0T2ZEYXkodG9EYXRlKSA6IHVuZGVmaW5lZFxuICAgIH07XG59XG5cbi8qKlxuICogVGhlIERheVBpY2tlciBjb250ZXh0IHNoYXJlcyB0aGUgcHJvcHMgcGFzc2VkIHRvIERheVBpY2tlciB3aXRoaW4gaW50ZXJuYWxcbiAqIGFuZCBjdXN0b20gY29tcG9uZW50cy4gSXQgaXMgdXNlZCB0byBzZXQgdGhlIGRlZmF1bHQgdmFsdWVzIGFuZCBwZXJmb3JtXG4gKiBvbmUtdGltZSBjYWxjdWxhdGlvbnMgcmVxdWlyZWQgdG8gcmVuZGVyIHRoZSBkYXlzLlxuICpcbiAqIEFjY2VzcyB0byB0aGlzIGNvbnRleHQgZnJvbSB0aGUge0BsaW5rIHVzZURheVBpY2tlcn0gaG9vay5cbiAqL1xudmFyIERheVBpY2tlckNvbnRleHQgPSBjcmVhdGVDb250ZXh0KHVuZGVmaW5lZCk7XG4vKipcbiAqIFRoZSBwcm92aWRlciBmb3IgdGhlIHtAbGluayBEYXlQaWNrZXJDb250ZXh0fSwgYXNzaWduaW5nIHRoZSBkZWZhdWx0cyBmcm9tIHRoZVxuICogaW5pdGlhbCBEYXlQaWNrZXIgcHJvcHMuXG4gKi9cbmZ1bmN0aW9uIERheVBpY2tlclByb3ZpZGVyKHByb3BzKSB7XG4gICAgdmFyIF9hO1xuICAgIHZhciBpbml0aWFsUHJvcHMgPSBwcm9wcy5pbml0aWFsUHJvcHM7XG4gICAgdmFyIGRlZmF1bHRDb250ZXh0VmFsdWVzID0gZ2V0RGVmYXVsdENvbnRleHRWYWx1ZXMoKTtcbiAgICB2YXIgX2IgPSBwYXJzZUZyb21Ub1Byb3BzKGluaXRpYWxQcm9wcyksIGZyb21EYXRlID0gX2IuZnJvbURhdGUsIHRvRGF0ZSA9IF9iLnRvRGF0ZTtcbiAgICB2YXIgY2FwdGlvbkxheW91dCA9IChfYSA9IGluaXRpYWxQcm9wcy5jYXB0aW9uTGF5b3V0KSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBkZWZhdWx0Q29udGV4dFZhbHVlcy5jYXB0aW9uTGF5b3V0O1xuICAgIGlmIChjYXB0aW9uTGF5b3V0ICE9PSAnYnV0dG9ucycgJiYgKCFmcm9tRGF0ZSB8fCAhdG9EYXRlKSkge1xuICAgICAgICAvLyBXaGVuIG5vIGZyb20vdG8gZGF0ZXMgYXJlIHNldCwgdGhlIGNhcHRpb24gaXMgYWx3YXlzIGJ1dHRvbnNcbiAgICAgICAgY2FwdGlvbkxheW91dCA9ICdidXR0b25zJztcbiAgICB9XG4gICAgdmFyIG9uU2VsZWN0O1xuICAgIGlmIChpc0RheVBpY2tlclNpbmdsZShpbml0aWFsUHJvcHMpIHx8XG4gICAgICAgIGlzRGF5UGlja2VyTXVsdGlwbGUoaW5pdGlhbFByb3BzKSB8fFxuICAgICAgICBpc0RheVBpY2tlclJhbmdlKGluaXRpYWxQcm9wcykpIHtcbiAgICAgICAgb25TZWxlY3QgPSBpbml0aWFsUHJvcHMub25TZWxlY3Q7XG4gICAgfVxuICAgIHZhciB2YWx1ZSA9IF9fYXNzaWduKF9fYXNzaWduKF9fYXNzaWduKHt9LCBkZWZhdWx0Q29udGV4dFZhbHVlcyksIGluaXRpYWxQcm9wcyksIHsgY2FwdGlvbkxheW91dDogY2FwdGlvbkxheW91dCwgY2xhc3NOYW1lczogX19hc3NpZ24oX19hc3NpZ24oe30sIGRlZmF1bHRDb250ZXh0VmFsdWVzLmNsYXNzTmFtZXMpLCBpbml0aWFsUHJvcHMuY2xhc3NOYW1lcyksIGNvbXBvbmVudHM6IF9fYXNzaWduKHt9LCBpbml0aWFsUHJvcHMuY29tcG9uZW50cyksIGZvcm1hdHRlcnM6IF9fYXNzaWduKF9fYXNzaWduKHt9LCBkZWZhdWx0Q29udGV4dFZhbHVlcy5mb3JtYXR0ZXJzKSwgaW5pdGlhbFByb3BzLmZvcm1hdHRlcnMpLCBmcm9tRGF0ZTogZnJvbURhdGUsIGxhYmVsczogX19hc3NpZ24oX19hc3NpZ24oe30sIGRlZmF1bHRDb250ZXh0VmFsdWVzLmxhYmVscyksIGluaXRpYWxQcm9wcy5sYWJlbHMpLCBtb2RlOiBpbml0aWFsUHJvcHMubW9kZSB8fCBkZWZhdWx0Q29udGV4dFZhbHVlcy5tb2RlLCBtb2RpZmllcnM6IF9fYXNzaWduKF9fYXNzaWduKHt9LCBkZWZhdWx0Q29udGV4dFZhbHVlcy5tb2RpZmllcnMpLCBpbml0aWFsUHJvcHMubW9kaWZpZXJzKSwgbW9kaWZpZXJzQ2xhc3NOYW1lczogX19hc3NpZ24oX19hc3NpZ24oe30sIGRlZmF1bHRDb250ZXh0VmFsdWVzLm1vZGlmaWVyc0NsYXNzTmFtZXMpLCBpbml0aWFsUHJvcHMubW9kaWZpZXJzQ2xhc3NOYW1lcyksIG9uU2VsZWN0OiBvblNlbGVjdCwgc3R5bGVzOiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgZGVmYXVsdENvbnRleHRWYWx1ZXMuc3R5bGVzKSwgaW5pdGlhbFByb3BzLnN0eWxlcyksIHRvRGF0ZTogdG9EYXRlIH0pO1xuICAgIHJldHVybiAoanN4UnVudGltZUV4cG9ydHMuanN4KERheVBpY2tlckNvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWU6IHZhbHVlLCBjaGlsZHJlbjogcHJvcHMuY2hpbGRyZW4gfSkpO1xufVxuLyoqXG4gKiBIb29rIHRvIGFjY2VzcyB0aGUge0BsaW5rIERheVBpY2tlckNvbnRleHRWYWx1ZX0uXG4gKlxuICogVXNlIHRoZSBEYXlQaWNrZXIgY29udGV4dCB0byBhY2Nlc3MgdG8gdGhlIHByb3BzIHBhc3NlZCB0byBEYXlQaWNrZXIgaW5zaWRlXG4gKiBpbnRlcm5hbCBvciBjdXN0b20gY29tcG9uZW50cy5cbiAqL1xuZnVuY3Rpb24gdXNlRGF5UGlja2VyKCkge1xuICAgIHZhciBjb250ZXh0ID0gdXNlQ29udGV4dChEYXlQaWNrZXJDb250ZXh0KTtcbiAgICBpZiAoIWNvbnRleHQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidXNlRGF5UGlja2VyIG11c3QgYmUgdXNlZCB3aXRoaW4gYSBEYXlQaWNrZXJQcm92aWRlci5cIik7XG4gICAgfVxuICAgIHJldHVybiBjb250ZXh0O1xufVxuXG4vKiogUmVuZGVyIHRoZSBjYXB0aW9uIGZvciB0aGUgZGlzcGxheWVkIG1vbnRoLiBUaGlzIGNvbXBvbmVudCBpcyB1c2VkIHdoZW4gYGNhcHRpb25MYXlvdXQ9XCJidXR0b25zXCJgLiAqL1xuZnVuY3Rpb24gQ2FwdGlvbkxhYmVsKHByb3BzKSB7XG4gICAgdmFyIF9hID0gdXNlRGF5UGlja2VyKCksIGxvY2FsZSA9IF9hLmxvY2FsZSwgY2xhc3NOYW1lcyA9IF9hLmNsYXNzTmFtZXMsIHN0eWxlcyA9IF9hLnN0eWxlcywgZm9ybWF0Q2FwdGlvbiA9IF9hLmZvcm1hdHRlcnMuZm9ybWF0Q2FwdGlvbjtcbiAgICByZXR1cm4gKGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChcImRpdlwiLCB7IGNsYXNzTmFtZTogY2xhc3NOYW1lcy5jYXB0aW9uX2xhYmVsLCBzdHlsZTogc3R5bGVzLmNhcHRpb25fbGFiZWwsIFwiYXJpYS1saXZlXCI6IFwicG9saXRlXCIsIHJvbGU6IFwicHJlc2VudGF0aW9uXCIsIGlkOiBwcm9wcy5pZCwgY2hpbGRyZW46IGZvcm1hdENhcHRpb24ocHJvcHMuZGlzcGxheU1vbnRoLCB7IGxvY2FsZTogbG9jYWxlIH0pIH0pKTtcbn1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIGljb24gaW4gdGhlIHN0eWxlZCBkcm9wLWRvd24uXG4gKi9cbmZ1bmN0aW9uIEljb25Ecm9wZG93bihwcm9wcykge1xuICAgIHJldHVybiAoanN4UnVudGltZUV4cG9ydHMuanN4KFwic3ZnXCIsIF9fYXNzaWduKHsgd2lkdGg6IFwiOHB4XCIsIGhlaWdodDogXCI4cHhcIiwgdmlld0JveDogXCIwIDAgMTIwIDEyMFwiLCBcImRhdGEtdGVzdGlkXCI6IFwiaWNvbkRyb3Bkb3duXCIgfSwgcHJvcHMsIHsgY2hpbGRyZW46IGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChcInBhdGhcIiwgeyBkOiBcIk00LjIyMTgyNTQxLDQ4LjIyMTgyNTQgQzguNDQyMjI4MjgsNDQuMDAxNDIyNSAxNS4yMzg4NDk0LDQzLjkyNzM4MDQgMTkuNTQ5NjQ1OSw0Ny45OTk2OTg5IEwxOS43NzgxNzQ2LDQ4LjIyMTgyNTQgTDYwLDg4LjQ0MyBMMTAwLjIyMTgyNSw0OC4yMjE4MjU0IEMxMDQuNDQyMjI4LDQ0LjAwMTQyMjUgMTExLjIzODg0OSw0My45MjczODA0IDExNS41NDk2NDYsNDcuOTk5Njk4OSBMMTE1Ljc3ODE3NSw0OC4yMjE4MjU0IEMxMTkuOTk4NTc3LDUyLjQ0MjIyODMgMTIwLjA3MjYyLDU5LjIzODg0OTQgMTE2LjAwMDMwMSw2My41NDk2NDU5IEwxMTUuNzc4MTc1LDYzLjc3ODE3NDYgTDY3Ljc3ODE3NDYsMTExLjc3ODE3NSBDNjMuNTU3NzcxNywxMTUuOTk4NTc3IDU2Ljc2MTE1MDYsMTE2LjA3MjYyIDUyLjQ1MDM1NDEsMTEyLjAwMDMwMSBMNTIuMjIxODI1NCwxMTEuNzc4MTc1IEw0LjIyMTgyNTQxLDYzLjc3ODE3NDYgQy0wLjA3Mzk0MTgwMjMsNTkuNDgyNDA3NCAtMC4wNzM5NDE4MDIzLDUyLjUxNzU5MjYgNC4yMjE4MjU0MSw0OC4yMjE4MjU0IFpcIiwgZmlsbDogXCJjdXJyZW50Q29sb3JcIiwgZmlsbFJ1bGU6IFwibm9uemVyb1wiIH0pIH0pKSk7XG59XG5cbi8qKlxuICogUmVuZGVyIGEgc3R5bGVkIHNlbGVjdCBjb21wb25lbnQg4oCTIGRpc3BsYXlpbmcgYSBjYXB0aW9uIGFuZCBhIGN1c3RvbVxuICogZHJvcC1kb3duIGljb24uXG4gKi9cbmZ1bmN0aW9uIERyb3Bkb3duKHByb3BzKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICB2YXIgb25DaGFuZ2UgPSBwcm9wcy5vbkNoYW5nZSwgdmFsdWUgPSBwcm9wcy52YWx1ZSwgY2hpbGRyZW4gPSBwcm9wcy5jaGlsZHJlbiwgY2FwdGlvbiA9IHByb3BzLmNhcHRpb24sIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSwgc3R5bGUgPSBwcm9wcy5zdHlsZTtcbiAgICB2YXIgZGF5UGlja2VyID0gdXNlRGF5UGlja2VyKCk7XG4gICAgdmFyIEljb25Ecm9wZG93bkNvbXBvbmVudCA9IChfYiA9IChfYSA9IGRheVBpY2tlci5jb21wb25lbnRzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuSWNvbkRyb3Bkb3duKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBJY29uRHJvcGRvd247XG4gICAgcmV0dXJuIChqc3hSdW50aW1lRXhwb3J0cy5qc3hzKFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBjbGFzc05hbWUsIHN0eWxlOiBzdHlsZSwgY2hpbGRyZW46IFtqc3hSdW50aW1lRXhwb3J0cy5qc3goXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBkYXlQaWNrZXIuY2xhc3NOYW1lcy52aGlkZGVuLCBjaGlsZHJlbjogcHJvcHNbJ2FyaWEtbGFiZWwnXSB9KSwganN4UnVudGltZUV4cG9ydHMuanN4KFwic2VsZWN0XCIsIHsgbmFtZTogcHJvcHMubmFtZSwgXCJhcmlhLWxhYmVsXCI6IHByb3BzWydhcmlhLWxhYmVsJ10sIGNsYXNzTmFtZTogZGF5UGlja2VyLmNsYXNzTmFtZXMuZHJvcGRvd24sIHN0eWxlOiBkYXlQaWNrZXIuc3R5bGVzLmRyb3Bkb3duLCB2YWx1ZTogdmFsdWUsIG9uQ2hhbmdlOiBvbkNoYW5nZSwgY2hpbGRyZW46IGNoaWxkcmVuIH0pLCBqc3hSdW50aW1lRXhwb3J0cy5qc3hzKFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBkYXlQaWNrZXIuY2xhc3NOYW1lcy5jYXB0aW9uX2xhYmVsLCBzdHlsZTogZGF5UGlja2VyLnN0eWxlcy5jYXB0aW9uX2xhYmVsLCBcImFyaWEtaGlkZGVuXCI6IFwidHJ1ZVwiLCBjaGlsZHJlbjogW2NhcHRpb24sIGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChJY29uRHJvcGRvd25Db21wb25lbnQsIHsgY2xhc3NOYW1lOiBkYXlQaWNrZXIuY2xhc3NOYW1lcy5kcm9wZG93bl9pY29uLCBzdHlsZTogZGF5UGlja2VyLnN0eWxlcy5kcm9wZG93bl9pY29uIH0pXSB9KV0gfSkpO1xufVxuXG4vKiogUmVuZGVyIHRoZSBkcm9wZG93biB0byBuYXZpZ2F0ZSBiZXR3ZWVuIG1vbnRocy4gKi9cbmZ1bmN0aW9uIE1vbnRoc0Ryb3Bkb3duKHByb3BzKSB7XG4gICAgdmFyIF9hO1xuICAgIHZhciBfYiA9IHVzZURheVBpY2tlcigpLCBmcm9tRGF0ZSA9IF9iLmZyb21EYXRlLCB0b0RhdGUgPSBfYi50b0RhdGUsIHN0eWxlcyA9IF9iLnN0eWxlcywgbG9jYWxlID0gX2IubG9jYWxlLCBmb3JtYXRNb250aENhcHRpb24gPSBfYi5mb3JtYXR0ZXJzLmZvcm1hdE1vbnRoQ2FwdGlvbiwgY2xhc3NOYW1lcyA9IF9iLmNsYXNzTmFtZXMsIGNvbXBvbmVudHMgPSBfYi5jb21wb25lbnRzLCBsYWJlbE1vbnRoRHJvcGRvd24gPSBfYi5sYWJlbHMubGFiZWxNb250aERyb3Bkb3duO1xuICAgIC8vIERyb3Bkb3duIHNob3VsZCBhcHBlYXIgb25seSB3aGVuIGJvdGggZnJvbS90b0RhdGUgaXMgc2V0XG4gICAgaWYgKCFmcm9tRGF0ZSlcbiAgICAgICAgcmV0dXJuIGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChqc3hSdW50aW1lRXhwb3J0cy5GcmFnbWVudCwge30pO1xuICAgIGlmICghdG9EYXRlKVxuICAgICAgICByZXR1cm4ganN4UnVudGltZUV4cG9ydHMuanN4KGpzeFJ1bnRpbWVFeHBvcnRzLkZyYWdtZW50LCB7fSk7XG4gICAgdmFyIGRyb3Bkb3duTW9udGhzID0gW107XG4gICAgaWYgKGlzU2FtZVllYXIoZnJvbURhdGUsIHRvRGF0ZSkpIHtcbiAgICAgICAgLy8gb25seSBkaXNwbGF5IHRoZSBtb250aHMgaW5jbHVkZWQgaW4gdGhlIHJhbmdlXG4gICAgICAgIHZhciBkYXRlID0gc3RhcnRPZk1vbnRoKGZyb21EYXRlKTtcbiAgICAgICAgZm9yICh2YXIgbW9udGggPSBmcm9tRGF0ZS5nZXRNb250aCgpOyBtb250aCA8PSB0b0RhdGUuZ2V0TW9udGgoKTsgbW9udGgrKykge1xuICAgICAgICAgICAgZHJvcGRvd25Nb250aHMucHVzaChzZXRNb250aChkYXRlLCBtb250aCkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAvLyBkaXNwbGF5IGFsbCB0aGUgMTIgbW9udGhzXG4gICAgICAgIHZhciBkYXRlID0gc3RhcnRPZk1vbnRoKG5ldyBEYXRlKCkpOyAvLyBBbnkgZGF0ZSBzaG91bGQgYmUgT0ssIGFzIHdlIGp1c3QgbmVlZCB0aGUgeWVhclxuICAgICAgICBmb3IgKHZhciBtb250aCA9IDA7IG1vbnRoIDw9IDExOyBtb250aCsrKSB7XG4gICAgICAgICAgICBkcm9wZG93bk1vbnRocy5wdXNoKHNldE1vbnRoKGRhdGUsIG1vbnRoKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdmFyIGhhbmRsZUNoYW5nZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHZhciBzZWxlY3RlZE1vbnRoID0gTnVtYmVyKGUudGFyZ2V0LnZhbHVlKTtcbiAgICAgICAgdmFyIG5ld01vbnRoID0gc2V0TW9udGgoc3RhcnRPZk1vbnRoKHByb3BzLmRpc3BsYXlNb250aCksIHNlbGVjdGVkTW9udGgpO1xuICAgICAgICBwcm9wcy5vbkNoYW5nZShuZXdNb250aCk7XG4gICAgfTtcbiAgICB2YXIgRHJvcGRvd25Db21wb25lbnQgPSAoX2EgPSBjb21wb25lbnRzID09PSBudWxsIHx8IGNvbXBvbmVudHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbXBvbmVudHMuRHJvcGRvd24pICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IERyb3Bkb3duO1xuICAgIHJldHVybiAoanN4UnVudGltZUV4cG9ydHMuanN4KERyb3Bkb3duQ29tcG9uZW50LCB7IG5hbWU6IFwibW9udGhzXCIsIFwiYXJpYS1sYWJlbFwiOiBsYWJlbE1vbnRoRHJvcGRvd24oKSwgY2xhc3NOYW1lOiBjbGFzc05hbWVzLmRyb3Bkb3duX21vbnRoLCBzdHlsZTogc3R5bGVzLmRyb3Bkb3duX21vbnRoLCBvbkNoYW5nZTogaGFuZGxlQ2hhbmdlLCB2YWx1ZTogcHJvcHMuZGlzcGxheU1vbnRoLmdldE1vbnRoKCksIGNhcHRpb246IGZvcm1hdE1vbnRoQ2FwdGlvbihwcm9wcy5kaXNwbGF5TW9udGgsIHsgbG9jYWxlOiBsb2NhbGUgfSksIGNoaWxkcmVuOiBkcm9wZG93bk1vbnRocy5tYXAoZnVuY3Rpb24gKG0pIHsgcmV0dXJuIChqc3hSdW50aW1lRXhwb3J0cy5qc3goXCJvcHRpb25cIiwgeyB2YWx1ZTogbS5nZXRNb250aCgpLCBjaGlsZHJlbjogZm9ybWF0TW9udGhDYXB0aW9uKG0sIHsgbG9jYWxlOiBsb2NhbGUgfSkgfSwgbS5nZXRNb250aCgpKSk7IH0pIH0pKTtcbn1cblxuLyoqXG4gKiBSZW5kZXIgYSBkcm9wZG93biB0byBjaGFuZ2UgdGhlIHllYXIuIFRha2UgaW4gYWNjb3VudCB0aGUgYG5hdi5mcm9tRGF0ZWAgYW5kXG4gKiBgdG9EYXRlYCBmcm9tIGNvbnRleHQuXG4gKi9cbmZ1bmN0aW9uIFllYXJzRHJvcGRvd24ocHJvcHMpIHtcbiAgICB2YXIgX2E7XG4gICAgdmFyIGRpc3BsYXlNb250aCA9IHByb3BzLmRpc3BsYXlNb250aDtcbiAgICB2YXIgX2IgPSB1c2VEYXlQaWNrZXIoKSwgZnJvbURhdGUgPSBfYi5mcm9tRGF0ZSwgdG9EYXRlID0gX2IudG9EYXRlLCBsb2NhbGUgPSBfYi5sb2NhbGUsIHN0eWxlcyA9IF9iLnN0eWxlcywgY2xhc3NOYW1lcyA9IF9iLmNsYXNzTmFtZXMsIGNvbXBvbmVudHMgPSBfYi5jb21wb25lbnRzLCBmb3JtYXRZZWFyQ2FwdGlvbiA9IF9iLmZvcm1hdHRlcnMuZm9ybWF0WWVhckNhcHRpb24sIGxhYmVsWWVhckRyb3Bkb3duID0gX2IubGFiZWxzLmxhYmVsWWVhckRyb3Bkb3duO1xuICAgIHZhciB5ZWFycyA9IFtdO1xuICAgIC8vIERyb3Bkb3duIHNob3VsZCBhcHBlYXIgb25seSB3aGVuIGJvdGggZnJvbS90b0RhdGUgaXMgc2V0XG4gICAgaWYgKCFmcm9tRGF0ZSlcbiAgICAgICAgcmV0dXJuIGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChqc3hSdW50aW1lRXhwb3J0cy5GcmFnbWVudCwge30pO1xuICAgIGlmICghdG9EYXRlKVxuICAgICAgICByZXR1cm4ganN4UnVudGltZUV4cG9ydHMuanN4KGpzeFJ1bnRpbWVFeHBvcnRzLkZyYWdtZW50LCB7fSk7XG4gICAgdmFyIGZyb21ZZWFyID0gZnJvbURhdGUuZ2V0RnVsbFllYXIoKTtcbiAgICB2YXIgdG9ZZWFyID0gdG9EYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgZm9yICh2YXIgeWVhciA9IGZyb21ZZWFyOyB5ZWFyIDw9IHRvWWVhcjsgeWVhcisrKSB7XG4gICAgICAgIHllYXJzLnB1c2goc2V0WWVhcihzdGFydE9mWWVhcihuZXcgRGF0ZSgpKSwgeWVhcikpO1xuICAgIH1cbiAgICB2YXIgaGFuZGxlQ2hhbmdlID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgdmFyIG5ld01vbnRoID0gc2V0WWVhcihzdGFydE9mTW9udGgoZGlzcGxheU1vbnRoKSwgTnVtYmVyKGUudGFyZ2V0LnZhbHVlKSk7XG4gICAgICAgIHByb3BzLm9uQ2hhbmdlKG5ld01vbnRoKTtcbiAgICB9O1xuICAgIHZhciBEcm9wZG93bkNvbXBvbmVudCA9IChfYSA9IGNvbXBvbmVudHMgPT09IG51bGwgfHwgY29tcG9uZW50cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29tcG9uZW50cy5Ecm9wZG93bikgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogRHJvcGRvd247XG4gICAgcmV0dXJuIChqc3hSdW50aW1lRXhwb3J0cy5qc3goRHJvcGRvd25Db21wb25lbnQsIHsgbmFtZTogXCJ5ZWFyc1wiLCBcImFyaWEtbGFiZWxcIjogbGFiZWxZZWFyRHJvcGRvd24oKSwgY2xhc3NOYW1lOiBjbGFzc05hbWVzLmRyb3Bkb3duX3llYXIsIHN0eWxlOiBzdHlsZXMuZHJvcGRvd25feWVhciwgb25DaGFuZ2U6IGhhbmRsZUNoYW5nZSwgdmFsdWU6IGRpc3BsYXlNb250aC5nZXRGdWxsWWVhcigpLCBjYXB0aW9uOiBmb3JtYXRZZWFyQ2FwdGlvbihkaXNwbGF5TW9udGgsIHsgbG9jYWxlOiBsb2NhbGUgfSksIGNoaWxkcmVuOiB5ZWFycy5tYXAoZnVuY3Rpb24gKHllYXIpIHsgcmV0dXJuIChqc3hSdW50aW1lRXhwb3J0cy5qc3goXCJvcHRpb25cIiwgeyB2YWx1ZTogeWVhci5nZXRGdWxsWWVhcigpLCBjaGlsZHJlbjogZm9ybWF0WWVhckNhcHRpb24oeWVhciwgeyBsb2NhbGU6IGxvY2FsZSB9KSB9LCB5ZWFyLmdldEZ1bGxZZWFyKCkpKTsgfSkgfSkpO1xufVxuXG4vKipcbiAqIEhlbHBlciBob29rIGZvciB1c2luZyBjb250cm9sbGVkL3VuY29udHJvbGxlZCB2YWx1ZXMgZnJvbSBhIGNvbXBvbmVudCBwcm9wcy5cbiAqXG4gKiBXaGVuIHRoZSB2YWx1ZSBpcyBub3QgY29udHJvbGxlZCwgcGFzcyBgdW5kZWZpbmVkYCBhcyBgY29udHJvbGxlZFZhbHVlYCBhbmRcbiAqIHVzZSB0aGUgcmV0dXJuZWQgc2V0dGVyIHRvIHVwZGF0ZSBpdC5cbiAqXG4gKiBXaGVuIHRoZSB2YWx1ZSBpcyBjb250cm9sbGVkLCBwYXNzIHRoZSBjb250cm9sbGVkIHZhbHVlIGFzIHNlY29uZFxuICogYXJndW1lbnQsIHdoaWNoIHdpbGwgYmUgYWx3YXlzIHJldHVybmVkIGFzIGB2YWx1ZWAuXG4gKi9cbmZ1bmN0aW9uIHVzZUNvbnRyb2xsZWRWYWx1ZShkZWZhdWx0VmFsdWUsIGNvbnRyb2xsZWRWYWx1ZSkge1xuICAgIHZhciBfYSA9IHVzZVN0YXRlKGRlZmF1bHRWYWx1ZSksIHVuY29udHJvbGxlZFZhbHVlID0gX2FbMF0sIHNldFZhbHVlID0gX2FbMV07XG4gICAgdmFyIHZhbHVlID0gY29udHJvbGxlZFZhbHVlID09PSB1bmRlZmluZWQgPyB1bmNvbnRyb2xsZWRWYWx1ZSA6IGNvbnRyb2xsZWRWYWx1ZTtcbiAgICByZXR1cm4gW3ZhbHVlLCBzZXRWYWx1ZV07XG59XG5cbi8qKiBSZXR1cm4gdGhlIGluaXRpYWwgbW9udGggYWNjb3JkaW5nIHRvIHRoZSBnaXZlbiBvcHRpb25zLiAqL1xuZnVuY3Rpb24gZ2V0SW5pdGlhbE1vbnRoKGNvbnRleHQpIHtcbiAgICB2YXIgbW9udGggPSBjb250ZXh0Lm1vbnRoLCBkZWZhdWx0TW9udGggPSBjb250ZXh0LmRlZmF1bHRNb250aCwgdG9kYXkgPSBjb250ZXh0LnRvZGF5O1xuICAgIHZhciBpbml0aWFsTW9udGggPSBtb250aCB8fCBkZWZhdWx0TW9udGggfHwgdG9kYXkgfHwgbmV3IERhdGUoKTtcbiAgICB2YXIgdG9EYXRlID0gY29udGV4dC50b0RhdGUsIGZyb21EYXRlID0gY29udGV4dC5mcm9tRGF0ZSwgX2EgPSBjb250ZXh0Lm51bWJlck9mTW9udGhzLCBudW1iZXJPZk1vbnRocyA9IF9hID09PSB2b2lkIDAgPyAxIDogX2E7XG4gICAgLy8gRml4IHRoZSBpbml0aWFsTW9udGggaWYgaXMgYWZ0ZXIgdGhlIHRvLWRhdGVcbiAgICBpZiAodG9EYXRlICYmIGRpZmZlcmVuY2VJbkNhbGVuZGFyTW9udGhzKHRvRGF0ZSwgaW5pdGlhbE1vbnRoKSA8IDApIHtcbiAgICAgICAgdmFyIG9mZnNldCA9IC0xICogKG51bWJlck9mTW9udGhzIC0gMSk7XG4gICAgICAgIGluaXRpYWxNb250aCA9IGFkZE1vbnRocyh0b0RhdGUsIG9mZnNldCk7XG4gICAgfVxuICAgIC8vIEZpeCB0aGUgaW5pdGlhbE1vbnRoIGlmIGlzIGJlZm9yZSB0aGUgZnJvbS1kYXRlXG4gICAgaWYgKGZyb21EYXRlICYmIGRpZmZlcmVuY2VJbkNhbGVuZGFyTW9udGhzKGluaXRpYWxNb250aCwgZnJvbURhdGUpIDwgMCkge1xuICAgICAgICBpbml0aWFsTW9udGggPSBmcm9tRGF0ZTtcbiAgICB9XG4gICAgcmV0dXJuIHN0YXJ0T2ZNb250aChpbml0aWFsTW9udGgpO1xufVxuXG4vKiogQ29udHJvbHMgdGhlIG5hdmlnYXRpb24gc3RhdGUuICovXG5mdW5jdGlvbiB1c2VOYXZpZ2F0aW9uU3RhdGUoKSB7XG4gICAgdmFyIGNvbnRleHQgPSB1c2VEYXlQaWNrZXIoKTtcbiAgICB2YXIgaW5pdGlhbE1vbnRoID0gZ2V0SW5pdGlhbE1vbnRoKGNvbnRleHQpO1xuICAgIHZhciBfYSA9IHVzZUNvbnRyb2xsZWRWYWx1ZShpbml0aWFsTW9udGgsIGNvbnRleHQubW9udGgpLCBtb250aCA9IF9hWzBdLCBzZXRNb250aCA9IF9hWzFdO1xuICAgIHZhciBnb1RvTW9udGggPSBmdW5jdGlvbiAoZGF0ZSkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGlmIChjb250ZXh0LmRpc2FibGVOYXZpZ2F0aW9uKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB2YXIgbW9udGggPSBzdGFydE9mTW9udGgoZGF0ZSk7XG4gICAgICAgIHNldE1vbnRoKG1vbnRoKTtcbiAgICAgICAgKF9hID0gY29udGV4dC5vbk1vbnRoQ2hhbmdlKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FsbChjb250ZXh0LCBtb250aCk7XG4gICAgfTtcbiAgICByZXR1cm4gW21vbnRoLCBnb1RvTW9udGhdO1xufVxuXG4vKipcbiAqIFJldHVybiB0aGUgbW9udGhzIHRvIGRpc3BsYXkgaW4gdGhlIGNvbXBvbmVudCBhY2NvcmRpbmcgdG8gdGhlIG51bWJlciBvZlxuICogbW9udGhzIGFuZCB0aGUgZnJvbS90byBkYXRlLlxuICovXG5mdW5jdGlvbiBnZXREaXNwbGF5TW9udGhzKG1vbnRoLCBfYSkge1xuICAgIHZhciByZXZlcnNlTW9udGhzID0gX2EucmV2ZXJzZU1vbnRocywgbnVtYmVyT2ZNb250aHMgPSBfYS5udW1iZXJPZk1vbnRocztcbiAgICB2YXIgc3RhcnQgPSBzdGFydE9mTW9udGgobW9udGgpO1xuICAgIHZhciBlbmQgPSBzdGFydE9mTW9udGgoYWRkTW9udGhzKHN0YXJ0LCBudW1iZXJPZk1vbnRocykpO1xuICAgIHZhciBtb250aHNEaWZmID0gZGlmZmVyZW5jZUluQ2FsZW5kYXJNb250aHMoZW5kLCBzdGFydCk7XG4gICAgdmFyIG1vbnRocyA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbW9udGhzRGlmZjsgaSsrKSB7XG4gICAgICAgIHZhciBuZXh0TW9udGggPSBhZGRNb250aHMoc3RhcnQsIGkpO1xuICAgICAgICBtb250aHMucHVzaChuZXh0TW9udGgpO1xuICAgIH1cbiAgICBpZiAocmV2ZXJzZU1vbnRocylcbiAgICAgICAgbW9udGhzID0gbW9udGhzLnJldmVyc2UoKTtcbiAgICByZXR1cm4gbW9udGhzO1xufVxuXG4vKipcbiAqIFJldHVybnMgdGhlIG5leHQgbW9udGggdGhlIHVzZXIgY2FuIG5hdmlnYXRlIHRvIGFjY29yZGluZyB0byB0aGUgZ2l2ZW5cbiAqIG9wdGlvbnMuXG4gKlxuICogUGxlYXNlIG5vdGUgdGhhdCB0aGUgbmV4dCBtb250aCBpcyBub3QgYWx3YXlzIHRoZSBuZXh0IGNhbGVuZGFyIG1vbnRoOlxuICpcbiAqIC0gaWYgYWZ0ZXIgdGhlIGB0b0RhdGVgIHJhbmdlLCBpcyB1bmRlZmluZWQ7XG4gKiAtIGlmIHRoZSBuYXZpZ2F0aW9uIGlzIHBhZ2VkLCBpcyB0aGUgbnVtYmVyIG9mIG1vbnRocyBkaXNwbGF5ZWQgYWhlYWQuXG4gKlxuICovXG5mdW5jdGlvbiBnZXROZXh0TW9udGgoc3RhcnRpbmdNb250aCwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zLmRpc2FibGVOYXZpZ2F0aW9uKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHZhciB0b0RhdGUgPSBvcHRpb25zLnRvRGF0ZSwgcGFnZWROYXZpZ2F0aW9uID0gb3B0aW9ucy5wYWdlZE5hdmlnYXRpb24sIF9hID0gb3B0aW9ucy5udW1iZXJPZk1vbnRocywgbnVtYmVyT2ZNb250aHMgPSBfYSA9PT0gdm9pZCAwID8gMSA6IF9hO1xuICAgIHZhciBvZmZzZXQgPSBwYWdlZE5hdmlnYXRpb24gPyBudW1iZXJPZk1vbnRocyA6IDE7XG4gICAgdmFyIG1vbnRoID0gc3RhcnRPZk1vbnRoKHN0YXJ0aW5nTW9udGgpO1xuICAgIGlmICghdG9EYXRlKSB7XG4gICAgICAgIHJldHVybiBhZGRNb250aHMobW9udGgsIG9mZnNldCk7XG4gICAgfVxuICAgIHZhciBtb250aHNEaWZmID0gZGlmZmVyZW5jZUluQ2FsZW5kYXJNb250aHModG9EYXRlLCBzdGFydGluZ01vbnRoKTtcbiAgICBpZiAobW9udGhzRGlmZiA8IG51bWJlck9mTW9udGhzKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIC8vIEp1bXAgZm9yd2FyZCBhcyB0aGUgbnVtYmVyIG9mIG1vbnRocyB3aGVuIHBhZ2VkIG5hdmlnYXRpb25cbiAgICByZXR1cm4gYWRkTW9udGhzKG1vbnRoLCBvZmZzZXQpO1xufVxuXG4vKipcbiAqIFJldHVybnMgdGhlIG5leHQgcHJldmlvdXMgdGhlIHVzZXIgY2FuIG5hdmlnYXRlIHRvLCBhY2NvcmRpbmcgdG8gdGhlIGdpdmVuXG4gKiBvcHRpb25zLlxuICpcbiAqIFBsZWFzZSBub3RlIHRoYXQgdGhlIHByZXZpb3VzIG1vbnRoIGlzIG5vdCBhbHdheXMgdGhlIHByZXZpb3VzIGNhbGVuZGFyXG4gKiBtb250aDpcbiAqXG4gKiAtIGlmIGJlZm9yZSB0aGUgYGZyb21EYXRlYCBkYXRlLCBpcyBgdW5kZWZpbmVkYDtcbiAqIC0gaWYgdGhlIG5hdmlnYXRpb24gaXMgcGFnZWQsIGlzIHRoZSBudW1iZXIgb2YgbW9udGhzIGRpc3BsYXllZCBiZWZvcmUuXG4gKlxuICovXG5mdW5jdGlvbiBnZXRQcmV2aW91c01vbnRoKHN0YXJ0aW5nTW9udGgsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucy5kaXNhYmxlTmF2aWdhdGlvbikge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICB2YXIgZnJvbURhdGUgPSBvcHRpb25zLmZyb21EYXRlLCBwYWdlZE5hdmlnYXRpb24gPSBvcHRpb25zLnBhZ2VkTmF2aWdhdGlvbiwgX2EgPSBvcHRpb25zLm51bWJlck9mTW9udGhzLCBudW1iZXJPZk1vbnRocyA9IF9hID09PSB2b2lkIDAgPyAxIDogX2E7XG4gICAgdmFyIG9mZnNldCA9IHBhZ2VkTmF2aWdhdGlvbiA/IG51bWJlck9mTW9udGhzIDogMTtcbiAgICB2YXIgbW9udGggPSBzdGFydE9mTW9udGgoc3RhcnRpbmdNb250aCk7XG4gICAgaWYgKCFmcm9tRGF0ZSkge1xuICAgICAgICByZXR1cm4gYWRkTW9udGhzKG1vbnRoLCAtb2Zmc2V0KTtcbiAgICB9XG4gICAgdmFyIG1vbnRoc0RpZmYgPSBkaWZmZXJlbmNlSW5DYWxlbmRhck1vbnRocyhtb250aCwgZnJvbURhdGUpO1xuICAgIGlmIChtb250aHNEaWZmIDw9IDApIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgLy8gSnVtcCBiYWNrIGFzIHRoZSBudW1iZXIgb2YgbW9udGhzIHdoZW4gcGFnZWQgbmF2aWdhdGlvblxuICAgIHJldHVybiBhZGRNb250aHMobW9udGgsIC1vZmZzZXQpO1xufVxuXG4vKipcbiAqIFRoZSBOYXZpZ2F0aW9uIGNvbnRleHQgc2hhcmVzIGRldGFpbHMgYW5kIG1ldGhvZHMgdG8gbmF2aWdhdGUgdGhlIG1vbnRocyBpbiBEYXlQaWNrZXIuXG4gKiBBY2Nlc3MgdGhpcyBjb250ZXh0IGZyb20gdGhlIHtAbGluayB1c2VOYXZpZ2F0aW9ufSBob29rLlxuICovXG52YXIgTmF2aWdhdGlvbkNvbnRleHQgPSBjcmVhdGVDb250ZXh0KHVuZGVmaW5lZCk7XG4vKiogUHJvdmlkZXMgdGhlIHZhbHVlcyBmb3IgdGhlIHtAbGluayBOYXZpZ2F0aW9uQ29udGV4dH0uICovXG5mdW5jdGlvbiBOYXZpZ2F0aW9uUHJvdmlkZXIocHJvcHMpIHtcbiAgICB2YXIgZGF5UGlja2VyID0gdXNlRGF5UGlja2VyKCk7XG4gICAgdmFyIF9hID0gdXNlTmF2aWdhdGlvblN0YXRlKCksIGN1cnJlbnRNb250aCA9IF9hWzBdLCBnb1RvTW9udGggPSBfYVsxXTtcbiAgICB2YXIgZGlzcGxheU1vbnRocyA9IGdldERpc3BsYXlNb250aHMoY3VycmVudE1vbnRoLCBkYXlQaWNrZXIpO1xuICAgIHZhciBuZXh0TW9udGggPSBnZXROZXh0TW9udGgoY3VycmVudE1vbnRoLCBkYXlQaWNrZXIpO1xuICAgIHZhciBwcmV2aW91c01vbnRoID0gZ2V0UHJldmlvdXNNb250aChjdXJyZW50TW9udGgsIGRheVBpY2tlcik7XG4gICAgdmFyIGlzRGF0ZURpc3BsYXllZCA9IGZ1bmN0aW9uIChkYXRlKSB7XG4gICAgICAgIHJldHVybiBkaXNwbGF5TW9udGhzLnNvbWUoZnVuY3Rpb24gKGRpc3BsYXlNb250aCkge1xuICAgICAgICAgICAgcmV0dXJuIGlzU2FtZU1vbnRoKGRhdGUsIGRpc3BsYXlNb250aCk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgdmFyIGdvVG9EYXRlID0gZnVuY3Rpb24gKGRhdGUsIHJlZkRhdGUpIHtcbiAgICAgICAgaWYgKGlzRGF0ZURpc3BsYXllZChkYXRlKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyZWZEYXRlICYmIGlzQmVmb3JlKGRhdGUsIHJlZkRhdGUpKSB7XG4gICAgICAgICAgICBnb1RvTW9udGgoYWRkTW9udGhzKGRhdGUsIDEgKyBkYXlQaWNrZXIubnVtYmVyT2ZNb250aHMgKiAtMSkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZ29Ub01vbnRoKGRhdGUpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICB2YXIgdmFsdWUgPSB7XG4gICAgICAgIGN1cnJlbnRNb250aDogY3VycmVudE1vbnRoLFxuICAgICAgICBkaXNwbGF5TW9udGhzOiBkaXNwbGF5TW9udGhzLFxuICAgICAgICBnb1RvTW9udGg6IGdvVG9Nb250aCxcbiAgICAgICAgZ29Ub0RhdGU6IGdvVG9EYXRlLFxuICAgICAgICBwcmV2aW91c01vbnRoOiBwcmV2aW91c01vbnRoLFxuICAgICAgICBuZXh0TW9udGg6IG5leHRNb250aCxcbiAgICAgICAgaXNEYXRlRGlzcGxheWVkOiBpc0RhdGVEaXNwbGF5ZWRcbiAgICB9O1xuICAgIHJldHVybiAoanN4UnVudGltZUV4cG9ydHMuanN4KE5hdmlnYXRpb25Db250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiB2YWx1ZSwgY2hpbGRyZW46IHByb3BzLmNoaWxkcmVuIH0pKTtcbn1cbi8qKlxuICogSG9vayB0byBhY2Nlc3MgdGhlIHtAbGluayBOYXZpZ2F0aW9uQ29udGV4dFZhbHVlfS4gVXNlIHRoaXMgaG9vayB0byBuYXZpZ2F0ZVxuICogYmV0d2VlbiBtb250aHMgb3IgeWVhcnMgaW4gRGF5UGlja2VyLlxuICpcbiAqIFRoaXMgaG9vayBpcyBtZWFudCB0byBiZSB1c2VkIGluc2lkZSBpbnRlcm5hbCBvciBjdXN0b20gY29tcG9uZW50cy5cbiAqL1xuZnVuY3Rpb24gdXNlTmF2aWdhdGlvbigpIHtcbiAgICB2YXIgY29udGV4dCA9IHVzZUNvbnRleHQoTmF2aWdhdGlvbkNvbnRleHQpO1xuICAgIGlmICghY29udGV4dCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3VzZU5hdmlnYXRpb24gbXVzdCBiZSB1c2VkIHdpdGhpbiBhIE5hdmlnYXRpb25Qcm92aWRlcicpO1xuICAgIH1cbiAgICByZXR1cm4gY29udGV4dDtcbn1cblxuLyoqXG4gKiBSZW5kZXIgYSBjYXB0aW9uIHdpdGggdGhlIGRyb3Bkb3ducyB0byBuYXZpZ2F0ZSBiZXR3ZWVuIG1vbnRocyBhbmQgeWVhcnMuXG4gKi9cbmZ1bmN0aW9uIENhcHRpb25Ecm9wZG93bnMocHJvcHMpIHtcbiAgICB2YXIgX2E7XG4gICAgdmFyIF9iID0gdXNlRGF5UGlja2VyKCksIGNsYXNzTmFtZXMgPSBfYi5jbGFzc05hbWVzLCBzdHlsZXMgPSBfYi5zdHlsZXMsIGNvbXBvbmVudHMgPSBfYi5jb21wb25lbnRzO1xuICAgIHZhciBnb1RvTW9udGggPSB1c2VOYXZpZ2F0aW9uKCkuZ29Ub01vbnRoO1xuICAgIHZhciBoYW5kbGVNb250aENoYW5nZSA9IGZ1bmN0aW9uIChuZXdNb250aCkge1xuICAgICAgICBnb1RvTW9udGgoYWRkTW9udGhzKG5ld01vbnRoLCBwcm9wcy5kaXNwbGF5SW5kZXggPyAtcHJvcHMuZGlzcGxheUluZGV4IDogMCkpO1xuICAgIH07XG4gICAgdmFyIENhcHRpb25MYWJlbENvbXBvbmVudCA9IChfYSA9IGNvbXBvbmVudHMgPT09IG51bGwgfHwgY29tcG9uZW50cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29tcG9uZW50cy5DYXB0aW9uTGFiZWwpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IENhcHRpb25MYWJlbDtcbiAgICB2YXIgY2FwdGlvbkxhYmVsID0gKGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChDYXB0aW9uTGFiZWxDb21wb25lbnQsIHsgaWQ6IHByb3BzLmlkLCBkaXNwbGF5TW9udGg6IHByb3BzLmRpc3BsYXlNb250aCB9KSk7XG4gICAgcmV0dXJuIChqc3hSdW50aW1lRXhwb3J0cy5qc3hzKFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBjbGFzc05hbWVzLmNhcHRpb25fZHJvcGRvd25zLCBzdHlsZTogc3R5bGVzLmNhcHRpb25fZHJvcGRvd25zLCBjaGlsZHJlbjogW2pzeFJ1bnRpbWVFeHBvcnRzLmpzeChcImRpdlwiLCB7IGNsYXNzTmFtZTogY2xhc3NOYW1lcy52aGlkZGVuLCBjaGlsZHJlbjogY2FwdGlvbkxhYmVsIH0pLCBqc3hSdW50aW1lRXhwb3J0cy5qc3goTW9udGhzRHJvcGRvd24sIHsgb25DaGFuZ2U6IGhhbmRsZU1vbnRoQ2hhbmdlLCBkaXNwbGF5TW9udGg6IHByb3BzLmRpc3BsYXlNb250aCB9KSwganN4UnVudGltZUV4cG9ydHMuanN4KFllYXJzRHJvcGRvd24sIHsgb25DaGFuZ2U6IGhhbmRsZU1vbnRoQ2hhbmdlLCBkaXNwbGF5TW9udGg6IHByb3BzLmRpc3BsYXlNb250aCB9KV0gfSkpO1xufVxuXG4vKipcbiAqIFJlbmRlciB0aGUgXCJwcmV2aW91cyBtb250aFwiIGJ1dHRvbiBpbiB0aGUgbmF2aWdhdGlvbi5cbiAqL1xuZnVuY3Rpb24gSWNvbkxlZnQocHJvcHMpIHtcbiAgICByZXR1cm4gKGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChcInN2Z1wiLCBfX2Fzc2lnbih7IHdpZHRoOiBcIjE2cHhcIiwgaGVpZ2h0OiBcIjE2cHhcIiwgdmlld0JveDogXCIwIDAgMTIwIDEyMFwiIH0sIHByb3BzLCB7IGNoaWxkcmVuOiBqc3hSdW50aW1lRXhwb3J0cy5qc3goXCJwYXRoXCIsIHsgZDogXCJNNjkuNDkwMzMyLDMuMzQzMTQ1NzUgQzcyLjYxNDUyNjMsMC4yMTg5NTE0MTYgNzcuNjc5ODQ2MiwwLjIxODk1MTQxNiA4MC44MDQwNDA1LDMuMzQzMTQ1NzUgQzgzLjg2MTc2MjYsNi40MDA4Njc4NiA4My45MjY4MjA1LDExLjMxNzk5MzEgODAuOTk5MjE0MywxNC40NTQ4Mzg4IEw4MC44MDQwNDA1LDE0LjY1Njg1NDIgTDM1LjQ2MSw2MCBMODAuODA0MDQwNSwxMDUuMzQzMTQ2IEM4My44NjE3NjI2LDEwOC40MDA4NjggODMuOTI2ODIwNSwxMTMuMzE3OTkzIDgwLjk5OTIxNDMsMTE2LjQ1NDgzOSBMODAuODA0MDQwNSwxMTYuNjU2ODU0IEM3Ny43NDYzMTg0LDExOS43MTQ1NzYgNzIuODI5MTkzMSwxMTkuNzc5NjM0IDY5LjY5MjM0NzUsMTE2Ljg1MjAyOCBMNjkuNDkwMzMyLDExNi42NTY4NTQgTDE4LjQ5MDMzMiw2NS42NTY4NTQyIEMxNS40MzI2MDk5LDYyLjU5OTEzMjEgMTUuMzY3NTUyLDU3LjY4MjAwNjkgMTguMjk1MTU4Myw1NC41NDUxNjEyIEwxOC40OTAzMzIsNTQuMzQzMTQ1OCBMNjkuNDkwMzMyLDMuMzQzMTQ1NzUgWlwiLCBmaWxsOiBcImN1cnJlbnRDb2xvclwiLCBmaWxsUnVsZTogXCJub256ZXJvXCIgfSkgfSkpKTtcbn1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIFwibmV4dCBtb250aFwiIGJ1dHRvbiBpbiB0aGUgbmF2aWdhdGlvbi5cbiAqL1xuZnVuY3Rpb24gSWNvblJpZ2h0KHByb3BzKSB7XG4gICAgcmV0dXJuIChqc3hSdW50aW1lRXhwb3J0cy5qc3goXCJzdmdcIiwgX19hc3NpZ24oeyB3aWR0aDogXCIxNnB4XCIsIGhlaWdodDogXCIxNnB4XCIsIHZpZXdCb3g6IFwiMCAwIDEyMCAxMjBcIiB9LCBwcm9wcywgeyBjaGlsZHJlbjoganN4UnVudGltZUV4cG9ydHMuanN4KFwicGF0aFwiLCB7IGQ6IFwiTTQ5LjgwNDA0MDUsMy4zNDMxNDU3NSBDNDYuNjc5ODQ2MiwwLjIxODk1MTQxNiA0MS42MTQ1MjYzLDAuMjE4OTUxNDE2IDM4LjQ5MDMzMiwzLjM0MzE0NTc1IEMzNS40MzI2MDk5LDYuNDAwODY3ODYgMzUuMzY3NTUyLDExLjMxNzk5MzEgMzguMjk1MTU4MywxNC40NTQ4Mzg4IEwzOC40OTAzMzIsMTQuNjU2ODU0MiBMODMuODMzMzcyNSw2MCBMMzguNDkwMzMyLDEwNS4zNDMxNDYgQzM1LjQzMjYwOTksMTA4LjQwMDg2OCAzNS4zNjc1NTIsMTEzLjMxNzk5MyAzOC4yOTUxNTgzLDExNi40NTQ4MzkgTDM4LjQ5MDMzMiwxMTYuNjU2ODU0IEM0MS41NDgwNTQxLDExOS43MTQ1NzYgNDYuNDY1MTc5NCwxMTkuNzc5NjM0IDQ5LjYwMjAyNSwxMTYuODUyMDI4IEw0OS44MDQwNDA1LDExNi42NTY4NTQgTDEwMC44MDQwNDEsNjUuNjU2ODU0MiBDMTAzLjg2MTc2Myw2Mi41OTkxMzIxIDEwMy45MjY4MjEsNTcuNjgyMDA2OSAxMDAuOTk5MjE0LDU0LjU0NTE2MTIgTDEwMC44MDQwNDEsNTQuMzQzMTQ1OCBMNDkuODA0MDQwNSwzLjM0MzE0NTc1IFpcIiwgZmlsbDogXCJjdXJyZW50Q29sb3JcIiB9KSB9KSkpO1xufVxuXG4vKiogUmVuZGVyIGEgYnV0dG9uIEhUTUwgZWxlbWVudCBhcHBseWluZyB0aGUgcmVzZXQgY2xhc3MgbmFtZS4gKi9cbnZhciBCdXR0b24gPSBmb3J3YXJkUmVmKGZ1bmN0aW9uIChwcm9wcywgcmVmKSB7XG4gICAgdmFyIF9hID0gdXNlRGF5UGlja2VyKCksIGNsYXNzTmFtZXMgPSBfYS5jbGFzc05hbWVzLCBzdHlsZXMgPSBfYS5zdHlsZXM7XG4gICAgdmFyIGNsYXNzTmFtZXNBcnIgPSBbY2xhc3NOYW1lcy5idXR0b25fcmVzZXQsIGNsYXNzTmFtZXMuYnV0dG9uXTtcbiAgICBpZiAocHJvcHMuY2xhc3NOYW1lKSB7XG4gICAgICAgIGNsYXNzTmFtZXNBcnIucHVzaChwcm9wcy5jbGFzc05hbWUpO1xuICAgIH1cbiAgICB2YXIgY2xhc3NOYW1lID0gY2xhc3NOYW1lc0Fyci5qb2luKCcgJyk7XG4gICAgdmFyIHN0eWxlID0gX19hc3NpZ24oX19hc3NpZ24oe30sIHN0eWxlcy5idXR0b25fcmVzZXQpLCBzdHlsZXMuYnV0dG9uKTtcbiAgICBpZiAocHJvcHMuc3R5bGUpIHtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihzdHlsZSwgcHJvcHMuc3R5bGUpO1xuICAgIH1cbiAgICByZXR1cm4gKGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChcImJ1dHRvblwiLCBfX2Fzc2lnbih7fSwgcHJvcHMsIHsgcmVmOiByZWYsIHR5cGU6IFwiYnV0dG9uXCIsIGNsYXNzTmFtZTogY2xhc3NOYW1lLCBzdHlsZTogc3R5bGUgfSkpKTtcbn0pO1xuXG4vKiogQSBjb21wb25lbnQgcmVuZGVyaW5nIHRoZSBuYXZpZ2F0aW9uIGJ1dHRvbnMgb3IgdGhlIGRyb3AtZG93bnMuICovXG5mdW5jdGlvbiBOYXZpZ2F0aW9uKHByb3BzKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICB2YXIgX2MgPSB1c2VEYXlQaWNrZXIoKSwgZGlyID0gX2MuZGlyLCBsb2NhbGUgPSBfYy5sb2NhbGUsIGNsYXNzTmFtZXMgPSBfYy5jbGFzc05hbWVzLCBzdHlsZXMgPSBfYy5zdHlsZXMsIF9kID0gX2MubGFiZWxzLCBsYWJlbFByZXZpb3VzID0gX2QubGFiZWxQcmV2aW91cywgbGFiZWxOZXh0ID0gX2QubGFiZWxOZXh0LCBjb21wb25lbnRzID0gX2MuY29tcG9uZW50cztcbiAgICBpZiAoIXByb3BzLm5leHRNb250aCAmJiAhcHJvcHMucHJldmlvdXNNb250aCkge1xuICAgICAgICByZXR1cm4ganN4UnVudGltZUV4cG9ydHMuanN4KGpzeFJ1bnRpbWVFeHBvcnRzLkZyYWdtZW50LCB7fSk7XG4gICAgfVxuICAgIHZhciBwcmV2aW91c0xhYmVsID0gbGFiZWxQcmV2aW91cyhwcm9wcy5wcmV2aW91c01vbnRoLCB7IGxvY2FsZTogbG9jYWxlIH0pO1xuICAgIHZhciBwcmV2aW91c0NsYXNzTmFtZSA9IFtcbiAgICAgICAgY2xhc3NOYW1lcy5uYXZfYnV0dG9uLFxuICAgICAgICBjbGFzc05hbWVzLm5hdl9idXR0b25fcHJldmlvdXNcbiAgICBdLmpvaW4oJyAnKTtcbiAgICB2YXIgbmV4dExhYmVsID0gbGFiZWxOZXh0KHByb3BzLm5leHRNb250aCwgeyBsb2NhbGU6IGxvY2FsZSB9KTtcbiAgICB2YXIgbmV4dENsYXNzTmFtZSA9IFtcbiAgICAgICAgY2xhc3NOYW1lcy5uYXZfYnV0dG9uLFxuICAgICAgICBjbGFzc05hbWVzLm5hdl9idXR0b25fbmV4dFxuICAgIF0uam9pbignICcpO1xuICAgIHZhciBJY29uUmlnaHRDb21wb25lbnQgPSAoX2EgPSBjb21wb25lbnRzID09PSBudWxsIHx8IGNvbXBvbmVudHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbXBvbmVudHMuSWNvblJpZ2h0KSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBJY29uUmlnaHQ7XG4gICAgdmFyIEljb25MZWZ0Q29tcG9uZW50ID0gKF9iID0gY29tcG9uZW50cyA9PT0gbnVsbCB8fCBjb21wb25lbnRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb21wb25lbnRzLkljb25MZWZ0KSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBJY29uTGVmdDtcbiAgICByZXR1cm4gKGpzeFJ1bnRpbWVFeHBvcnRzLmpzeHMoXCJkaXZcIiwgeyBjbGFzc05hbWU6IGNsYXNzTmFtZXMubmF2LCBzdHlsZTogc3R5bGVzLm5hdiwgY2hpbGRyZW46IFshcHJvcHMuaGlkZVByZXZpb3VzICYmIChqc3hSdW50aW1lRXhwb3J0cy5qc3goQnV0dG9uLCB7IG5hbWU6IFwicHJldmlvdXMtbW9udGhcIiwgXCJhcmlhLWxhYmVsXCI6IHByZXZpb3VzTGFiZWwsIGNsYXNzTmFtZTogcHJldmlvdXNDbGFzc05hbWUsIHN0eWxlOiBzdHlsZXMubmF2X2J1dHRvbl9wcmV2aW91cywgZGlzYWJsZWQ6ICFwcm9wcy5wcmV2aW91c01vbnRoLCBvbkNsaWNrOiBwcm9wcy5vblByZXZpb3VzQ2xpY2ssIGNoaWxkcmVuOiBkaXIgPT09ICdydGwnID8gKGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChJY29uUmlnaHRDb21wb25lbnQsIHsgY2xhc3NOYW1lOiBjbGFzc05hbWVzLm5hdl9pY29uLCBzdHlsZTogc3R5bGVzLm5hdl9pY29uIH0pKSA6IChqc3hSdW50aW1lRXhwb3J0cy5qc3goSWNvbkxlZnRDb21wb25lbnQsIHsgY2xhc3NOYW1lOiBjbGFzc05hbWVzLm5hdl9pY29uLCBzdHlsZTogc3R5bGVzLm5hdl9pY29uIH0pKSB9KSksICFwcm9wcy5oaWRlTmV4dCAmJiAoanN4UnVudGltZUV4cG9ydHMuanN4KEJ1dHRvbiwgeyBuYW1lOiBcIm5leHQtbW9udGhcIiwgXCJhcmlhLWxhYmVsXCI6IG5leHRMYWJlbCwgY2xhc3NOYW1lOiBuZXh0Q2xhc3NOYW1lLCBzdHlsZTogc3R5bGVzLm5hdl9idXR0b25fbmV4dCwgZGlzYWJsZWQ6ICFwcm9wcy5uZXh0TW9udGgsIG9uQ2xpY2s6IHByb3BzLm9uTmV4dENsaWNrLCBjaGlsZHJlbjogZGlyID09PSAncnRsJyA/IChqc3hSdW50aW1lRXhwb3J0cy5qc3goSWNvbkxlZnRDb21wb25lbnQsIHsgY2xhc3NOYW1lOiBjbGFzc05hbWVzLm5hdl9pY29uLCBzdHlsZTogc3R5bGVzLm5hdl9pY29uIH0pKSA6IChqc3hSdW50aW1lRXhwb3J0cy5qc3goSWNvblJpZ2h0Q29tcG9uZW50LCB7IGNsYXNzTmFtZTogY2xhc3NOYW1lcy5uYXZfaWNvbiwgc3R5bGU6IHN0eWxlcy5uYXZfaWNvbiB9KSkgfSkpXSB9KSk7XG59XG5cbi8qKlxuICogUmVuZGVyIGEgY2FwdGlvbiB3aXRoIGEgYnV0dG9uLWJhc2VkIG5hdmlnYXRpb24uXG4gKi9cbmZ1bmN0aW9uIENhcHRpb25OYXZpZ2F0aW9uKHByb3BzKSB7XG4gICAgdmFyIG51bWJlck9mTW9udGhzID0gdXNlRGF5UGlja2VyKCkubnVtYmVyT2ZNb250aHM7XG4gICAgdmFyIF9hID0gdXNlTmF2aWdhdGlvbigpLCBwcmV2aW91c01vbnRoID0gX2EucHJldmlvdXNNb250aCwgbmV4dE1vbnRoID0gX2EubmV4dE1vbnRoLCBnb1RvTW9udGggPSBfYS5nb1RvTW9udGgsIGRpc3BsYXlNb250aHMgPSBfYS5kaXNwbGF5TW9udGhzO1xuICAgIHZhciBkaXNwbGF5SW5kZXggPSBkaXNwbGF5TW9udGhzLmZpbmRJbmRleChmdW5jdGlvbiAobW9udGgpIHtcbiAgICAgICAgcmV0dXJuIGlzU2FtZU1vbnRoKHByb3BzLmRpc3BsYXlNb250aCwgbW9udGgpO1xuICAgIH0pO1xuICAgIHZhciBpc0ZpcnN0ID0gZGlzcGxheUluZGV4ID09PSAwO1xuICAgIHZhciBpc0xhc3QgPSBkaXNwbGF5SW5kZXggPT09IGRpc3BsYXlNb250aHMubGVuZ3RoIC0gMTtcbiAgICB2YXIgaGlkZU5leHQgPSBudW1iZXJPZk1vbnRocyA+IDEgJiYgKGlzRmlyc3QgfHwgIWlzTGFzdCk7XG4gICAgdmFyIGhpZGVQcmV2aW91cyA9IG51bWJlck9mTW9udGhzID4gMSAmJiAoaXNMYXN0IHx8ICFpc0ZpcnN0KTtcbiAgICB2YXIgaGFuZGxlUHJldmlvdXNDbGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCFwcmV2aW91c01vbnRoKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBnb1RvTW9udGgocHJldmlvdXNNb250aCk7XG4gICAgfTtcbiAgICB2YXIgaGFuZGxlTmV4dENsaWNrID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIW5leHRNb250aClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgZ29Ub01vbnRoKG5leHRNb250aCk7XG4gICAgfTtcbiAgICByZXR1cm4gKGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChOYXZpZ2F0aW9uLCB7IGRpc3BsYXlNb250aDogcHJvcHMuZGlzcGxheU1vbnRoLCBoaWRlTmV4dDogaGlkZU5leHQsIGhpZGVQcmV2aW91czogaGlkZVByZXZpb3VzLCBuZXh0TW9udGg6IG5leHRNb250aCwgcHJldmlvdXNNb250aDogcHJldmlvdXNNb250aCwgb25QcmV2aW91c0NsaWNrOiBoYW5kbGVQcmV2aW91c0NsaWNrLCBvbk5leHRDbGljazogaGFuZGxlTmV4dENsaWNrIH0pKTtcbn1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIGNhcHRpb24gb2YgYSBtb250aC4gVGhlIGNhcHRpb24gaGFzIGEgZGlmZmVyZW50IGxheW91dCB3aGVuXG4gKiBzZXR0aW5nIHRoZSB7QGxpbmsgRGF5UGlja2VyQmFzZS5jYXB0aW9uTGF5b3V0fSBwcm9wLlxuICovXG5mdW5jdGlvbiBDYXB0aW9uKHByb3BzKSB7XG4gICAgdmFyIF9hO1xuICAgIHZhciBfYiA9IHVzZURheVBpY2tlcigpLCBjbGFzc05hbWVzID0gX2IuY2xhc3NOYW1lcywgZGlzYWJsZU5hdmlnYXRpb24gPSBfYi5kaXNhYmxlTmF2aWdhdGlvbiwgc3R5bGVzID0gX2Iuc3R5bGVzLCBjYXB0aW9uTGF5b3V0ID0gX2IuY2FwdGlvbkxheW91dCwgY29tcG9uZW50cyA9IF9iLmNvbXBvbmVudHM7XG4gICAgdmFyIENhcHRpb25MYWJlbENvbXBvbmVudCA9IChfYSA9IGNvbXBvbmVudHMgPT09IG51bGwgfHwgY29tcG9uZW50cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29tcG9uZW50cy5DYXB0aW9uTGFiZWwpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IENhcHRpb25MYWJlbDtcbiAgICB2YXIgY2FwdGlvbjtcbiAgICBpZiAoZGlzYWJsZU5hdmlnYXRpb24pIHtcbiAgICAgICAgY2FwdGlvbiA9IChqc3hSdW50aW1lRXhwb3J0cy5qc3goQ2FwdGlvbkxhYmVsQ29tcG9uZW50LCB7IGlkOiBwcm9wcy5pZCwgZGlzcGxheU1vbnRoOiBwcm9wcy5kaXNwbGF5TW9udGggfSkpO1xuICAgIH1cbiAgICBlbHNlIGlmIChjYXB0aW9uTGF5b3V0ID09PSAnZHJvcGRvd24nKSB7XG4gICAgICAgIGNhcHRpb24gPSAoanN4UnVudGltZUV4cG9ydHMuanN4KENhcHRpb25Ecm9wZG93bnMsIHsgZGlzcGxheU1vbnRoOiBwcm9wcy5kaXNwbGF5TW9udGgsIGlkOiBwcm9wcy5pZCB9KSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGNhcHRpb25MYXlvdXQgPT09ICdkcm9wZG93bi1idXR0b25zJykge1xuICAgICAgICBjYXB0aW9uID0gKGpzeFJ1bnRpbWVFeHBvcnRzLmpzeHMoanN4UnVudGltZUV4cG9ydHMuRnJhZ21lbnQsIHsgY2hpbGRyZW46IFtqc3hSdW50aW1lRXhwb3J0cy5qc3goQ2FwdGlvbkRyb3Bkb3ducywgeyBkaXNwbGF5TW9udGg6IHByb3BzLmRpc3BsYXlNb250aCwgZGlzcGxheUluZGV4OiBwcm9wcy5kaXNwbGF5SW5kZXgsIGlkOiBwcm9wcy5pZCB9KSwganN4UnVudGltZUV4cG9ydHMuanN4KENhcHRpb25OYXZpZ2F0aW9uLCB7IGRpc3BsYXlNb250aDogcHJvcHMuZGlzcGxheU1vbnRoLCBkaXNwbGF5SW5kZXg6IHByb3BzLmRpc3BsYXlJbmRleCwgaWQ6IHByb3BzLmlkIH0pXSB9KSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjYXB0aW9uID0gKGpzeFJ1bnRpbWVFeHBvcnRzLmpzeHMoanN4UnVudGltZUV4cG9ydHMuRnJhZ21lbnQsIHsgY2hpbGRyZW46IFtqc3hSdW50aW1lRXhwb3J0cy5qc3goQ2FwdGlvbkxhYmVsQ29tcG9uZW50LCB7IGlkOiBwcm9wcy5pZCwgZGlzcGxheU1vbnRoOiBwcm9wcy5kaXNwbGF5TW9udGgsIGRpc3BsYXlJbmRleDogcHJvcHMuZGlzcGxheUluZGV4IH0pLCBqc3hSdW50aW1lRXhwb3J0cy5qc3goQ2FwdGlvbk5hdmlnYXRpb24sIHsgZGlzcGxheU1vbnRoOiBwcm9wcy5kaXNwbGF5TW9udGgsIGlkOiBwcm9wcy5pZCB9KV0gfSkpO1xuICAgIH1cbiAgICByZXR1cm4gKGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChcImRpdlwiLCB7IGNsYXNzTmFtZTogY2xhc3NOYW1lcy5jYXB0aW9uLCBzdHlsZTogc3R5bGVzLmNhcHRpb24sIGNoaWxkcmVuOiBjYXB0aW9uIH0pKTtcbn1cblxuLyoqIFJlbmRlciB0aGUgRm9vdGVyIGNvbXBvbmVudCAoZW1wdHkgYXMgZGVmYXVsdCkuKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbmZ1bmN0aW9uIEZvb3Rlcihwcm9wcykge1xuICAgIHZhciBfYSA9IHVzZURheVBpY2tlcigpLCBmb290ZXIgPSBfYS5mb290ZXIsIHN0eWxlcyA9IF9hLnN0eWxlcywgdGZvb3QgPSBfYS5jbGFzc05hbWVzLnRmb290O1xuICAgIGlmICghZm9vdGVyKVxuICAgICAgICByZXR1cm4ganN4UnVudGltZUV4cG9ydHMuanN4KGpzeFJ1bnRpbWVFeHBvcnRzLkZyYWdtZW50LCB7fSk7XG4gICAgcmV0dXJuIChqc3hSdW50aW1lRXhwb3J0cy5qc3goXCJ0Zm9vdFwiLCB7IGNsYXNzTmFtZTogdGZvb3QsIHN0eWxlOiBzdHlsZXMudGZvb3QsIGNoaWxkcmVuOiBqc3hSdW50aW1lRXhwb3J0cy5qc3goXCJ0clwiLCB7IGNoaWxkcmVuOiBqc3hSdW50aW1lRXhwb3J0cy5qc3goXCJ0ZFwiLCB7IGNvbFNwYW46IDgsIGNoaWxkcmVuOiBmb290ZXIgfSkgfSkgfSkpO1xufVxuXG4vKipcbiAqIEdlbmVyYXRlIGEgc2VyaWVzIG9mIDcgZGF5cywgc3RhcnRpbmcgZnJvbSB0aGUgd2VlaywgdG8gdXNlIGZvciBmb3JtYXR0aW5nXG4gKiB0aGUgd2Vla2RheSBuYW1lcyAoTW9uZGF5LCBUdWVzZGF5LCBldGMuKS5cbiAqL1xuZnVuY3Rpb24gZ2V0V2Vla2RheXMobG9jYWxlLCBcbi8qKiBUaGUgaW5kZXggb2YgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2VlayAoMCAtIFN1bmRheSkuICovXG53ZWVrU3RhcnRzT24sIFxuLyoqIFVzZSBJU09XZWVrIGluc3RlYWQgb2YgbG9jYWxlLyAqL1xuSVNPV2Vlaykge1xuICAgIHZhciBzdGFydCA9IElTT1dlZWtcbiAgICAgICAgPyBzdGFydE9mSVNPV2VlayhuZXcgRGF0ZSgpKVxuICAgICAgICA6IHN0YXJ0T2ZXZWVrKG5ldyBEYXRlKCksIHsgbG9jYWxlOiBsb2NhbGUsIHdlZWtTdGFydHNPbjogd2Vla1N0YXJ0c09uIH0pO1xuICAgIHZhciBkYXlzID0gW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCA3OyBpKyspIHtcbiAgICAgICAgdmFyIGRheSA9IGFkZERheXMoc3RhcnQsIGkpO1xuICAgICAgICBkYXlzLnB1c2goZGF5KTtcbiAgICB9XG4gICAgcmV0dXJuIGRheXM7XG59XG5cbi8qKlxuICogUmVuZGVyIHRoZSBIZWFkUm93IGNvbXBvbmVudCAtIGkuZS4gdGhlIHRhYmxlIGhlYWQgcm93IHdpdGggdGhlIHdlZWtkYXkgbmFtZXMuXG4gKi9cbmZ1bmN0aW9uIEhlYWRSb3coKSB7XG4gICAgdmFyIF9hID0gdXNlRGF5UGlja2VyKCksIGNsYXNzTmFtZXMgPSBfYS5jbGFzc05hbWVzLCBzdHlsZXMgPSBfYS5zdHlsZXMsIHNob3dXZWVrTnVtYmVyID0gX2Euc2hvd1dlZWtOdW1iZXIsIGxvY2FsZSA9IF9hLmxvY2FsZSwgd2Vla1N0YXJ0c09uID0gX2Eud2Vla1N0YXJ0c09uLCBJU09XZWVrID0gX2EuSVNPV2VlaywgZm9ybWF0V2Vla2RheU5hbWUgPSBfYS5mb3JtYXR0ZXJzLmZvcm1hdFdlZWtkYXlOYW1lLCBsYWJlbFdlZWtkYXkgPSBfYS5sYWJlbHMubGFiZWxXZWVrZGF5O1xuICAgIHZhciB3ZWVrZGF5cyA9IGdldFdlZWtkYXlzKGxvY2FsZSwgd2Vla1N0YXJ0c09uLCBJU09XZWVrKTtcbiAgICByZXR1cm4gKGpzeFJ1bnRpbWVFeHBvcnRzLmpzeHMoXCJ0clwiLCB7IHN0eWxlOiBzdHlsZXMuaGVhZF9yb3csIGNsYXNzTmFtZTogY2xhc3NOYW1lcy5oZWFkX3JvdywgY2hpbGRyZW46IFtzaG93V2Vla051bWJlciAmJiAoanN4UnVudGltZUV4cG9ydHMuanN4KFwidGRcIiwgeyBzdHlsZTogc3R5bGVzLmhlYWRfY2VsbCwgY2xhc3NOYW1lOiBjbGFzc05hbWVzLmhlYWRfY2VsbCB9KSksIHdlZWtkYXlzLm1hcChmdW5jdGlvbiAod2Vla2RheSwgaSkgeyByZXR1cm4gKGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChcInRoXCIsIHsgc2NvcGU6IFwiY29sXCIsIGNsYXNzTmFtZTogY2xhc3NOYW1lcy5oZWFkX2NlbGwsIHN0eWxlOiBzdHlsZXMuaGVhZF9jZWxsLCBcImFyaWEtbGFiZWxcIjogbGFiZWxXZWVrZGF5KHdlZWtkYXksIHsgbG9jYWxlOiBsb2NhbGUgfSksIGNoaWxkcmVuOiBmb3JtYXRXZWVrZGF5TmFtZSh3ZWVrZGF5LCB7IGxvY2FsZTogbG9jYWxlIH0pIH0sIGkpKTsgfSldIH0pKTtcbn1cblxuLyoqIFJlbmRlciB0aGUgdGFibGUgaGVhZC4gKi9cbmZ1bmN0aW9uIEhlYWQoKSB7XG4gICAgdmFyIF9hO1xuICAgIHZhciBfYiA9IHVzZURheVBpY2tlcigpLCBjbGFzc05hbWVzID0gX2IuY2xhc3NOYW1lcywgc3R5bGVzID0gX2Iuc3R5bGVzLCBjb21wb25lbnRzID0gX2IuY29tcG9uZW50cztcbiAgICB2YXIgSGVhZFJvd0NvbXBvbmVudCA9IChfYSA9IGNvbXBvbmVudHMgPT09IG51bGwgfHwgY29tcG9uZW50cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29tcG9uZW50cy5IZWFkUm93KSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBIZWFkUm93O1xuICAgIHJldHVybiAoanN4UnVudGltZUV4cG9ydHMuanN4KFwidGhlYWRcIiwgeyBzdHlsZTogc3R5bGVzLmhlYWQsIGNsYXNzTmFtZTogY2xhc3NOYW1lcy5oZWFkLCBjaGlsZHJlbjoganN4UnVudGltZUV4cG9ydHMuanN4KEhlYWRSb3dDb21wb25lbnQsIHt9KSB9KSk7XG59XG5cbi8qKiBSZW5kZXIgdGhlIGNvbnRlbnQgb2YgdGhlIGRheSBjZWxsLiAqL1xuZnVuY3Rpb24gRGF5Q29udGVudChwcm9wcykge1xuICAgIHZhciBfYSA9IHVzZURheVBpY2tlcigpLCBsb2NhbGUgPSBfYS5sb2NhbGUsIGZvcm1hdERheSA9IF9hLmZvcm1hdHRlcnMuZm9ybWF0RGF5O1xuICAgIHJldHVybiBqc3hSdW50aW1lRXhwb3J0cy5qc3goanN4UnVudGltZUV4cG9ydHMuRnJhZ21lbnQsIHsgY2hpbGRyZW46IGZvcm1hdERheShwcm9wcy5kYXRlLCB7IGxvY2FsZTogbG9jYWxlIH0pIH0pO1xufVxuXG4vKipcbiAqIFRoZSBTZWxlY3RNdWx0aXBsZSBjb250ZXh0IHNoYXJlcyBkZXRhaWxzIGFib3V0IHRoZSBzZWxlY3RlZCBkYXlzIHdoZW4gaW5cbiAqIG11bHRpcGxlIHNlbGVjdGlvbiBtb2RlLlxuICpcbiAqIEFjY2VzcyB0aGlzIGNvbnRleHQgZnJvbSB0aGUge0BsaW5rIHVzZVNlbGVjdE11bHRpcGxlfSBob29rLlxuICovXG52YXIgU2VsZWN0TXVsdGlwbGVDb250ZXh0ID0gY3JlYXRlQ29udGV4dCh1bmRlZmluZWQpO1xuLyoqIFByb3ZpZGVzIHRoZSB2YWx1ZXMgZm9yIHRoZSB7QGxpbmsgU2VsZWN0TXVsdGlwbGVDb250ZXh0fS4gKi9cbmZ1bmN0aW9uIFNlbGVjdE11bHRpcGxlUHJvdmlkZXIocHJvcHMpIHtcbiAgICBpZiAoIWlzRGF5UGlja2VyTXVsdGlwbGUocHJvcHMuaW5pdGlhbFByb3BzKSkge1xuICAgICAgICB2YXIgZW1wdHlDb250ZXh0VmFsdWUgPSB7XG4gICAgICAgICAgICBzZWxlY3RlZDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgbW9kaWZpZXJzOiB7XG4gICAgICAgICAgICAgICAgZGlzYWJsZWQ6IFtdXG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiAoanN4UnVudGltZUV4cG9ydHMuanN4KFNlbGVjdE11bHRpcGxlQ29udGV4dC5Qcm92aWRlciwgeyB2YWx1ZTogZW1wdHlDb250ZXh0VmFsdWUsIGNoaWxkcmVuOiBwcm9wcy5jaGlsZHJlbiB9KSk7XG4gICAgfVxuICAgIHJldHVybiAoanN4UnVudGltZUV4cG9ydHMuanN4KFNlbGVjdE11bHRpcGxlUHJvdmlkZXJJbnRlcm5hbCwgeyBpbml0aWFsUHJvcHM6IHByb3BzLmluaXRpYWxQcm9wcywgY2hpbGRyZW46IHByb3BzLmNoaWxkcmVuIH0pKTtcbn1cbmZ1bmN0aW9uIFNlbGVjdE11bHRpcGxlUHJvdmlkZXJJbnRlcm5hbChfYSkge1xuICAgIHZhciBpbml0aWFsUHJvcHMgPSBfYS5pbml0aWFsUHJvcHMsIGNoaWxkcmVuID0gX2EuY2hpbGRyZW47XG4gICAgdmFyIHNlbGVjdGVkID0gaW5pdGlhbFByb3BzLnNlbGVjdGVkLCBtaW4gPSBpbml0aWFsUHJvcHMubWluLCBtYXggPSBpbml0aWFsUHJvcHMubWF4O1xuICAgIHZhciBvbkRheUNsaWNrID0gZnVuY3Rpb24gKGRheSwgYWN0aXZlTW9kaWZpZXJzLCBlKSB7XG4gICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgIChfYSA9IGluaXRpYWxQcm9wcy5vbkRheUNsaWNrKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FsbChpbml0aWFsUHJvcHMsIGRheSwgYWN0aXZlTW9kaWZpZXJzLCBlKTtcbiAgICAgICAgdmFyIGlzTWluU2VsZWN0ZWQgPSBCb29sZWFuKGFjdGl2ZU1vZGlmaWVycy5zZWxlY3RlZCAmJiBtaW4gJiYgKHNlbGVjdGVkID09PSBudWxsIHx8IHNlbGVjdGVkID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzZWxlY3RlZC5sZW5ndGgpID09PSBtaW4pO1xuICAgICAgICBpZiAoaXNNaW5TZWxlY3RlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBpc01heFNlbGVjdGVkID0gQm9vbGVhbighYWN0aXZlTW9kaWZpZXJzLnNlbGVjdGVkICYmIG1heCAmJiAoc2VsZWN0ZWQgPT09IG51bGwgfHwgc2VsZWN0ZWQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNlbGVjdGVkLmxlbmd0aCkgPT09IG1heCk7XG4gICAgICAgIGlmIChpc01heFNlbGVjdGVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHNlbGVjdGVkRGF5cyA9IHNlbGVjdGVkID8gX19zcHJlYWRBcnJheShbXSwgc2VsZWN0ZWQsIHRydWUpIDogW107XG4gICAgICAgIGlmIChhY3RpdmVNb2RpZmllcnMuc2VsZWN0ZWQpIHtcbiAgICAgICAgICAgIHZhciBpbmRleCA9IHNlbGVjdGVkRGF5cy5maW5kSW5kZXgoZnVuY3Rpb24gKHNlbGVjdGVkRGF5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzU2FtZURheShkYXksIHNlbGVjdGVkRGF5KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgc2VsZWN0ZWREYXlzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzZWxlY3RlZERheXMucHVzaChkYXkpO1xuICAgICAgICB9XG4gICAgICAgIChfYiA9IGluaXRpYWxQcm9wcy5vblNlbGVjdCkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwoaW5pdGlhbFByb3BzLCBzZWxlY3RlZERheXMsIGRheSwgYWN0aXZlTW9kaWZpZXJzLCBlKTtcbiAgICB9O1xuICAgIHZhciBtb2RpZmllcnMgPSB7XG4gICAgICAgIGRpc2FibGVkOiBbXVxuICAgIH07XG4gICAgaWYgKHNlbGVjdGVkKSB7XG4gICAgICAgIG1vZGlmaWVycy5kaXNhYmxlZC5wdXNoKGZ1bmN0aW9uIChkYXkpIHtcbiAgICAgICAgICAgIHZhciBpc01heFNlbGVjdGVkID0gbWF4ICYmIHNlbGVjdGVkLmxlbmd0aCA+IG1heCAtIDE7XG4gICAgICAgICAgICB2YXIgaXNTZWxlY3RlZCA9IHNlbGVjdGVkLnNvbWUoZnVuY3Rpb24gKHNlbGVjdGVkRGF5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzU2FtZURheShzZWxlY3RlZERheSwgZGF5KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIEJvb2xlYW4oaXNNYXhTZWxlY3RlZCAmJiAhaXNTZWxlY3RlZCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB2YXIgY29udGV4dFZhbHVlID0ge1xuICAgICAgICBzZWxlY3RlZDogc2VsZWN0ZWQsXG4gICAgICAgIG9uRGF5Q2xpY2s6IG9uRGF5Q2xpY2ssXG4gICAgICAgIG1vZGlmaWVyczogbW9kaWZpZXJzXG4gICAgfTtcbiAgICByZXR1cm4gKGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChTZWxlY3RNdWx0aXBsZUNvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWU6IGNvbnRleHRWYWx1ZSwgY2hpbGRyZW46IGNoaWxkcmVuIH0pKTtcbn1cbi8qKlxuICogSG9vayB0byBhY2Nlc3MgdGhlIHtAbGluayBTZWxlY3RNdWx0aXBsZUNvbnRleHRWYWx1ZX0uXG4gKlxuICogVGhpcyBob29rIGlzIG1lYW50IHRvIGJlIHVzZWQgaW5zaWRlIGludGVybmFsIG9yIGN1c3RvbSBjb21wb25lbnRzLlxuICovXG5mdW5jdGlvbiB1c2VTZWxlY3RNdWx0aXBsZSgpIHtcbiAgICB2YXIgY29udGV4dCA9IHVzZUNvbnRleHQoU2VsZWN0TXVsdGlwbGVDb250ZXh0KTtcbiAgICBpZiAoIWNvbnRleHQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd1c2VTZWxlY3RNdWx0aXBsZSBtdXN0IGJlIHVzZWQgd2l0aGluIGEgU2VsZWN0TXVsdGlwbGVQcm92aWRlcicpO1xuICAgIH1cbiAgICByZXR1cm4gY29udGV4dDtcbn1cblxuLyoqXG4gKiBBZGQgYSBkYXkgdG8gYW4gZXhpc3RpbmcgcmFuZ2UuXG4gKlxuICogVGhlIHJldHVybmVkIHJhbmdlIHRha2VzIGluIGFjY291bnQgdGhlIGB1bmRlZmluZWRgIHZhbHVlcyBhbmQgaWYgdGhlIGFkZGVkXG4gKiBkYXkgaXMgYWxyZWFkeSBwcmVzZW50IGluIHRoZSByYW5nZS5cbiAqL1xuZnVuY3Rpb24gYWRkVG9SYW5nZShkYXksIHJhbmdlKSB7XG4gICAgdmFyIF9hID0gcmFuZ2UgfHwge30sIGZyb20gPSBfYS5mcm9tLCB0byA9IF9hLnRvO1xuICAgIGlmIChmcm9tICYmIHRvKSB7XG4gICAgICAgIGlmIChpc1NhbWVEYXkodG8sIGRheSkgJiYgaXNTYW1lRGF5KGZyb20sIGRheSkpIHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzU2FtZURheSh0bywgZGF5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHsgZnJvbTogdG8sIHRvOiB1bmRlZmluZWQgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNTYW1lRGF5KGZyb20sIGRheSkpIHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzQWZ0ZXIoZnJvbSwgZGF5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHsgZnJvbTogZGF5LCB0bzogdG8gfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBmcm9tOiBmcm9tLCB0bzogZGF5IH07XG4gICAgfVxuICAgIGlmICh0bykge1xuICAgICAgICBpZiAoaXNBZnRlcihkYXksIHRvKSkge1xuICAgICAgICAgICAgcmV0dXJuIHsgZnJvbTogdG8sIHRvOiBkYXkgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBmcm9tOiBkYXksIHRvOiB0byB9O1xuICAgIH1cbiAgICBpZiAoZnJvbSkge1xuICAgICAgICBpZiAoaXNCZWZvcmUoZGF5LCBmcm9tKSkge1xuICAgICAgICAgICAgcmV0dXJuIHsgZnJvbTogZGF5LCB0bzogZnJvbSB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7IGZyb206IGZyb20sIHRvOiBkYXkgfTtcbiAgICB9XG4gICAgcmV0dXJuIHsgZnJvbTogZGF5LCB0bzogdW5kZWZpbmVkIH07XG59XG5cbi8qKlxuICogVGhlIFNlbGVjdFJhbmdlIGNvbnRleHQgc2hhcmVzIGRldGFpbHMgYWJvdXQgdGhlIHNlbGVjdGVkIGRheXMgd2hlbiBpblxuICogcmFuZ2Ugc2VsZWN0aW9uIG1vZGUuXG4gKlxuICogQWNjZXNzIHRoaXMgY29udGV4dCBmcm9tIHRoZSB7QGxpbmsgdXNlU2VsZWN0UmFuZ2V9IGhvb2suXG4gKi9cbnZhciBTZWxlY3RSYW5nZUNvbnRleHQgPSBjcmVhdGVDb250ZXh0KHVuZGVmaW5lZCk7XG4vKiogUHJvdmlkZXMgdGhlIHZhbHVlcyBmb3IgdGhlIHtAbGluayBTZWxlY3RSYW5nZVByb3ZpZGVyfS4gKi9cbmZ1bmN0aW9uIFNlbGVjdFJhbmdlUHJvdmlkZXIocHJvcHMpIHtcbiAgICBpZiAoIWlzRGF5UGlja2VyUmFuZ2UocHJvcHMuaW5pdGlhbFByb3BzKSkge1xuICAgICAgICB2YXIgZW1wdHlDb250ZXh0VmFsdWUgPSB7XG4gICAgICAgICAgICBzZWxlY3RlZDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgbW9kaWZpZXJzOiB7XG4gICAgICAgICAgICAgICAgcmFuZ2Vfc3RhcnQ6IFtdLFxuICAgICAgICAgICAgICAgIHJhbmdlX2VuZDogW10sXG4gICAgICAgICAgICAgICAgcmFuZ2VfbWlkZGxlOiBbXSxcbiAgICAgICAgICAgICAgICBkaXNhYmxlZDogW11cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIChqc3hSdW50aW1lRXhwb3J0cy5qc3goU2VsZWN0UmFuZ2VDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiBlbXB0eUNvbnRleHRWYWx1ZSwgY2hpbGRyZW46IHByb3BzLmNoaWxkcmVuIH0pKTtcbiAgICB9XG4gICAgcmV0dXJuIChqc3hSdW50aW1lRXhwb3J0cy5qc3goU2VsZWN0UmFuZ2VQcm92aWRlckludGVybmFsLCB7IGluaXRpYWxQcm9wczogcHJvcHMuaW5pdGlhbFByb3BzLCBjaGlsZHJlbjogcHJvcHMuY2hpbGRyZW4gfSkpO1xufVxuZnVuY3Rpb24gU2VsZWN0UmFuZ2VQcm92aWRlckludGVybmFsKF9hKSB7XG4gICAgdmFyIGluaXRpYWxQcm9wcyA9IF9hLmluaXRpYWxQcm9wcywgY2hpbGRyZW4gPSBfYS5jaGlsZHJlbjtcbiAgICB2YXIgc2VsZWN0ZWQgPSBpbml0aWFsUHJvcHMuc2VsZWN0ZWQ7XG4gICAgdmFyIF9iID0gc2VsZWN0ZWQgfHwge30sIHNlbGVjdGVkRnJvbSA9IF9iLmZyb20sIHNlbGVjdGVkVG8gPSBfYi50bztcbiAgICB2YXIgbWluID0gaW5pdGlhbFByb3BzLm1pbjtcbiAgICB2YXIgbWF4ID0gaW5pdGlhbFByb3BzLm1heDtcbiAgICB2YXIgb25EYXlDbGljayA9IGZ1bmN0aW9uIChkYXksIGFjdGl2ZU1vZGlmaWVycywgZSkge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAoX2EgPSBpbml0aWFsUHJvcHMub25EYXlDbGljaykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwoaW5pdGlhbFByb3BzLCBkYXksIGFjdGl2ZU1vZGlmaWVycywgZSk7XG4gICAgICAgIHZhciBuZXdSYW5nZSA9IGFkZFRvUmFuZ2UoZGF5LCBzZWxlY3RlZCk7XG4gICAgICAgIChfYiA9IGluaXRpYWxQcm9wcy5vblNlbGVjdCkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwoaW5pdGlhbFByb3BzLCBuZXdSYW5nZSwgZGF5LCBhY3RpdmVNb2RpZmllcnMsIGUpO1xuICAgIH07XG4gICAgdmFyIG1vZGlmaWVycyA9IHtcbiAgICAgICAgcmFuZ2Vfc3RhcnQ6IFtdLFxuICAgICAgICByYW5nZV9lbmQ6IFtdLFxuICAgICAgICByYW5nZV9taWRkbGU6IFtdLFxuICAgICAgICBkaXNhYmxlZDogW11cbiAgICB9O1xuICAgIGlmIChzZWxlY3RlZEZyb20pIHtcbiAgICAgICAgbW9kaWZpZXJzLnJhbmdlX3N0YXJ0ID0gW3NlbGVjdGVkRnJvbV07XG4gICAgICAgIGlmICghc2VsZWN0ZWRUbykge1xuICAgICAgICAgICAgbW9kaWZpZXJzLnJhbmdlX2VuZCA9IFtzZWxlY3RlZEZyb21dO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbW9kaWZpZXJzLnJhbmdlX2VuZCA9IFtzZWxlY3RlZFRvXTtcbiAgICAgICAgICAgIGlmICghaXNTYW1lRGF5KHNlbGVjdGVkRnJvbSwgc2VsZWN0ZWRUbykpIHtcbiAgICAgICAgICAgICAgICBtb2RpZmllcnMucmFuZ2VfbWlkZGxlID0gW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhZnRlcjogc2VsZWN0ZWRGcm9tLFxuICAgICAgICAgICAgICAgICAgICAgICAgYmVmb3JlOiBzZWxlY3RlZFRvXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKHNlbGVjdGVkVG8pIHtcbiAgICAgICAgbW9kaWZpZXJzLnJhbmdlX3N0YXJ0ID0gW3NlbGVjdGVkVG9dO1xuICAgICAgICBtb2RpZmllcnMucmFuZ2VfZW5kID0gW3NlbGVjdGVkVG9dO1xuICAgIH1cbiAgICBpZiAobWluKSB7XG4gICAgICAgIGlmIChzZWxlY3RlZEZyb20gJiYgIXNlbGVjdGVkVG8pIHtcbiAgICAgICAgICAgIG1vZGlmaWVycy5kaXNhYmxlZC5wdXNoKHtcbiAgICAgICAgICAgICAgICBhZnRlcjogc3ViRGF5cyhzZWxlY3RlZEZyb20sIG1pbiAtIDEpLFxuICAgICAgICAgICAgICAgIGJlZm9yZTogYWRkRGF5cyhzZWxlY3RlZEZyb20sIG1pbiAtIDEpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZWN0ZWRGcm9tICYmIHNlbGVjdGVkVG8pIHtcbiAgICAgICAgICAgIG1vZGlmaWVycy5kaXNhYmxlZC5wdXNoKHtcbiAgICAgICAgICAgICAgICBhZnRlcjogc2VsZWN0ZWRGcm9tLFxuICAgICAgICAgICAgICAgIGJlZm9yZTogYWRkRGF5cyhzZWxlY3RlZEZyb20sIG1pbiAtIDEpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXNlbGVjdGVkRnJvbSAmJiBzZWxlY3RlZFRvKSB7XG4gICAgICAgICAgICBtb2RpZmllcnMuZGlzYWJsZWQucHVzaCh7XG4gICAgICAgICAgICAgICAgYWZ0ZXI6IHN1YkRheXMoc2VsZWN0ZWRUbywgbWluIC0gMSksXG4gICAgICAgICAgICAgICAgYmVmb3JlOiBhZGREYXlzKHNlbGVjdGVkVG8sIG1pbiAtIDEpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAobWF4KSB7XG4gICAgICAgIGlmIChzZWxlY3RlZEZyb20gJiYgIXNlbGVjdGVkVG8pIHtcbiAgICAgICAgICAgIG1vZGlmaWVycy5kaXNhYmxlZC5wdXNoKHtcbiAgICAgICAgICAgICAgICBiZWZvcmU6IGFkZERheXMoc2VsZWN0ZWRGcm9tLCAtbWF4ICsgMSlcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgbW9kaWZpZXJzLmRpc2FibGVkLnB1c2goe1xuICAgICAgICAgICAgICAgIGFmdGVyOiBhZGREYXlzKHNlbGVjdGVkRnJvbSwgbWF4IC0gMSlcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxlY3RlZEZyb20gJiYgc2VsZWN0ZWRUbykge1xuICAgICAgICAgICAgdmFyIHNlbGVjdGVkQ291bnQgPSBkaWZmZXJlbmNlSW5DYWxlbmRhckRheXMoc2VsZWN0ZWRUbywgc2VsZWN0ZWRGcm9tKSArIDE7XG4gICAgICAgICAgICB2YXIgb2Zmc2V0ID0gbWF4IC0gc2VsZWN0ZWRDb3VudDtcbiAgICAgICAgICAgIG1vZGlmaWVycy5kaXNhYmxlZC5wdXNoKHtcbiAgICAgICAgICAgICAgICBiZWZvcmU6IHN1YkRheXMoc2VsZWN0ZWRGcm9tLCBvZmZzZXQpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIG1vZGlmaWVycy5kaXNhYmxlZC5wdXNoKHtcbiAgICAgICAgICAgICAgICBhZnRlcjogYWRkRGF5cyhzZWxlY3RlZFRvLCBvZmZzZXQpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXNlbGVjdGVkRnJvbSAmJiBzZWxlY3RlZFRvKSB7XG4gICAgICAgICAgICBtb2RpZmllcnMuZGlzYWJsZWQucHVzaCh7XG4gICAgICAgICAgICAgICAgYmVmb3JlOiBhZGREYXlzKHNlbGVjdGVkVG8sIC1tYXggKyAxKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBtb2RpZmllcnMuZGlzYWJsZWQucHVzaCh7XG4gICAgICAgICAgICAgICAgYWZ0ZXI6IGFkZERheXMoc2VsZWN0ZWRUbywgbWF4IC0gMSlcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiAoanN4UnVudGltZUV4cG9ydHMuanN4KFNlbGVjdFJhbmdlQ29udGV4dC5Qcm92aWRlciwgeyB2YWx1ZTogeyBzZWxlY3RlZDogc2VsZWN0ZWQsIG9uRGF5Q2xpY2s6IG9uRGF5Q2xpY2ssIG1vZGlmaWVyczogbW9kaWZpZXJzIH0sIGNoaWxkcmVuOiBjaGlsZHJlbiB9KSk7XG59XG4vKipcbiAqIEhvb2sgdG8gYWNjZXNzIHRoZSB7QGxpbmsgU2VsZWN0UmFuZ2VDb250ZXh0VmFsdWV9LlxuICpcbiAqIFRoaXMgaG9vayBpcyBtZWFudCB0byBiZSB1c2VkIGluc2lkZSBpbnRlcm5hbCBvciBjdXN0b20gY29tcG9uZW50cy5cbiAqL1xuZnVuY3Rpb24gdXNlU2VsZWN0UmFuZ2UoKSB7XG4gICAgdmFyIGNvbnRleHQgPSB1c2VDb250ZXh0KFNlbGVjdFJhbmdlQ29udGV4dCk7XG4gICAgaWYgKCFjb250ZXh0KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigndXNlU2VsZWN0UmFuZ2UgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIFNlbGVjdFJhbmdlUHJvdmlkZXInKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbnRleHQ7XG59XG5cbi8qKiBOb3JtYWxpemUgdG8gYXJyYXkgYSBtYXRjaGVyIGlucHV0LiAqL1xuZnVuY3Rpb24gbWF0Y2hlclRvQXJyYXkobWF0Y2hlcikge1xuICAgIGlmIChBcnJheS5pc0FycmF5KG1hdGNoZXIpKSB7XG4gICAgICAgIHJldHVybiBfX3NwcmVhZEFycmF5KFtdLCBtYXRjaGVyLCB0cnVlKTtcbiAgICB9XG4gICAgZWxzZSBpZiAobWF0Y2hlciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBbbWF0Y2hlcl07XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxufVxuXG4vKiogQ3JlYXRlIEN1c3RvbU1vZGlmaWVycyBmcm9tIGRheU1vZGlmaWVycyAqL1xuZnVuY3Rpb24gZ2V0Q3VzdG9tTW9kaWZpZXJzKGRheU1vZGlmaWVycykge1xuICAgIHZhciBjdXN0b21Nb2RpZmllcnMgPSB7fTtcbiAgICBPYmplY3QuZW50cmllcyhkYXlNb2RpZmllcnMpLmZvckVhY2goZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgIHZhciBtb2RpZmllciA9IF9hWzBdLCBtYXRjaGVyID0gX2FbMV07XG4gICAgICAgIGN1c3RvbU1vZGlmaWVyc1ttb2RpZmllcl0gPSBtYXRjaGVyVG9BcnJheShtYXRjaGVyKTtcbiAgICB9KTtcbiAgICByZXR1cm4gY3VzdG9tTW9kaWZpZXJzO1xufVxuXG4vKiogVGhlIG5hbWUgb2YgdGhlIG1vZGlmaWVycyB0aGF0IGFyZSB1c2VkIGludGVybmFsbHkgYnkgRGF5UGlja2VyLiAqL1xudmFyIEludGVybmFsTW9kaWZpZXI7XG4oZnVuY3Rpb24gKEludGVybmFsTW9kaWZpZXIpIHtcbiAgICBJbnRlcm5hbE1vZGlmaWVyW1wiT3V0c2lkZVwiXSA9IFwib3V0c2lkZVwiO1xuICAgIC8qKiBOYW1lIG9mIHRoZSBtb2RpZmllciBhcHBsaWVkIHRvIHRoZSBkaXNhYmxlZCBkYXlzLCB1c2luZyB0aGUgYGRpc2FibGVkYCBwcm9wLiAqL1xuICAgIEludGVybmFsTW9kaWZpZXJbXCJEaXNhYmxlZFwiXSA9IFwiZGlzYWJsZWRcIjtcbiAgICAvKiogTmFtZSBvZiB0aGUgbW9kaWZpZXIgYXBwbGllZCB0byB0aGUgc2VsZWN0ZWQgZGF5cyB1c2luZyB0aGUgYHNlbGVjdGVkYCBwcm9wKS4gKi9cbiAgICBJbnRlcm5hbE1vZGlmaWVyW1wiU2VsZWN0ZWRcIl0gPSBcInNlbGVjdGVkXCI7XG4gICAgLyoqIE5hbWUgb2YgdGhlIG1vZGlmaWVyIGFwcGxpZWQgdG8gdGhlIGhpZGRlbiBkYXlzIHVzaW5nIHRoZSBgaGlkZGVuYCBwcm9wKS4gKi9cbiAgICBJbnRlcm5hbE1vZGlmaWVyW1wiSGlkZGVuXCJdID0gXCJoaWRkZW5cIjtcbiAgICAvKiogTmFtZSBvZiB0aGUgbW9kaWZpZXIgYXBwbGllZCB0byB0aGUgZGF5IHNwZWNpZmllZCB1c2luZyB0aGUgYHRvZGF5YCBwcm9wKS4gKi9cbiAgICBJbnRlcm5hbE1vZGlmaWVyW1wiVG9kYXlcIl0gPSBcInRvZGF5XCI7XG4gICAgLyoqIFRoZSBtb2RpZmllciBhcHBsaWVkIHRvIHRoZSBkYXkgc3RhcnRpbmcgYSBzZWxlY3RlZCByYW5nZSwgd2hlbiBpbiByYW5nZSBzZWxlY3Rpb24gbW9kZS4gICovXG4gICAgSW50ZXJuYWxNb2RpZmllcltcIlJhbmdlU3RhcnRcIl0gPSBcInJhbmdlX3N0YXJ0XCI7XG4gICAgLyoqIFRoZSBtb2RpZmllciBhcHBsaWVkIHRvIHRoZSBkYXkgZW5kaW5nIGEgc2VsZWN0ZWQgcmFuZ2UsIHdoZW4gaW4gcmFuZ2Ugc2VsZWN0aW9uIG1vZGUuICAqL1xuICAgIEludGVybmFsTW9kaWZpZXJbXCJSYW5nZUVuZFwiXSA9IFwicmFuZ2VfZW5kXCI7XG4gICAgLyoqIFRoZSBtb2RpZmllciBhcHBsaWVkIHRvIHRoZSBkYXlzIGJldHdlZW4gdGhlIHN0YXJ0IGFuZCB0aGUgZW5kIG9mIGEgc2VsZWN0ZWQgcmFuZ2UsIHdoZW4gaW4gcmFuZ2Ugc2VsZWN0aW9uIG1vZGUuICAqL1xuICAgIEludGVybmFsTW9kaWZpZXJbXCJSYW5nZU1pZGRsZVwiXSA9IFwicmFuZ2VfbWlkZGxlXCI7XG59KShJbnRlcm5hbE1vZGlmaWVyIHx8IChJbnRlcm5hbE1vZGlmaWVyID0ge30pKTtcblxudmFyIFNlbGVjdGVkID0gSW50ZXJuYWxNb2RpZmllci5TZWxlY3RlZCwgRGlzYWJsZWQgPSBJbnRlcm5hbE1vZGlmaWVyLkRpc2FibGVkLCBIaWRkZW4gPSBJbnRlcm5hbE1vZGlmaWVyLkhpZGRlbiwgVG9kYXkgPSBJbnRlcm5hbE1vZGlmaWVyLlRvZGF5LCBSYW5nZUVuZCA9IEludGVybmFsTW9kaWZpZXIuUmFuZ2VFbmQsIFJhbmdlTWlkZGxlID0gSW50ZXJuYWxNb2RpZmllci5SYW5nZU1pZGRsZSwgUmFuZ2VTdGFydCA9IEludGVybmFsTW9kaWZpZXIuUmFuZ2VTdGFydCwgT3V0c2lkZSA9IEludGVybmFsTW9kaWZpZXIuT3V0c2lkZTtcbi8qKiBSZXR1cm4gdGhlIHtAbGluayBJbnRlcm5hbE1vZGlmaWVyc30gZnJvbSB0aGUgRGF5UGlja2VyIGFuZCBzZWxlY3QgY29udGV4dHMuICovXG5mdW5jdGlvbiBnZXRJbnRlcm5hbE1vZGlmaWVycyhkYXlQaWNrZXIsIHNlbGVjdE11bHRpcGxlLCBzZWxlY3RSYW5nZSkge1xuICAgIHZhciBfYTtcbiAgICB2YXIgaW50ZXJuYWxNb2RpZmllcnMgPSAoX2EgPSB7fSxcbiAgICAgICAgX2FbU2VsZWN0ZWRdID0gbWF0Y2hlclRvQXJyYXkoZGF5UGlja2VyLnNlbGVjdGVkKSxcbiAgICAgICAgX2FbRGlzYWJsZWRdID0gbWF0Y2hlclRvQXJyYXkoZGF5UGlja2VyLmRpc2FibGVkKSxcbiAgICAgICAgX2FbSGlkZGVuXSA9IG1hdGNoZXJUb0FycmF5KGRheVBpY2tlci5oaWRkZW4pLFxuICAgICAgICBfYVtUb2RheV0gPSBbZGF5UGlja2VyLnRvZGF5XSxcbiAgICAgICAgX2FbUmFuZ2VFbmRdID0gW10sXG4gICAgICAgIF9hW1JhbmdlTWlkZGxlXSA9IFtdLFxuICAgICAgICBfYVtSYW5nZVN0YXJ0XSA9IFtdLFxuICAgICAgICBfYVtPdXRzaWRlXSA9IFtdLFxuICAgICAgICBfYSk7XG4gICAgaWYgKGRheVBpY2tlci5mcm9tRGF0ZSkge1xuICAgICAgICBpbnRlcm5hbE1vZGlmaWVyc1tEaXNhYmxlZF0ucHVzaCh7IGJlZm9yZTogZGF5UGlja2VyLmZyb21EYXRlIH0pO1xuICAgIH1cbiAgICBpZiAoZGF5UGlja2VyLnRvRGF0ZSkge1xuICAgICAgICBpbnRlcm5hbE1vZGlmaWVyc1tEaXNhYmxlZF0ucHVzaCh7IGFmdGVyOiBkYXlQaWNrZXIudG9EYXRlIH0pO1xuICAgIH1cbiAgICBpZiAoaXNEYXlQaWNrZXJNdWx0aXBsZShkYXlQaWNrZXIpKSB7XG4gICAgICAgIGludGVybmFsTW9kaWZpZXJzW0Rpc2FibGVkXSA9IGludGVybmFsTW9kaWZpZXJzW0Rpc2FibGVkXS5jb25jYXQoc2VsZWN0TXVsdGlwbGUubW9kaWZpZXJzW0Rpc2FibGVkXSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzRGF5UGlja2VyUmFuZ2UoZGF5UGlja2VyKSkge1xuICAgICAgICBpbnRlcm5hbE1vZGlmaWVyc1tEaXNhYmxlZF0gPSBpbnRlcm5hbE1vZGlmaWVyc1tEaXNhYmxlZF0uY29uY2F0KHNlbGVjdFJhbmdlLm1vZGlmaWVyc1tEaXNhYmxlZF0pO1xuICAgICAgICBpbnRlcm5hbE1vZGlmaWVyc1tSYW5nZVN0YXJ0XSA9IHNlbGVjdFJhbmdlLm1vZGlmaWVyc1tSYW5nZVN0YXJ0XTtcbiAgICAgICAgaW50ZXJuYWxNb2RpZmllcnNbUmFuZ2VNaWRkbGVdID0gc2VsZWN0UmFuZ2UubW9kaWZpZXJzW1JhbmdlTWlkZGxlXTtcbiAgICAgICAgaW50ZXJuYWxNb2RpZmllcnNbUmFuZ2VFbmRdID0gc2VsZWN0UmFuZ2UubW9kaWZpZXJzW1JhbmdlRW5kXTtcbiAgICB9XG4gICAgcmV0dXJuIGludGVybmFsTW9kaWZpZXJzO1xufVxuXG4vKiogVGhlIE1vZGlmaWVycyBjb250ZXh0IHN0b3JlIHRoZSBtb2RpZmllcnMgdXNlZCBpbiBEYXlQaWNrZXIuIFRvIGFjY2VzcyB0aGUgdmFsdWUgb2YgdGhpcyBjb250ZXh0LCB1c2Uge0BsaW5rIHVzZU1vZGlmaWVyc30uICovXG52YXIgTW9kaWZpZXJzQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQodW5kZWZpbmVkKTtcbi8qKiBQcm92aWRlIHRoZSB2YWx1ZSBmb3IgdGhlIHtAbGluayBNb2RpZmllcnNDb250ZXh0fS4gKi9cbmZ1bmN0aW9uIE1vZGlmaWVyc1Byb3ZpZGVyKHByb3BzKSB7XG4gICAgdmFyIGRheVBpY2tlciA9IHVzZURheVBpY2tlcigpO1xuICAgIHZhciBzZWxlY3RNdWx0aXBsZSA9IHVzZVNlbGVjdE11bHRpcGxlKCk7XG4gICAgdmFyIHNlbGVjdFJhbmdlID0gdXNlU2VsZWN0UmFuZ2UoKTtcbiAgICB2YXIgaW50ZXJuYWxNb2RpZmllcnMgPSBnZXRJbnRlcm5hbE1vZGlmaWVycyhkYXlQaWNrZXIsIHNlbGVjdE11bHRpcGxlLCBzZWxlY3RSYW5nZSk7XG4gICAgdmFyIGN1c3RvbU1vZGlmaWVycyA9IGdldEN1c3RvbU1vZGlmaWVycyhkYXlQaWNrZXIubW9kaWZpZXJzKTtcbiAgICB2YXIgbW9kaWZpZXJzID0gX19hc3NpZ24oX19hc3NpZ24oe30sIGludGVybmFsTW9kaWZpZXJzKSwgY3VzdG9tTW9kaWZpZXJzKTtcbiAgICByZXR1cm4gKGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChNb2RpZmllcnNDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiBtb2RpZmllcnMsIGNoaWxkcmVuOiBwcm9wcy5jaGlsZHJlbiB9KSk7XG59XG4vKipcbiAqIFJldHVybiB0aGUgbW9kaWZpZXJzIHVzZWQgYnkgRGF5UGlja2VyLlxuICpcbiAqIFRoaXMgaG9vayBpcyBtZWFudCB0byBiZSB1c2VkIGluc2lkZSBpbnRlcm5hbCBvciBjdXN0b20gY29tcG9uZW50cy5cbiAqIFJlcXVpcmVzIHRvIGJlIHdyYXBwZWQgaW50byB7QGxpbmsgTW9kaWZpZXJzUHJvdmlkZXJ9LlxuICpcbiAqL1xuZnVuY3Rpb24gdXNlTW9kaWZpZXJzKCkge1xuICAgIHZhciBjb250ZXh0ID0gdXNlQ29udGV4dChNb2RpZmllcnNDb250ZXh0KTtcbiAgICBpZiAoIWNvbnRleHQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd1c2VNb2RpZmllcnMgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIE1vZGlmaWVyc1Byb3ZpZGVyJyk7XG4gICAgfVxuICAgIHJldHVybiBjb250ZXh0O1xufVxuXG4vKiogUmV0dXJucyB0cnVlIGlmIGBtYXRjaGVyYCBpcyBvZiB0eXBlIHtAbGluayBEYXRlSW50ZXJ2YWx9LiAqL1xuZnVuY3Rpb24gaXNEYXRlSW50ZXJ2YWwobWF0Y2hlcikge1xuICAgIHJldHVybiBCb29sZWFuKG1hdGNoZXIgJiZcbiAgICAgICAgdHlwZW9mIG1hdGNoZXIgPT09ICdvYmplY3QnICYmXG4gICAgICAgICdiZWZvcmUnIGluIG1hdGNoZXIgJiZcbiAgICAgICAgJ2FmdGVyJyBpbiBtYXRjaGVyKTtcbn1cbi8qKiBSZXR1cm5zIHRydWUgaWYgYHZhbHVlYCBpcyBhIHtAbGluayBEYXRlUmFuZ2V9IHR5cGUuICovXG5mdW5jdGlvbiBpc0RhdGVSYW5nZSh2YWx1ZSkge1xuICAgIHJldHVybiBCb29sZWFuKHZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgJ2Zyb20nIGluIHZhbHVlKTtcbn1cbi8qKiBSZXR1cm5zIHRydWUgaWYgYHZhbHVlYCBpcyBvZiB0eXBlIHtAbGluayBEYXRlQWZ0ZXJ9LiAqL1xuZnVuY3Rpb24gaXNEYXRlQWZ0ZXJUeXBlKHZhbHVlKSB7XG4gICAgcmV0dXJuIEJvb2xlYW4odmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiAnYWZ0ZXInIGluIHZhbHVlKTtcbn1cbi8qKiBSZXR1cm5zIHRydWUgaWYgYHZhbHVlYCBpcyBvZiB0eXBlIHtAbGluayBEYXRlQmVmb3JlfS4gKi9cbmZ1bmN0aW9uIGlzRGF0ZUJlZm9yZVR5cGUodmFsdWUpIHtcbiAgICByZXR1cm4gQm9vbGVhbih2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmICdiZWZvcmUnIGluIHZhbHVlKTtcbn1cbi8qKiBSZXR1cm5zIHRydWUgaWYgYHZhbHVlYCBpcyBhIHtAbGluayBEYXlPZldlZWt9IHR5cGUuICovXG5mdW5jdGlvbiBpc0RheU9mV2Vla1R5cGUodmFsdWUpIHtcbiAgICByZXR1cm4gQm9vbGVhbih2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmICdkYXlPZldlZWsnIGluIHZhbHVlKTtcbn1cblxuLyoqIFJldHVybiBgdHJ1ZWAgd2hldGhlciBgZGF0ZWAgaXMgaW5zaWRlIGByYW5nZWAuICovXG5mdW5jdGlvbiBpc0RhdGVJblJhbmdlKGRhdGUsIHJhbmdlKSB7XG4gICAgdmFyIF9hO1xuICAgIHZhciBmcm9tID0gcmFuZ2UuZnJvbSwgdG8gPSByYW5nZS50bztcbiAgICBpZiAoZnJvbSAmJiB0bykge1xuICAgICAgICB2YXIgaXNSYW5nZUludmVydGVkID0gZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzKHRvLCBmcm9tKSA8IDA7XG4gICAgICAgIGlmIChpc1JhbmdlSW52ZXJ0ZWQpIHtcbiAgICAgICAgICAgIF9hID0gW3RvLCBmcm9tXSwgZnJvbSA9IF9hWzBdLCB0byA9IF9hWzFdO1xuICAgICAgICB9XG4gICAgICAgIHZhciBpc0luUmFuZ2UgPSBkaWZmZXJlbmNlSW5DYWxlbmRhckRheXMoZGF0ZSwgZnJvbSkgPj0gMCAmJlxuICAgICAgICAgICAgZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzKHRvLCBkYXRlKSA+PSAwO1xuICAgICAgICByZXR1cm4gaXNJblJhbmdlO1xuICAgIH1cbiAgICBpZiAodG8pIHtcbiAgICAgICAgcmV0dXJuIGlzU2FtZURheSh0bywgZGF0ZSk7XG4gICAgfVxuICAgIGlmIChmcm9tKSB7XG4gICAgICAgIHJldHVybiBpc1NhbWVEYXkoZnJvbSwgZGF0ZSk7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cblxuLyoqIFJldHVybnMgdHJ1ZSBpZiBgdmFsdWVgIGlzIGEgRGF0ZSB0eXBlLiAqL1xuZnVuY3Rpb24gaXNEYXRlVHlwZSh2YWx1ZSkge1xuICAgIHJldHVybiBpc0RhdGUodmFsdWUpO1xufVxuLyoqIFJldHVybnMgdHJ1ZSBpZiBgdmFsdWVgIGlzIGFuIGFycmF5IG9mIHZhbGlkIGRhdGVzLiAqL1xuZnVuY3Rpb24gaXNBcnJheU9mRGF0ZXModmFsdWUpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiYgdmFsdWUuZXZlcnkoaXNEYXRlKTtcbn1cbi8qKlxuICogUmV0dXJucyB3aGV0aGVyIGEgZGF5IG1hdGNoZXMgYWdhaW5zdCBhdCBsZWFzdCBvbmUgb2YgdGhlIGdpdmVuIE1hdGNoZXJzLlxuICpcbiAqIGBgYFxuICogY29uc3QgZGF5ID0gbmV3IERhdGUoMjAyMiwgNSwgMTkpO1xuICogY29uc3QgbWF0Y2hlcjE6IERhdGVSYW5nZSA9IHtcbiAqICAgIGZyb206IG5ldyBEYXRlKDIwMjEsIDEyLCAyMSksXG4gKiAgICB0bzogbmV3IERhdGUoMjAyMSwgMTIsIDMwKVxuICogfVxuICogY29uc3QgbWF0Y2hlcjI6IERhdGVSYW5nZSA9IHtcbiAqICAgIGZyb206IG5ldyBEYXRlKDIwMjIsIDUsIDEpLFxuICogICAgdG86IG5ldyBEYXRlKDIwMjIsIDUsIDIzKVxuICogfVxuICpcbiAqIGNvbnN0IGlzTWF0Y2goZGF5LCBbbWF0Y2hlcjEsIG1hdGNoZXIyXSk7IC8vIHRydWUsIHNpbmNlIGRheSBpcyBpbiB0aGUgbWF0Y2hlcjEgcmFuZ2UuXG4gKiBgYGBcbiAqICovXG5mdW5jdGlvbiBpc01hdGNoKGRheSwgbWF0Y2hlcnMpIHtcbiAgICByZXR1cm4gbWF0Y2hlcnMuc29tZShmdW5jdGlvbiAobWF0Y2hlcikge1xuICAgICAgICBpZiAodHlwZW9mIG1hdGNoZXIgPT09ICdib29sZWFuJykge1xuICAgICAgICAgICAgcmV0dXJuIG1hdGNoZXI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzRGF0ZVR5cGUobWF0Y2hlcikpIHtcbiAgICAgICAgICAgIHJldHVybiBpc1NhbWVEYXkoZGF5LCBtYXRjaGVyKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNBcnJheU9mRGF0ZXMobWF0Y2hlcikpIHtcbiAgICAgICAgICAgIHJldHVybiBtYXRjaGVyLmluY2x1ZGVzKGRheSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzRGF0ZVJhbmdlKG1hdGNoZXIpKSB7XG4gICAgICAgICAgICByZXR1cm4gaXNEYXRlSW5SYW5nZShkYXksIG1hdGNoZXIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0RheU9mV2Vla1R5cGUobWF0Y2hlcikpIHtcbiAgICAgICAgICAgIHJldHVybiBtYXRjaGVyLmRheU9mV2Vlay5pbmNsdWRlcyhkYXkuZ2V0RGF5KCkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0RhdGVJbnRlcnZhbChtYXRjaGVyKSkge1xuICAgICAgICAgICAgdmFyIGRpZmZCZWZvcmUgPSBkaWZmZXJlbmNlSW5DYWxlbmRhckRheXMobWF0Y2hlci5iZWZvcmUsIGRheSk7XG4gICAgICAgICAgICB2YXIgZGlmZkFmdGVyID0gZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzKG1hdGNoZXIuYWZ0ZXIsIGRheSk7XG4gICAgICAgICAgICB2YXIgaXNEYXlCZWZvcmUgPSBkaWZmQmVmb3JlID4gMDtcbiAgICAgICAgICAgIHZhciBpc0RheUFmdGVyID0gZGlmZkFmdGVyIDwgMDtcbiAgICAgICAgICAgIHZhciBpc0Nsb3NlZEludGVydmFsID0gaXNBZnRlcihtYXRjaGVyLmJlZm9yZSwgbWF0Y2hlci5hZnRlcik7XG4gICAgICAgICAgICBpZiAoaXNDbG9zZWRJbnRlcnZhbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpc0RheUFmdGVyICYmIGlzRGF5QmVmb3JlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzRGF5QmVmb3JlIHx8IGlzRGF5QWZ0ZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzRGF0ZUFmdGVyVHlwZShtYXRjaGVyKSkge1xuICAgICAgICAgICAgcmV0dXJuIGRpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cyhkYXksIG1hdGNoZXIuYWZ0ZXIpID4gMDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNEYXRlQmVmb3JlVHlwZShtYXRjaGVyKSkge1xuICAgICAgICAgICAgcmV0dXJuIGRpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cyhtYXRjaGVyLmJlZm9yZSwgZGF5KSA+IDA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBtYXRjaGVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICByZXR1cm4gbWF0Y2hlcihkYXkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9KTtcbn1cblxuLyoqIFJldHVybiB0aGUgYWN0aXZlIG1vZGlmaWVycyBmb3IgdGhlIGdpdmVuIGRheS4gKi9cbmZ1bmN0aW9uIGdldEFjdGl2ZU1vZGlmaWVycyhkYXksIFxuLyoqIFRoZSBtb2RpZmllcnMgdG8gbWF0Y2ggZm9yIHRoZSBnaXZlbiBkYXRlLiAqL1xubW9kaWZpZXJzLCBcbi8qKiBUaGUgbW9udGggd2hlcmUgdGhlIGRheSBpcyBkaXNwbGF5ZWQsIHRvIGFkZCB0aGUgXCJvdXRzaWRlXCIgbW9kaWZpZXJzLiAgKi9cbmRpc3BsYXlNb250aCkge1xuICAgIHZhciBtYXRjaGVkTW9kaWZpZXJzID0gT2JqZWN0LmtleXMobW9kaWZpZXJzKS5yZWR1Y2UoZnVuY3Rpb24gKHJlc3VsdCwga2V5KSB7XG4gICAgICAgIHZhciBtb2RpZmllciA9IG1vZGlmaWVyc1trZXldO1xuICAgICAgICBpZiAoaXNNYXRjaChkYXksIG1vZGlmaWVyKSkge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2goa2V5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sIFtdKTtcbiAgICB2YXIgYWN0aXZlTW9kaWZpZXJzID0ge307XG4gICAgbWF0Y2hlZE1vZGlmaWVycy5mb3JFYWNoKGZ1bmN0aW9uIChtb2RpZmllcikgeyByZXR1cm4gKGFjdGl2ZU1vZGlmaWVyc1ttb2RpZmllcl0gPSB0cnVlKTsgfSk7XG4gICAgaWYgKGRpc3BsYXlNb250aCAmJiAhaXNTYW1lTW9udGgoZGF5LCBkaXNwbGF5TW9udGgpKSB7XG4gICAgICAgIGFjdGl2ZU1vZGlmaWVycy5vdXRzaWRlID0gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGFjdGl2ZU1vZGlmaWVycztcbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBkYXkgdGhhdCBzaG91bGQgYmUgdGhlIHRhcmdldCBvZiB0aGUgZm9jdXMgd2hlbiBEYXlQaWNrZXIgaXNcbiAqIHJlbmRlcmVkIHRoZSBmaXJzdCB0aW1lLlxuICpcbiAqIFRPRE86IHRoaXMgZnVuY3Rpb24gZG9lc24ndCBjb25zaWRlciBpZiB0aGUgZGF5IGlzIG91dHNpZGUgdGhlIG1vbnRoLiBXZVxuICogaW1wbGVtZW50ZWQgdGhpcyBjaGVjayBpbiBgdXNlRGF5UmVuZGVyYCBidXQgaXQgc2hvdWxkIHByb2JhYmx5IGdvIGhlcmUuIFNlZVxuICogaHR0cHM6Ly9naXRodWIuY29tL2dwYmwvcmVhY3QtZGF5LXBpY2tlci9wdWxsLzE1NzZcbiAqL1xuZnVuY3Rpb24gZ2V0SW5pdGlhbEZvY3VzVGFyZ2V0KGRpc3BsYXlNb250aHMsIG1vZGlmaWVycykge1xuICAgIHZhciBmaXJzdERheUluTW9udGggPSBzdGFydE9mTW9udGgoZGlzcGxheU1vbnRoc1swXSk7XG4gICAgdmFyIGxhc3REYXlJbk1vbnRoID0gZW5kT2ZNb250aChkaXNwbGF5TW9udGhzW2Rpc3BsYXlNb250aHMubGVuZ3RoIC0gMV0pO1xuICAgIC8vIFRPRE86IGNsZWFudXAgY29kZVxuICAgIHZhciBmaXJzdEZvY3VzYWJsZURheTtcbiAgICB2YXIgdG9kYXk7XG4gICAgdmFyIGRhdGUgPSBmaXJzdERheUluTW9udGg7XG4gICAgd2hpbGUgKGRhdGUgPD0gbGFzdERheUluTW9udGgpIHtcbiAgICAgICAgdmFyIGFjdGl2ZU1vZGlmaWVycyA9IGdldEFjdGl2ZU1vZGlmaWVycyhkYXRlLCBtb2RpZmllcnMpO1xuICAgICAgICB2YXIgaXNGb2N1c2FibGUgPSAhYWN0aXZlTW9kaWZpZXJzLmRpc2FibGVkICYmICFhY3RpdmVNb2RpZmllcnMuaGlkZGVuO1xuICAgICAgICBpZiAoIWlzRm9jdXNhYmxlKSB7XG4gICAgICAgICAgICBkYXRlID0gYWRkRGF5cyhkYXRlLCAxKTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhY3RpdmVNb2RpZmllcnMuc2VsZWN0ZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBkYXRlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhY3RpdmVNb2RpZmllcnMudG9kYXkgJiYgIXRvZGF5KSB7XG4gICAgICAgICAgICB0b2RheSA9IGRhdGU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFmaXJzdEZvY3VzYWJsZURheSkge1xuICAgICAgICAgICAgZmlyc3RGb2N1c2FibGVEYXkgPSBkYXRlO1xuICAgICAgICB9XG4gICAgICAgIGRhdGUgPSBhZGREYXlzKGRhdGUsIDEpO1xuICAgIH1cbiAgICBpZiAodG9kYXkpIHtcbiAgICAgICAgcmV0dXJuIHRvZGF5O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGZpcnN0Rm9jdXNhYmxlRGF5O1xuICAgIH1cbn1cblxudmFyIE1BWF9SRVRSWSA9IDM2NTtcbi8qKiBSZXR1cm4gdGhlIG5leHQgZGF0ZSB0byBiZSBmb2N1c2VkLiAqL1xuZnVuY3Rpb24gZ2V0TmV4dEZvY3VzKGZvY3VzZWREYXksIG9wdGlvbnMpIHtcbiAgICB2YXIgbW92ZUJ5ID0gb3B0aW9ucy5tb3ZlQnksIGRpcmVjdGlvbiA9IG9wdGlvbnMuZGlyZWN0aW9uLCBjb250ZXh0ID0gb3B0aW9ucy5jb250ZXh0LCBtb2RpZmllcnMgPSBvcHRpb25zLm1vZGlmaWVycywgX2EgPSBvcHRpb25zLnJldHJ5LCByZXRyeSA9IF9hID09PSB2b2lkIDAgPyB7IGNvdW50OiAwLCBsYXN0Rm9jdXNlZDogZm9jdXNlZERheSB9IDogX2E7XG4gICAgdmFyIHdlZWtTdGFydHNPbiA9IGNvbnRleHQud2Vla1N0YXJ0c09uLCBmcm9tRGF0ZSA9IGNvbnRleHQuZnJvbURhdGUsIHRvRGF0ZSA9IGNvbnRleHQudG9EYXRlLCBsb2NhbGUgPSBjb250ZXh0LmxvY2FsZTtcbiAgICB2YXIgbW92ZUZucyA9IHtcbiAgICAgICAgZGF5OiBhZGREYXlzLFxuICAgICAgICB3ZWVrOiBhZGRXZWVrcyxcbiAgICAgICAgbW9udGg6IGFkZE1vbnRocyxcbiAgICAgICAgeWVhcjogYWRkWWVhcnMsXG4gICAgICAgIHN0YXJ0T2ZXZWVrOiBmdW5jdGlvbiAoZGF0ZSkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuSVNPV2Vla1xuICAgICAgICAgICAgICAgID8gc3RhcnRPZklTT1dlZWsoZGF0ZSlcbiAgICAgICAgICAgICAgICA6IHN0YXJ0T2ZXZWVrKGRhdGUsIHsgbG9jYWxlOiBsb2NhbGUsIHdlZWtTdGFydHNPbjogd2Vla1N0YXJ0c09uIH0pO1xuICAgICAgICB9LFxuICAgICAgICBlbmRPZldlZWs6IGZ1bmN0aW9uIChkYXRlKSB7XG4gICAgICAgICAgICByZXR1cm4gY29udGV4dC5JU09XZWVrXG4gICAgICAgICAgICAgICAgPyBlbmRPZklTT1dlZWsoZGF0ZSlcbiAgICAgICAgICAgICAgICA6IGVuZE9mV2VlayhkYXRlLCB7IGxvY2FsZTogbG9jYWxlLCB3ZWVrU3RhcnRzT246IHdlZWtTdGFydHNPbiB9KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdmFyIG5ld0ZvY3VzZWREYXkgPSBtb3ZlRm5zW21vdmVCeV0oZm9jdXNlZERheSwgZGlyZWN0aW9uID09PSAnYWZ0ZXInID8gMSA6IC0xKTtcbiAgICBpZiAoZGlyZWN0aW9uID09PSAnYmVmb3JlJyAmJiBmcm9tRGF0ZSkge1xuICAgICAgICBuZXdGb2N1c2VkRGF5ID0gbWF4KFtmcm9tRGF0ZSwgbmV3Rm9jdXNlZERheV0pO1xuICAgIH1cbiAgICBlbHNlIGlmIChkaXJlY3Rpb24gPT09ICdhZnRlcicgJiYgdG9EYXRlKSB7XG4gICAgICAgIG5ld0ZvY3VzZWREYXkgPSBtaW4oW3RvRGF0ZSwgbmV3Rm9jdXNlZERheV0pO1xuICAgIH1cbiAgICB2YXIgaXNGb2N1c2FibGUgPSB0cnVlO1xuICAgIGlmIChtb2RpZmllcnMpIHtcbiAgICAgICAgdmFyIGFjdGl2ZU1vZGlmaWVycyA9IGdldEFjdGl2ZU1vZGlmaWVycyhuZXdGb2N1c2VkRGF5LCBtb2RpZmllcnMpO1xuICAgICAgICBpc0ZvY3VzYWJsZSA9ICFhY3RpdmVNb2RpZmllcnMuZGlzYWJsZWQgJiYgIWFjdGl2ZU1vZGlmaWVycy5oaWRkZW47XG4gICAgfVxuICAgIGlmIChpc0ZvY3VzYWJsZSkge1xuICAgICAgICByZXR1cm4gbmV3Rm9jdXNlZERheTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGlmIChyZXRyeS5jb3VudCA+IE1BWF9SRVRSWSkge1xuICAgICAgICAgICAgcmV0dXJuIHJldHJ5Lmxhc3RGb2N1c2VkO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBnZXROZXh0Rm9jdXMobmV3Rm9jdXNlZERheSwge1xuICAgICAgICAgICAgbW92ZUJ5OiBtb3ZlQnksXG4gICAgICAgICAgICBkaXJlY3Rpb246IGRpcmVjdGlvbixcbiAgICAgICAgICAgIGNvbnRleHQ6IGNvbnRleHQsXG4gICAgICAgICAgICBtb2RpZmllcnM6IG1vZGlmaWVycyxcbiAgICAgICAgICAgIHJldHJ5OiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgcmV0cnkpLCB7IGNvdW50OiByZXRyeS5jb3VudCArIDEgfSlcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG4vKipcbiAqIFRoZSBGb2N1cyBjb250ZXh0IHNoYXJlcyBkZXRhaWxzIGFib3V0IHRoZSBmb2N1c2VkIGRheSBmb3IgdGhlIGtleWJvYXJkXG4gKlxuICogQWNjZXNzIHRoaXMgY29udGV4dCBmcm9tIHRoZSB7QGxpbmsgdXNlRm9jdXNDb250ZXh0fSBob29rLlxuICovXG52YXIgRm9jdXNDb250ZXh0ID0gY3JlYXRlQ29udGV4dCh1bmRlZmluZWQpO1xuLyoqIFRoZSBwcm92aWRlciBmb3IgdGhlIHtAbGluayBGb2N1c0NvbnRleHR9LiAqL1xuZnVuY3Rpb24gRm9jdXNQcm92aWRlcihwcm9wcykge1xuICAgIHZhciBuYXZpZ2F0aW9uID0gdXNlTmF2aWdhdGlvbigpO1xuICAgIHZhciBtb2RpZmllcnMgPSB1c2VNb2RpZmllcnMoKTtcbiAgICB2YXIgX2EgPSB1c2VTdGF0ZSgpLCBmb2N1c2VkRGF5ID0gX2FbMF0sIHNldEZvY3VzZWREYXkgPSBfYVsxXTtcbiAgICB2YXIgX2IgPSB1c2VTdGF0ZSgpLCBsYXN0Rm9jdXNlZCA9IF9iWzBdLCBzZXRMYXN0Rm9jdXNlZCA9IF9iWzFdO1xuICAgIHZhciBpbml0aWFsRm9jdXNUYXJnZXQgPSBnZXRJbml0aWFsRm9jdXNUYXJnZXQobmF2aWdhdGlvbi5kaXNwbGF5TW9udGhzLCBtb2RpZmllcnMpO1xuICAgIC8vIFRPRE86IGNsZWFudXAgYW5kIHRlc3Qgb2JzY3VyZSBjb2RlIGJlbG93XG4gICAgdmFyIGZvY3VzVGFyZ2V0ID0gKGZvY3VzZWREYXkgIT09IG51bGwgJiYgZm9jdXNlZERheSAhPT0gdm9pZCAwID8gZm9jdXNlZERheSA6IChsYXN0Rm9jdXNlZCAmJiBuYXZpZ2F0aW9uLmlzRGF0ZURpc3BsYXllZChsYXN0Rm9jdXNlZCkpKVxuICAgICAgICA/IGxhc3RGb2N1c2VkXG4gICAgICAgIDogaW5pdGlhbEZvY3VzVGFyZ2V0O1xuICAgIHZhciBibHVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBzZXRMYXN0Rm9jdXNlZChmb2N1c2VkRGF5KTtcbiAgICAgICAgc2V0Rm9jdXNlZERheSh1bmRlZmluZWQpO1xuICAgIH07XG4gICAgdmFyIGZvY3VzID0gZnVuY3Rpb24gKGRhdGUpIHtcbiAgICAgICAgc2V0Rm9jdXNlZERheShkYXRlKTtcbiAgICB9O1xuICAgIHZhciBjb250ZXh0ID0gdXNlRGF5UGlja2VyKCk7XG4gICAgdmFyIG1vdmVGb2N1cyA9IGZ1bmN0aW9uIChtb3ZlQnksIGRpcmVjdGlvbikge1xuICAgICAgICBpZiAoIWZvY3VzZWREYXkpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHZhciBuZXh0Rm9jdXNlZCA9IGdldE5leHRGb2N1cyhmb2N1c2VkRGF5LCB7XG4gICAgICAgICAgICBtb3ZlQnk6IG1vdmVCeSxcbiAgICAgICAgICAgIGRpcmVjdGlvbjogZGlyZWN0aW9uLFxuICAgICAgICAgICAgY29udGV4dDogY29udGV4dCxcbiAgICAgICAgICAgIG1vZGlmaWVyczogbW9kaWZpZXJzXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoaXNTYW1lRGF5KGZvY3VzZWREYXksIG5leHRGb2N1c2VkKSlcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIG5hdmlnYXRpb24uZ29Ub0RhdGUobmV4dEZvY3VzZWQsIGZvY3VzZWREYXkpO1xuICAgICAgICBmb2N1cyhuZXh0Rm9jdXNlZCk7XG4gICAgfTtcbiAgICB2YXIgdmFsdWUgPSB7XG4gICAgICAgIGZvY3VzZWREYXk6IGZvY3VzZWREYXksXG4gICAgICAgIGZvY3VzVGFyZ2V0OiBmb2N1c1RhcmdldCxcbiAgICAgICAgYmx1cjogYmx1cixcbiAgICAgICAgZm9jdXM6IGZvY3VzLFxuICAgICAgICBmb2N1c0RheUFmdGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBtb3ZlRm9jdXMoJ2RheScsICdhZnRlcicpOyB9LFxuICAgICAgICBmb2N1c0RheUJlZm9yZTogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW92ZUZvY3VzKCdkYXknLCAnYmVmb3JlJyk7IH0sXG4gICAgICAgIGZvY3VzV2Vla0FmdGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBtb3ZlRm9jdXMoJ3dlZWsnLCAnYWZ0ZXInKTsgfSxcbiAgICAgICAgZm9jdXNXZWVrQmVmb3JlOiBmdW5jdGlvbiAoKSB7IHJldHVybiBtb3ZlRm9jdXMoJ3dlZWsnLCAnYmVmb3JlJyk7IH0sXG4gICAgICAgIGZvY3VzTW9udGhCZWZvcmU6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vdmVGb2N1cygnbW9udGgnLCAnYmVmb3JlJyk7IH0sXG4gICAgICAgIGZvY3VzTW9udGhBZnRlcjogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW92ZUZvY3VzKCdtb250aCcsICdhZnRlcicpOyB9LFxuICAgICAgICBmb2N1c1llYXJCZWZvcmU6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vdmVGb2N1cygneWVhcicsICdiZWZvcmUnKTsgfSxcbiAgICAgICAgZm9jdXNZZWFyQWZ0ZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vdmVGb2N1cygneWVhcicsICdhZnRlcicpOyB9LFxuICAgICAgICBmb2N1c1N0YXJ0T2ZXZWVrOiBmdW5jdGlvbiAoKSB7IHJldHVybiBtb3ZlRm9jdXMoJ3N0YXJ0T2ZXZWVrJywgJ2JlZm9yZScpOyB9LFxuICAgICAgICBmb2N1c0VuZE9mV2VlazogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW92ZUZvY3VzKCdlbmRPZldlZWsnLCAnYWZ0ZXInKTsgfVxuICAgIH07XG4gICAgcmV0dXJuIChqc3hSdW50aW1lRXhwb3J0cy5qc3goRm9jdXNDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiB2YWx1ZSwgY2hpbGRyZW46IHByb3BzLmNoaWxkcmVuIH0pKTtcbn1cbi8qKlxuICogSG9vayB0byBhY2Nlc3MgdGhlIHtAbGluayBGb2N1c0NvbnRleHRWYWx1ZX0uIFVzZSB0aGlzIGhvb2sgdG8gaGFuZGxlIHRoZVxuICogZm9jdXMgc3RhdGUgb2YgdGhlIGVsZW1lbnRzLlxuICpcbiAqIFRoaXMgaG9vayBpcyBtZWFudCB0byBiZSB1c2VkIGluc2lkZSBpbnRlcm5hbCBvciBjdXN0b20gY29tcG9uZW50cy5cbiAqL1xuZnVuY3Rpb24gdXNlRm9jdXNDb250ZXh0KCkge1xuICAgIHZhciBjb250ZXh0ID0gdXNlQ29udGV4dChGb2N1c0NvbnRleHQpO1xuICAgIGlmICghY29udGV4dCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3VzZUZvY3VzQ29udGV4dCBtdXN0IGJlIHVzZWQgd2l0aGluIGEgRm9jdXNQcm92aWRlcicpO1xuICAgIH1cbiAgICByZXR1cm4gY29udGV4dDtcbn1cblxuLyoqXG4gKiBSZXR1cm4gdGhlIGFjdGl2ZSBtb2RpZmllcnMgZm9yIHRoZSBzcGVjaWZpZWQgZGF5LlxuICpcbiAqIFRoaXMgaG9vayBpcyBtZWFudCB0byBiZSB1c2VkIGluc2lkZSBpbnRlcm5hbCBvciBjdXN0b20gY29tcG9uZW50cy5cbiAqXG4gKiBAcGFyYW0gZGF5XG4gKiBAcGFyYW0gZGlzcGxheU1vbnRoXG4gKi9cbmZ1bmN0aW9uIHVzZUFjdGl2ZU1vZGlmaWVycyhkYXksIFxuLyoqXG4gKiBUaGUgbW9udGggd2hlcmUgdGhlIGRhdGUgaXMgZGlzcGxheWVkLiBJZiBub3QgdGhlIHNhbWUgYXMgYGRhdGVgLCB0aGUgZGF5XG4gKiBpcyBhbiBcIm91dHNpZGUgZGF5XCIuXG4gKi9cbmRpc3BsYXlNb250aCkge1xuICAgIHZhciBtb2RpZmllcnMgPSB1c2VNb2RpZmllcnMoKTtcbiAgICB2YXIgYWN0aXZlTW9kaWZpZXJzID0gZ2V0QWN0aXZlTW9kaWZpZXJzKGRheSwgbW9kaWZpZXJzLCBkaXNwbGF5TW9udGgpO1xuICAgIHJldHVybiBhY3RpdmVNb2RpZmllcnM7XG59XG5cbi8qKlxuICogVGhlIFNlbGVjdFNpbmdsZSBjb250ZXh0IHNoYXJlcyBkZXRhaWxzIGFib3V0IHRoZSBzZWxlY3RlZCBkYXlzIHdoZW4gaW5cbiAqIHNpbmdsZSBzZWxlY3Rpb24gbW9kZS5cbiAqXG4gKiBBY2Nlc3MgdGhpcyBjb250ZXh0IGZyb20gdGhlIHtAbGluayB1c2VTZWxlY3RTaW5nbGV9IGhvb2suXG4gKi9cbnZhciBTZWxlY3RTaW5nbGVDb250ZXh0ID0gY3JlYXRlQ29udGV4dCh1bmRlZmluZWQpO1xuLyoqIFByb3ZpZGVzIHRoZSB2YWx1ZXMgZm9yIHRoZSB7QGxpbmsgU2VsZWN0U2luZ2xlUHJvdmlkZXJ9LiAqL1xuZnVuY3Rpb24gU2VsZWN0U2luZ2xlUHJvdmlkZXIocHJvcHMpIHtcbiAgICBpZiAoIWlzRGF5UGlja2VyU2luZ2xlKHByb3BzLmluaXRpYWxQcm9wcykpIHtcbiAgICAgICAgdmFyIGVtcHR5Q29udGV4dFZhbHVlID0ge1xuICAgICAgICAgICAgc2VsZWN0ZWQ6IHVuZGVmaW5lZFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gKGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChTZWxlY3RTaW5nbGVDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiBlbXB0eUNvbnRleHRWYWx1ZSwgY2hpbGRyZW46IHByb3BzLmNoaWxkcmVuIH0pKTtcbiAgICB9XG4gICAgcmV0dXJuIChqc3hSdW50aW1lRXhwb3J0cy5qc3goU2VsZWN0U2luZ2xlUHJvdmlkZXJJbnRlcm5hbCwgeyBpbml0aWFsUHJvcHM6IHByb3BzLmluaXRpYWxQcm9wcywgY2hpbGRyZW46IHByb3BzLmNoaWxkcmVuIH0pKTtcbn1cbmZ1bmN0aW9uIFNlbGVjdFNpbmdsZVByb3ZpZGVySW50ZXJuYWwoX2EpIHtcbiAgICB2YXIgaW5pdGlhbFByb3BzID0gX2EuaW5pdGlhbFByb3BzLCBjaGlsZHJlbiA9IF9hLmNoaWxkcmVuO1xuICAgIHZhciBvbkRheUNsaWNrID0gZnVuY3Rpb24gKGRheSwgYWN0aXZlTW9kaWZpZXJzLCBlKSB7XG4gICAgICAgIHZhciBfYSwgX2IsIF9jO1xuICAgICAgICAoX2EgPSBpbml0aWFsUHJvcHMub25EYXlDbGljaykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwoaW5pdGlhbFByb3BzLCBkYXksIGFjdGl2ZU1vZGlmaWVycywgZSk7XG4gICAgICAgIGlmIChhY3RpdmVNb2RpZmllcnMuc2VsZWN0ZWQgJiYgIWluaXRpYWxQcm9wcy5yZXF1aXJlZCkge1xuICAgICAgICAgICAgKF9iID0gaW5pdGlhbFByb3BzLm9uU2VsZWN0KSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FsbChpbml0aWFsUHJvcHMsIHVuZGVmaW5lZCwgZGF5LCBhY3RpdmVNb2RpZmllcnMsIGUpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIChfYyA9IGluaXRpYWxQcm9wcy5vblNlbGVjdCkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmNhbGwoaW5pdGlhbFByb3BzLCBkYXksIGRheSwgYWN0aXZlTW9kaWZpZXJzLCBlKTtcbiAgICB9O1xuICAgIHZhciBjb250ZXh0VmFsdWUgPSB7XG4gICAgICAgIHNlbGVjdGVkOiBpbml0aWFsUHJvcHMuc2VsZWN0ZWQsXG4gICAgICAgIG9uRGF5Q2xpY2s6IG9uRGF5Q2xpY2tcbiAgICB9O1xuICAgIHJldHVybiAoanN4UnVudGltZUV4cG9ydHMuanN4KFNlbGVjdFNpbmdsZUNvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWU6IGNvbnRleHRWYWx1ZSwgY2hpbGRyZW46IGNoaWxkcmVuIH0pKTtcbn1cbi8qKlxuICogSG9vayB0byBhY2Nlc3MgdGhlIHtAbGluayBTZWxlY3RTaW5nbGVDb250ZXh0VmFsdWV9LlxuICpcbiAqIFRoaXMgaG9vayBpcyBtZWFudCB0byBiZSB1c2VkIGluc2lkZSBpbnRlcm5hbCBvciBjdXN0b20gY29tcG9uZW50cy5cbiAqL1xuZnVuY3Rpb24gdXNlU2VsZWN0U2luZ2xlKCkge1xuICAgIHZhciBjb250ZXh0ID0gdXNlQ29udGV4dChTZWxlY3RTaW5nbGVDb250ZXh0KTtcbiAgICBpZiAoIWNvbnRleHQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd1c2VTZWxlY3RTaW5nbGUgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIFNlbGVjdFNpbmdsZVByb3ZpZGVyJyk7XG4gICAgfVxuICAgIHJldHVybiBjb250ZXh0O1xufVxuXG4vKipcbiAqIFRoaXMgaG9vayByZXR1cm5zIGRldGFpbHMgYWJvdXQgdGhlIGNvbnRlbnQgdG8gcmVuZGVyIGluIHRoZSBkYXkgY2VsbC5cbiAqXG4gKlxuICogV2hlbiBhIGRheSBjZWxsIGlzIHJlbmRlcmVkIGluIHRoZSB0YWJsZSwgRGF5UGlja2VyIGNhbiBlaXRoZXI6XG4gKlxuICogLSByZW5kZXIgbm90aGluZzogd2hlbiB0aGUgZGF5IGlzIG91dHNpZGUgdGhlIG1vbnRoIG9yIGhhcyBtYXRjaGVkIHRoZVxuICogICBcImhpZGRlblwiIG1vZGlmaWVyLlxuICogLSByZW5kZXIgYSBidXR0b24gd2hlbiBgb25EYXlDbGlja2Agb3IgYSBzZWxlY3Rpb24gbW9kZSBpcyBzZXQuXG4gKiAtIHJlbmRlciBhIG5vbi1pbnRlcmFjdGl2ZSBlbGVtZW50OiB3aGVuIG5vIHNlbGVjdGlvbiBtb2RlIGlzIHNldCwgdGhlIGRheVxuICogICBjZWxsIHNob3VsZG7igJl0IHJlc3BvbmQgdG8gYW55IGludGVyYWN0aW9uLiBEYXlQaWNrZXIgc2hvdWxkIHJlbmRlciBhIGBkaXZgXG4gKiAgIG9yIGEgYHNwYW5gLlxuICpcbiAqICMjIyBVc2FnZVxuICpcbiAqIFVzZSB0aGlzIGhvb2sgdG8gY3VzdG9taXplIHRoZSBiZWhhdmlvciBvZiB0aGUge0BsaW5rIERheX0gY29tcG9uZW50LiBDcmVhdGUgYVxuICogbmV3IGBEYXlgIGNvbXBvbmVudCB1c2luZyB0aGlzIGhvb2sgYW5kIHBhc3MgaXQgdG8gdGhlIGBjb21wb25lbnRzYCBwcm9wLlxuICogVGhlIHNvdXJjZSBvZiB7QGxpbmsgRGF5fSBjYW4gYmUgYSBnb29kIHN0YXJ0aW5nIHBvaW50LlxuICpcbiAqL1xuZnVuY3Rpb24gdXNlRGF5RXZlbnRIYW5kbGVycyhkYXRlLCBhY3RpdmVNb2RpZmllcnMpIHtcbiAgICB2YXIgZGF5UGlja2VyID0gdXNlRGF5UGlja2VyKCk7XG4gICAgdmFyIHNpbmdsZSA9IHVzZVNlbGVjdFNpbmdsZSgpO1xuICAgIHZhciBtdWx0aXBsZSA9IHVzZVNlbGVjdE11bHRpcGxlKCk7XG4gICAgdmFyIHJhbmdlID0gdXNlU2VsZWN0UmFuZ2UoKTtcbiAgICB2YXIgX2EgPSB1c2VGb2N1c0NvbnRleHQoKSwgZm9jdXNEYXlBZnRlciA9IF9hLmZvY3VzRGF5QWZ0ZXIsIGZvY3VzRGF5QmVmb3JlID0gX2EuZm9jdXNEYXlCZWZvcmUsIGZvY3VzV2Vla0FmdGVyID0gX2EuZm9jdXNXZWVrQWZ0ZXIsIGZvY3VzV2Vla0JlZm9yZSA9IF9hLmZvY3VzV2Vla0JlZm9yZSwgYmx1ciA9IF9hLmJsdXIsIGZvY3VzID0gX2EuZm9jdXMsIGZvY3VzTW9udGhCZWZvcmUgPSBfYS5mb2N1c01vbnRoQmVmb3JlLCBmb2N1c01vbnRoQWZ0ZXIgPSBfYS5mb2N1c01vbnRoQWZ0ZXIsIGZvY3VzWWVhckJlZm9yZSA9IF9hLmZvY3VzWWVhckJlZm9yZSwgZm9jdXNZZWFyQWZ0ZXIgPSBfYS5mb2N1c1llYXJBZnRlciwgZm9jdXNTdGFydE9mV2VlayA9IF9hLmZvY3VzU3RhcnRPZldlZWssIGZvY3VzRW5kT2ZXZWVrID0gX2EuZm9jdXNFbmRPZldlZWs7XG4gICAgdmFyIG9uQ2xpY2sgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICB2YXIgX2EsIF9iLCBfYywgX2Q7XG4gICAgICAgIGlmIChpc0RheVBpY2tlclNpbmdsZShkYXlQaWNrZXIpKSB7XG4gICAgICAgICAgICAoX2EgPSBzaW5nbGUub25EYXlDbGljaykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwoc2luZ2xlLCBkYXRlLCBhY3RpdmVNb2RpZmllcnMsIGUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGlzRGF5UGlja2VyTXVsdGlwbGUoZGF5UGlja2VyKSkge1xuICAgICAgICAgICAgKF9iID0gbXVsdGlwbGUub25EYXlDbGljaykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwobXVsdGlwbGUsIGRhdGUsIGFjdGl2ZU1vZGlmaWVycywgZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNEYXlQaWNrZXJSYW5nZShkYXlQaWNrZXIpKSB7XG4gICAgICAgICAgICAoX2MgPSByYW5nZS5vbkRheUNsaWNrKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuY2FsbChyYW5nZSwgZGF0ZSwgYWN0aXZlTW9kaWZpZXJzLCBlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIChfZCA9IGRheVBpY2tlci5vbkRheUNsaWNrKSA9PT0gbnVsbCB8fCBfZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2QuY2FsbChkYXlQaWNrZXIsIGRhdGUsIGFjdGl2ZU1vZGlmaWVycywgZSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHZhciBvbkZvY3VzID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBmb2N1cyhkYXRlKTtcbiAgICAgICAgKF9hID0gZGF5UGlja2VyLm9uRGF5Rm9jdXMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKGRheVBpY2tlciwgZGF0ZSwgYWN0aXZlTW9kaWZpZXJzLCBlKTtcbiAgICB9O1xuICAgIHZhciBvbkJsdXIgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGJsdXIoKTtcbiAgICAgICAgKF9hID0gZGF5UGlja2VyLm9uRGF5Qmx1cikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwoZGF5UGlja2VyLCBkYXRlLCBhY3RpdmVNb2RpZmllcnMsIGUpO1xuICAgIH07XG4gICAgdmFyIG9uTW91c2VFbnRlciA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgKF9hID0gZGF5UGlja2VyLm9uRGF5TW91c2VFbnRlcikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwoZGF5UGlja2VyLCBkYXRlLCBhY3RpdmVNb2RpZmllcnMsIGUpO1xuICAgIH07XG4gICAgdmFyIG9uTW91c2VMZWF2ZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgKF9hID0gZGF5UGlja2VyLm9uRGF5TW91c2VMZWF2ZSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwoZGF5UGlja2VyLCBkYXRlLCBhY3RpdmVNb2RpZmllcnMsIGUpO1xuICAgIH07XG4gICAgdmFyIG9uUG9pbnRlckVudGVyID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICAoX2EgPSBkYXlQaWNrZXIub25EYXlQb2ludGVyRW50ZXIpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKGRheVBpY2tlciwgZGF0ZSwgYWN0aXZlTW9kaWZpZXJzLCBlKTtcbiAgICB9O1xuICAgIHZhciBvblBvaW50ZXJMZWF2ZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgKF9hID0gZGF5UGlja2VyLm9uRGF5UG9pbnRlckxlYXZlKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FsbChkYXlQaWNrZXIsIGRhdGUsIGFjdGl2ZU1vZGlmaWVycywgZSk7XG4gICAgfTtcbiAgICB2YXIgb25Ub3VjaENhbmNlbCA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgKF9hID0gZGF5UGlja2VyLm9uRGF5VG91Y2hDYW5jZWwpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKGRheVBpY2tlciwgZGF0ZSwgYWN0aXZlTW9kaWZpZXJzLCBlKTtcbiAgICB9O1xuICAgIHZhciBvblRvdWNoRW5kID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICAoX2EgPSBkYXlQaWNrZXIub25EYXlUb3VjaEVuZCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwoZGF5UGlja2VyLCBkYXRlLCBhY3RpdmVNb2RpZmllcnMsIGUpO1xuICAgIH07XG4gICAgdmFyIG9uVG91Y2hNb3ZlID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICAoX2EgPSBkYXlQaWNrZXIub25EYXlUb3VjaE1vdmUpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKGRheVBpY2tlciwgZGF0ZSwgYWN0aXZlTW9kaWZpZXJzLCBlKTtcbiAgICB9O1xuICAgIHZhciBvblRvdWNoU3RhcnQgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIChfYSA9IGRheVBpY2tlci5vbkRheVRvdWNoU3RhcnQpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKGRheVBpY2tlciwgZGF0ZSwgYWN0aXZlTW9kaWZpZXJzLCBlKTtcbiAgICB9O1xuICAgIHZhciBvbktleVVwID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICAoX2EgPSBkYXlQaWNrZXIub25EYXlLZXlVcCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwoZGF5UGlja2VyLCBkYXRlLCBhY3RpdmVNb2RpZmllcnMsIGUpO1xuICAgIH07XG4gICAgdmFyIG9uS2V5RG93biA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgc3dpdGNoIChlLmtleSkge1xuICAgICAgICAgICAgY2FzZSAnQXJyb3dMZWZ0JzpcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICBkYXlQaWNrZXIuZGlyID09PSAncnRsJyA/IGZvY3VzRGF5QWZ0ZXIoKSA6IGZvY3VzRGF5QmVmb3JlKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdBcnJvd1JpZ2h0JzpcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICBkYXlQaWNrZXIuZGlyID09PSAncnRsJyA/IGZvY3VzRGF5QmVmb3JlKCkgOiBmb2N1c0RheUFmdGVyKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdBcnJvd0Rvd24nOlxuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgIGZvY3VzV2Vla0FmdGVyKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdBcnJvd1VwJzpcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICBmb2N1c1dlZWtCZWZvcmUoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ1BhZ2VVcCc6XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgZS5zaGlmdEtleSA/IGZvY3VzWWVhckJlZm9yZSgpIDogZm9jdXNNb250aEJlZm9yZSgpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnUGFnZURvd24nOlxuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgIGUuc2hpZnRLZXkgPyBmb2N1c1llYXJBZnRlcigpIDogZm9jdXNNb250aEFmdGVyKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdIb21lJzpcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICBmb2N1c1N0YXJ0T2ZXZWVrKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdFbmQnOlxuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgIGZvY3VzRW5kT2ZXZWVrKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgKF9hID0gZGF5UGlja2VyLm9uRGF5S2V5RG93bikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwoZGF5UGlja2VyLCBkYXRlLCBhY3RpdmVNb2RpZmllcnMsIGUpO1xuICAgIH07XG4gICAgdmFyIGV2ZW50SGFuZGxlcnMgPSB7XG4gICAgICAgIG9uQ2xpY2s6IG9uQ2xpY2ssXG4gICAgICAgIG9uRm9jdXM6IG9uRm9jdXMsXG4gICAgICAgIG9uQmx1cjogb25CbHVyLFxuICAgICAgICBvbktleURvd246IG9uS2V5RG93bixcbiAgICAgICAgb25LZXlVcDogb25LZXlVcCxcbiAgICAgICAgb25Nb3VzZUVudGVyOiBvbk1vdXNlRW50ZXIsXG4gICAgICAgIG9uTW91c2VMZWF2ZTogb25Nb3VzZUxlYXZlLFxuICAgICAgICBvblBvaW50ZXJFbnRlcjogb25Qb2ludGVyRW50ZXIsXG4gICAgICAgIG9uUG9pbnRlckxlYXZlOiBvblBvaW50ZXJMZWF2ZSxcbiAgICAgICAgb25Ub3VjaENhbmNlbDogb25Ub3VjaENhbmNlbCxcbiAgICAgICAgb25Ub3VjaEVuZDogb25Ub3VjaEVuZCxcbiAgICAgICAgb25Ub3VjaE1vdmU6IG9uVG91Y2hNb3ZlLFxuICAgICAgICBvblRvdWNoU3RhcnQ6IG9uVG91Y2hTdGFydFxuICAgIH07XG4gICAgcmV0dXJuIGV2ZW50SGFuZGxlcnM7XG59XG5cbi8qKlxuICogUmV0dXJuIHRoZSBjdXJyZW50IHNlbGVjdGVkIGRheXMgd2hlbiBEYXlQaWNrZXIgaXMgaW4gc2VsZWN0aW9uIG1vZGUuIERheXNcbiAqIHNlbGVjdGVkIGJ5IHRoZSBjdXN0b20gc2VsZWN0aW9uIG1vZGUgYXJlIG5vdCByZXR1cm5lZC5cbiAqXG4gKiBUaGlzIGhvb2sgaXMgbWVhbnQgdG8gYmUgdXNlZCBpbnNpZGUgaW50ZXJuYWwgb3IgY3VzdG9tIGNvbXBvbmVudHMuXG4gKlxuICovXG5mdW5jdGlvbiB1c2VTZWxlY3RlZERheXMoKSB7XG4gICAgdmFyIGRheVBpY2tlciA9IHVzZURheVBpY2tlcigpO1xuICAgIHZhciBzaW5nbGUgPSB1c2VTZWxlY3RTaW5nbGUoKTtcbiAgICB2YXIgbXVsdGlwbGUgPSB1c2VTZWxlY3RNdWx0aXBsZSgpO1xuICAgIHZhciByYW5nZSA9IHVzZVNlbGVjdFJhbmdlKCk7XG4gICAgdmFyIHNlbGVjdGVkRGF5cyA9IGlzRGF5UGlja2VyU2luZ2xlKGRheVBpY2tlcilcbiAgICAgICAgPyBzaW5nbGUuc2VsZWN0ZWRcbiAgICAgICAgOiBpc0RheVBpY2tlck11bHRpcGxlKGRheVBpY2tlcilcbiAgICAgICAgICAgID8gbXVsdGlwbGUuc2VsZWN0ZWRcbiAgICAgICAgICAgIDogaXNEYXlQaWNrZXJSYW5nZShkYXlQaWNrZXIpXG4gICAgICAgICAgICAgICAgPyByYW5nZS5zZWxlY3RlZFxuICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuICAgIHJldHVybiBzZWxlY3RlZERheXM7XG59XG5cbmZ1bmN0aW9uIGlzSW50ZXJuYWxNb2RpZmllcihtb2RpZmllcikge1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKEludGVybmFsTW9kaWZpZXIpLmluY2x1ZGVzKG1vZGlmaWVyKTtcbn1cbi8qKlxuICogUmV0dXJuIHRoZSBjbGFzcyBuYW1lcyBmb3IgdGhlIERheSBlbGVtZW50LCBhY2NvcmRpbmcgdG8gdGhlIGdpdmVuIGFjdGl2ZVxuICogbW9kaWZpZXJzLlxuICpcbiAqIEN1c3RvbSBjbGFzcyBuYW1lcyBhcmUgc2V0IHZpYSBgbW9kaWZpZXJzQ2xhc3NOYW1lc2Agb3IgYGNsYXNzTmFtZXNgLFxuICogd2hlcmUgdGhlIGZpcnN0IGhhdmUgdGhlIHByZWNlZGVuY2UuXG4gKi9cbmZ1bmN0aW9uIGdldERheUNsYXNzTmFtZXMoZGF5UGlja2VyLCBhY3RpdmVNb2RpZmllcnMpIHtcbiAgICB2YXIgY2xhc3NOYW1lcyA9IFtkYXlQaWNrZXIuY2xhc3NOYW1lcy5kYXldO1xuICAgIE9iamVjdC5rZXlzKGFjdGl2ZU1vZGlmaWVycykuZm9yRWFjaChmdW5jdGlvbiAobW9kaWZpZXIpIHtcbiAgICAgICAgdmFyIGN1c3RvbUNsYXNzTmFtZSA9IGRheVBpY2tlci5tb2RpZmllcnNDbGFzc05hbWVzW21vZGlmaWVyXTtcbiAgICAgICAgaWYgKGN1c3RvbUNsYXNzTmFtZSkge1xuICAgICAgICAgICAgY2xhc3NOYW1lcy5wdXNoKGN1c3RvbUNsYXNzTmFtZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNJbnRlcm5hbE1vZGlmaWVyKG1vZGlmaWVyKSkge1xuICAgICAgICAgICAgdmFyIGludGVybmFsQ2xhc3NOYW1lID0gZGF5UGlja2VyLmNsYXNzTmFtZXNbXCJkYXlfXCIuY29uY2F0KG1vZGlmaWVyKV07XG4gICAgICAgICAgICBpZiAoaW50ZXJuYWxDbGFzc05hbWUpIHtcbiAgICAgICAgICAgICAgICBjbGFzc05hbWVzLnB1c2goaW50ZXJuYWxDbGFzc05hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIGNsYXNzTmFtZXM7XG59XG5cbi8qKiBSZXR1cm4gdGhlIHN0eWxlIGZvciB0aGUgRGF5IGVsZW1lbnQsIGFjY29yZGluZyB0byB0aGUgZ2l2ZW4gYWN0aXZlIG1vZGlmaWVycy4gKi9cbmZ1bmN0aW9uIGdldERheVN0eWxlKGRheVBpY2tlciwgYWN0aXZlTW9kaWZpZXJzKSB7XG4gICAgdmFyIHN0eWxlID0gX19hc3NpZ24oe30sIGRheVBpY2tlci5zdHlsZXMuZGF5KTtcbiAgICBPYmplY3Qua2V5cyhhY3RpdmVNb2RpZmllcnMpLmZvckVhY2goZnVuY3Rpb24gKG1vZGlmaWVyKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgc3R5bGUgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgc3R5bGUpLCAoX2EgPSBkYXlQaWNrZXIubW9kaWZpZXJzU3R5bGVzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2FbbW9kaWZpZXJdKTtcbiAgICB9KTtcbiAgICByZXR1cm4gc3R5bGU7XG59XG5cbi8qKlxuICogUmV0dXJuIHByb3BzIGFuZCBkYXRhIHVzZWQgdG8gcmVuZGVyIHRoZSB7QGxpbmsgRGF5fSBjb21wb25lbnQuXG4gKlxuICogVXNlIHRoaXMgaG9vayB3aGVuIGNyZWF0aW5nIGEgY29tcG9uZW50IHRvIHJlcGxhY2UgdGhlIGJ1aWx0LWluIGBEYXlgXG4gKiBjb21wb25lbnQuXG4gKi9cbmZ1bmN0aW9uIHVzZURheVJlbmRlcihcbi8qKiBUaGUgZGF0ZSB0byByZW5kZXIuICovXG5kYXksIFxuLyoqIFRoZSBtb250aCB3aGVyZSB0aGUgZGF0ZSBpcyBkaXNwbGF5ZWQgKGlmIG5vdCB0aGUgc2FtZSBhcyBgZGF0ZWAsIGl0IG1lYW5zIGl0IGlzIGFuIFwib3V0c2lkZVwiIGRheSkuICovXG5kaXNwbGF5TW9udGgsIFxuLyoqIEEgcmVmIHRvIHRoZSBidXR0b24gZWxlbWVudCB0aGF0IHdpbGwgYmUgdGFyZ2V0IG9mIGZvY3VzIHdoZW4gcmVuZGVyZWQgKGlmIHJlcXVpcmVkKS4gKi9cbmJ1dHRvblJlZikge1xuICAgIHZhciBfYTtcbiAgICB2YXIgX2IsIF9jO1xuICAgIHZhciBkYXlQaWNrZXIgPSB1c2VEYXlQaWNrZXIoKTtcbiAgICB2YXIgZm9jdXNDb250ZXh0ID0gdXNlRm9jdXNDb250ZXh0KCk7XG4gICAgdmFyIGFjdGl2ZU1vZGlmaWVycyA9IHVzZUFjdGl2ZU1vZGlmaWVycyhkYXksIGRpc3BsYXlNb250aCk7XG4gICAgdmFyIGV2ZW50SGFuZGxlcnMgPSB1c2VEYXlFdmVudEhhbmRsZXJzKGRheSwgYWN0aXZlTW9kaWZpZXJzKTtcbiAgICB2YXIgc2VsZWN0ZWREYXlzID0gdXNlU2VsZWN0ZWREYXlzKCk7XG4gICAgdmFyIGlzQnV0dG9uID0gQm9vbGVhbihkYXlQaWNrZXIub25EYXlDbGljayB8fCBkYXlQaWNrZXIubW9kZSAhPT0gJ2RlZmF1bHQnKTtcbiAgICAvLyBGb2N1cyB0aGUgYnV0dG9uIGlmIHRoZSBkYXkgaXMgZm9jdXNlZCBhY2NvcmRpbmcgdG8gdGhlIGZvY3VzIGNvbnRleHRcbiAgICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGlmIChhY3RpdmVNb2RpZmllcnMub3V0c2lkZSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgaWYgKCFmb2N1c0NvbnRleHQuZm9jdXNlZERheSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgaWYgKCFpc0J1dHRvbilcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgaWYgKGlzU2FtZURheShmb2N1c0NvbnRleHQuZm9jdXNlZERheSwgZGF5KSkge1xuICAgICAgICAgICAgKF9hID0gYnV0dG9uUmVmLmN1cnJlbnQpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5mb2N1cygpO1xuICAgICAgICB9XG4gICAgfSwgW1xuICAgICAgICBmb2N1c0NvbnRleHQuZm9jdXNlZERheSxcbiAgICAgICAgZGF5LFxuICAgICAgICBidXR0b25SZWYsXG4gICAgICAgIGlzQnV0dG9uLFxuICAgICAgICBhY3RpdmVNb2RpZmllcnMub3V0c2lkZVxuICAgIF0pO1xuICAgIHZhciBjbGFzc05hbWUgPSBnZXREYXlDbGFzc05hbWVzKGRheVBpY2tlciwgYWN0aXZlTW9kaWZpZXJzKS5qb2luKCcgJyk7XG4gICAgdmFyIHN0eWxlID0gZ2V0RGF5U3R5bGUoZGF5UGlja2VyLCBhY3RpdmVNb2RpZmllcnMpO1xuICAgIHZhciBpc0hpZGRlbiA9IEJvb2xlYW4oKGFjdGl2ZU1vZGlmaWVycy5vdXRzaWRlICYmICFkYXlQaWNrZXIuc2hvd091dHNpZGVEYXlzKSB8fFxuICAgICAgICBhY3RpdmVNb2RpZmllcnMuaGlkZGVuKTtcbiAgICB2YXIgRGF5Q29udGVudENvbXBvbmVudCA9IChfYyA9IChfYiA9IGRheVBpY2tlci5jb21wb25lbnRzKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuRGF5Q29udGVudCkgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogRGF5Q29udGVudDtcbiAgICB2YXIgY2hpbGRyZW4gPSAoanN4UnVudGltZUV4cG9ydHMuanN4KERheUNvbnRlbnRDb21wb25lbnQsIHsgZGF0ZTogZGF5LCBkaXNwbGF5TW9udGg6IGRpc3BsYXlNb250aCwgYWN0aXZlTW9kaWZpZXJzOiBhY3RpdmVNb2RpZmllcnMgfSkpO1xuICAgIHZhciBkaXZQcm9wcyA9IHtcbiAgICAgICAgc3R5bGU6IHN0eWxlLFxuICAgICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZSxcbiAgICAgICAgY2hpbGRyZW46IGNoaWxkcmVuLFxuICAgICAgICByb2xlOiAnZ3JpZGNlbGwnXG4gICAgfTtcbiAgICB2YXIgaXNGb2N1c1RhcmdldCA9IGZvY3VzQ29udGV4dC5mb2N1c1RhcmdldCAmJlxuICAgICAgICBpc1NhbWVEYXkoZm9jdXNDb250ZXh0LmZvY3VzVGFyZ2V0LCBkYXkpICYmXG4gICAgICAgICFhY3RpdmVNb2RpZmllcnMub3V0c2lkZTtcbiAgICB2YXIgaXNGb2N1c2VkID0gZm9jdXNDb250ZXh0LmZvY3VzZWREYXkgJiYgaXNTYW1lRGF5KGZvY3VzQ29udGV4dC5mb2N1c2VkRGF5LCBkYXkpO1xuICAgIHZhciBidXR0b25Qcm9wcyA9IF9fYXNzaWduKF9fYXNzaWduKF9fYXNzaWduKHt9LCBkaXZQcm9wcyksIChfYSA9IHsgZGlzYWJsZWQ6IGFjdGl2ZU1vZGlmaWVycy5kaXNhYmxlZCwgcm9sZTogJ2dyaWRjZWxsJyB9LCBfYVsnYXJpYS1zZWxlY3RlZCddID0gYWN0aXZlTW9kaWZpZXJzLnNlbGVjdGVkLCBfYS50YWJJbmRleCA9IGlzRm9jdXNlZCB8fCBpc0ZvY3VzVGFyZ2V0ID8gMCA6IC0xLCBfYSkpLCBldmVudEhhbmRsZXJzKTtcbiAgICB2YXIgZGF5UmVuZGVyID0ge1xuICAgICAgICBpc0J1dHRvbjogaXNCdXR0b24sXG4gICAgICAgIGlzSGlkZGVuOiBpc0hpZGRlbixcbiAgICAgICAgYWN0aXZlTW9kaWZpZXJzOiBhY3RpdmVNb2RpZmllcnMsXG4gICAgICAgIHNlbGVjdGVkRGF5czogc2VsZWN0ZWREYXlzLFxuICAgICAgICBidXR0b25Qcm9wczogYnV0dG9uUHJvcHMsXG4gICAgICAgIGRpdlByb3BzOiBkaXZQcm9wc1xuICAgIH07XG4gICAgcmV0dXJuIGRheVJlbmRlcjtcbn1cblxuLyoqXG4gKiBUaGUgY29udGVudCBvZiBhIGRheSBjZWxsIOKAkyBhcyBhIGJ1dHRvbiBvciBzcGFuIGVsZW1lbnQgYWNjb3JkaW5nIHRvIGl0c1xuICogbW9kaWZpZXJzLlxuICovXG5mdW5jdGlvbiBEYXkocHJvcHMpIHtcbiAgICB2YXIgYnV0dG9uUmVmID0gdXNlUmVmKG51bGwpO1xuICAgIHZhciBkYXlSZW5kZXIgPSB1c2VEYXlSZW5kZXIocHJvcHMuZGF0ZSwgcHJvcHMuZGlzcGxheU1vbnRoLCBidXR0b25SZWYpO1xuICAgIGlmIChkYXlSZW5kZXIuaXNIaWRkZW4pIHtcbiAgICAgICAgcmV0dXJuIGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChcImRpdlwiLCB7IHJvbGU6IFwiZ3JpZGNlbGxcIiB9KTtcbiAgICB9XG4gICAgaWYgKCFkYXlSZW5kZXIuaXNCdXR0b24pIHtcbiAgICAgICAgcmV0dXJuIGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChcImRpdlwiLCBfX2Fzc2lnbih7fSwgZGF5UmVuZGVyLmRpdlByb3BzKSk7XG4gICAgfVxuICAgIHJldHVybiBqc3hSdW50aW1lRXhwb3J0cy5qc3goQnV0dG9uLCBfX2Fzc2lnbih7IG5hbWU6IFwiZGF5XCIsIHJlZjogYnV0dG9uUmVmIH0sIGRheVJlbmRlci5idXR0b25Qcm9wcykpO1xufVxuXG4vKipcbiAqIFJlbmRlciB0aGUgd2VlayBudW1iZXIgZWxlbWVudC4gSWYgYG9uV2Vla051bWJlckNsaWNrYCBpcyBwYXNzZWQgdG8gRGF5UGlja2VyLCBpdFxuICogcmVuZGVycyBhIGJ1dHRvbiwgb3RoZXJ3aXNlIGEgc3BhbiBlbGVtZW50LlxuICovXG5mdW5jdGlvbiBXZWVrTnVtYmVyKHByb3BzKSB7XG4gICAgdmFyIHdlZWtOdW1iZXIgPSBwcm9wcy5udW1iZXIsIGRhdGVzID0gcHJvcHMuZGF0ZXM7XG4gICAgdmFyIF9hID0gdXNlRGF5UGlja2VyKCksIG9uV2Vla051bWJlckNsaWNrID0gX2Eub25XZWVrTnVtYmVyQ2xpY2ssIHN0eWxlcyA9IF9hLnN0eWxlcywgY2xhc3NOYW1lcyA9IF9hLmNsYXNzTmFtZXMsIGxvY2FsZSA9IF9hLmxvY2FsZSwgbGFiZWxXZWVrTnVtYmVyID0gX2EubGFiZWxzLmxhYmVsV2Vla051bWJlciwgZm9ybWF0V2Vla051bWJlciA9IF9hLmZvcm1hdHRlcnMuZm9ybWF0V2Vla051bWJlcjtcbiAgICB2YXIgY29udGVudCA9IGZvcm1hdFdlZWtOdW1iZXIoTnVtYmVyKHdlZWtOdW1iZXIpLCB7IGxvY2FsZTogbG9jYWxlIH0pO1xuICAgIGlmICghb25XZWVrTnVtYmVyQ2xpY2spIHtcbiAgICAgICAgcmV0dXJuIChqc3hSdW50aW1lRXhwb3J0cy5qc3goXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBjbGFzc05hbWVzLndlZWtudW1iZXIsIHN0eWxlOiBzdHlsZXMud2Vla251bWJlciwgY2hpbGRyZW46IGNvbnRlbnQgfSkpO1xuICAgIH1cbiAgICB2YXIgbGFiZWwgPSBsYWJlbFdlZWtOdW1iZXIoTnVtYmVyKHdlZWtOdW1iZXIpLCB7IGxvY2FsZTogbG9jYWxlIH0pO1xuICAgIHZhciBoYW5kbGVDbGljayA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIG9uV2Vla051bWJlckNsaWNrKHdlZWtOdW1iZXIsIGRhdGVzLCBlKTtcbiAgICB9O1xuICAgIHJldHVybiAoanN4UnVudGltZUV4cG9ydHMuanN4KEJ1dHRvbiwgeyBuYW1lOiBcIndlZWstbnVtYmVyXCIsIFwiYXJpYS1sYWJlbFwiOiBsYWJlbCwgY2xhc3NOYW1lOiBjbGFzc05hbWVzLndlZWtudW1iZXIsIHN0eWxlOiBzdHlsZXMud2Vla251bWJlciwgb25DbGljazogaGFuZGxlQ2xpY2ssIGNoaWxkcmVuOiBjb250ZW50IH0pKTtcbn1cblxuLyoqIFJlbmRlciBhIHJvdyBpbiB0aGUgY2FsZW5kYXIsIHdpdGggdGhlIGRheXMgYW5kIHRoZSB3ZWVrIG51bWJlci4gKi9cbmZ1bmN0aW9uIFJvdyhwcm9wcykge1xuICAgIHZhciBfYSwgX2I7XG4gICAgdmFyIF9jID0gdXNlRGF5UGlja2VyKCksIHN0eWxlcyA9IF9jLnN0eWxlcywgY2xhc3NOYW1lcyA9IF9jLmNsYXNzTmFtZXMsIHNob3dXZWVrTnVtYmVyID0gX2Muc2hvd1dlZWtOdW1iZXIsIGNvbXBvbmVudHMgPSBfYy5jb21wb25lbnRzO1xuICAgIHZhciBEYXlDb21wb25lbnQgPSAoX2EgPSBjb21wb25lbnRzID09PSBudWxsIHx8IGNvbXBvbmVudHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbXBvbmVudHMuRGF5KSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBEYXk7XG4gICAgdmFyIFdlZWtudW1iZXJDb21wb25lbnQgPSAoX2IgPSBjb21wb25lbnRzID09PSBudWxsIHx8IGNvbXBvbmVudHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbXBvbmVudHMuV2Vla051bWJlcikgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogV2Vla051bWJlcjtcbiAgICB2YXIgd2Vla051bWJlckNlbGw7XG4gICAgaWYgKHNob3dXZWVrTnVtYmVyKSB7XG4gICAgICAgIHdlZWtOdW1iZXJDZWxsID0gKGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChcInRkXCIsIHsgY2xhc3NOYW1lOiBjbGFzc05hbWVzLmNlbGwsIHN0eWxlOiBzdHlsZXMuY2VsbCwgY2hpbGRyZW46IGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChXZWVrbnVtYmVyQ29tcG9uZW50LCB7IG51bWJlcjogcHJvcHMud2Vla051bWJlciwgZGF0ZXM6IHByb3BzLmRhdGVzIH0pIH0pKTtcbiAgICB9XG4gICAgcmV0dXJuIChqc3hSdW50aW1lRXhwb3J0cy5qc3hzKFwidHJcIiwgeyBjbGFzc05hbWU6IGNsYXNzTmFtZXMucm93LCBzdHlsZTogc3R5bGVzLnJvdywgY2hpbGRyZW46IFt3ZWVrTnVtYmVyQ2VsbCwgcHJvcHMuZGF0ZXMubWFwKGZ1bmN0aW9uIChkYXRlKSB7IHJldHVybiAoanN4UnVudGltZUV4cG9ydHMuanN4KFwidGRcIiwgeyBjbGFzc05hbWU6IGNsYXNzTmFtZXMuY2VsbCwgc3R5bGU6IHN0eWxlcy5jZWxsLCByb2xlOiBcInByZXNlbnRhdGlvblwiLCBjaGlsZHJlbjoganN4UnVudGltZUV4cG9ydHMuanN4KERheUNvbXBvbmVudCwgeyBkaXNwbGF5TW9udGg6IHByb3BzLmRpc3BsYXlNb250aCwgZGF0ZTogZGF0ZSB9KSB9LCBnZXRVbml4VGltZShkYXRlKSkpOyB9KV0gfSkpO1xufVxuXG4vKiogUmV0dXJuIHRoZSB3ZWVrcyBiZXR3ZWVuIHR3byBkYXRlcy4gICovXG5mdW5jdGlvbiBkYXlzVG9Nb250aFdlZWtzKGZyb21EYXRlLCB0b0RhdGUsIG9wdGlvbnMpIHtcbiAgICB2YXIgdG9XZWVrID0gKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5JU09XZWVrKVxuICAgICAgICA/IGVuZE9mSVNPV2Vlayh0b0RhdGUpXG4gICAgICAgIDogZW5kT2ZXZWVrKHRvRGF0ZSwgb3B0aW9ucyk7XG4gICAgdmFyIGZyb21XZWVrID0gKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5JU09XZWVrKVxuICAgICAgICA/IHN0YXJ0T2ZJU09XZWVrKGZyb21EYXRlKVxuICAgICAgICA6IHN0YXJ0T2ZXZWVrKGZyb21EYXRlLCBvcHRpb25zKTtcbiAgICB2YXIgbk9mRGF5cyA9IGRpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cyh0b1dlZWssIGZyb21XZWVrKTtcbiAgICB2YXIgZGF5cyA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDw9IG5PZkRheXM7IGkrKykge1xuICAgICAgICBkYXlzLnB1c2goYWRkRGF5cyhmcm9tV2VlaywgaSkpO1xuICAgIH1cbiAgICB2YXIgd2Vla3NJbk1vbnRoID0gZGF5cy5yZWR1Y2UoZnVuY3Rpb24gKHJlc3VsdCwgZGF0ZSkge1xuICAgICAgICB2YXIgd2Vla051bWJlciA9IChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuSVNPV2VlaylcbiAgICAgICAgICAgID8gZ2V0SVNPV2VlayhkYXRlKVxuICAgICAgICAgICAgOiBnZXRXZWVrKGRhdGUsIG9wdGlvbnMpO1xuICAgICAgICB2YXIgZXhpc3RpbmdXZWVrID0gcmVzdWx0LmZpbmQoZnVuY3Rpb24gKHZhbHVlKSB7IHJldHVybiB2YWx1ZS53ZWVrTnVtYmVyID09PSB3ZWVrTnVtYmVyOyB9KTtcbiAgICAgICAgaWYgKGV4aXN0aW5nV2Vlaykge1xuICAgICAgICAgICAgZXhpc3RpbmdXZWVrLmRhdGVzLnB1c2goZGF0ZSk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9XG4gICAgICAgIHJlc3VsdC5wdXNoKHtcbiAgICAgICAgICAgIHdlZWtOdW1iZXI6IHdlZWtOdW1iZXIsXG4gICAgICAgICAgICBkYXRlczogW2RhdGVdXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sIFtdKTtcbiAgICByZXR1cm4gd2Vla3NJbk1vbnRoO1xufVxuXG4vKipcbiAqIFJldHVybiB0aGUgd2Vla3MgYmVsb25naW5nIHRvIHRoZSBnaXZlbiBtb250aCwgYWRkaW5nIHRoZSBcIm91dHNpZGUgZGF5c1wiIHRvXG4gKiB0aGUgZmlyc3QgYW5kIGxhc3Qgd2Vlay5cbiAqL1xuZnVuY3Rpb24gZ2V0TW9udGhXZWVrcyhtb250aCwgb3B0aW9ucykge1xuICAgIHZhciB3ZWVrc0luTW9udGggPSBkYXlzVG9Nb250aFdlZWtzKHN0YXJ0T2ZNb250aChtb250aCksIGVuZE9mTW9udGgobW9udGgpLCBvcHRpb25zKTtcbiAgICBpZiAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnVzZUZpeGVkV2Vla3MpIHtcbiAgICAgICAgLy8gQWRkIGV4dHJhIHdlZWtzIHRvIHRoZSBtb250aCwgdXAgdG8gNiB3ZWVrc1xuICAgICAgICB2YXIgbnJPZk1vbnRoV2Vla3MgPSBnZXRXZWVrc0luTW9udGgobW9udGgsIG9wdGlvbnMpO1xuICAgICAgICBpZiAobnJPZk1vbnRoV2Vla3MgPCA2KSB7XG4gICAgICAgICAgICB2YXIgbGFzdFdlZWsgPSB3ZWVrc0luTW9udGhbd2Vla3NJbk1vbnRoLmxlbmd0aCAtIDFdO1xuICAgICAgICAgICAgdmFyIGxhc3REYXRlID0gbGFzdFdlZWsuZGF0ZXNbbGFzdFdlZWsuZGF0ZXMubGVuZ3RoIC0gMV07XG4gICAgICAgICAgICB2YXIgdG9EYXRlID0gYWRkV2Vla3MobGFzdERhdGUsIDYgLSBuck9mTW9udGhXZWVrcyk7XG4gICAgICAgICAgICB2YXIgZXh0cmFXZWVrcyA9IGRheXNUb01vbnRoV2Vla3MoYWRkV2Vla3MobGFzdERhdGUsIDEpLCB0b0RhdGUsIG9wdGlvbnMpO1xuICAgICAgICAgICAgd2Vla3NJbk1vbnRoLnB1c2guYXBwbHkod2Vla3NJbk1vbnRoLCBleHRyYVdlZWtzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gd2Vla3NJbk1vbnRoO1xufVxuXG4vKiogUmVuZGVyIHRoZSB0YWJsZSB3aXRoIHRoZSBjYWxlbmRhci4gKi9cbmZ1bmN0aW9uIFRhYmxlKHByb3BzKSB7XG4gICAgdmFyIF9hLCBfYiwgX2M7XG4gICAgdmFyIF9kID0gdXNlRGF5UGlja2VyKCksIGxvY2FsZSA9IF9kLmxvY2FsZSwgY2xhc3NOYW1lcyA9IF9kLmNsYXNzTmFtZXMsIHN0eWxlcyA9IF9kLnN0eWxlcywgaGlkZUhlYWQgPSBfZC5oaWRlSGVhZCwgZml4ZWRXZWVrcyA9IF9kLmZpeGVkV2Vla3MsIGNvbXBvbmVudHMgPSBfZC5jb21wb25lbnRzLCB3ZWVrU3RhcnRzT24gPSBfZC53ZWVrU3RhcnRzT24sIGZpcnN0V2Vla0NvbnRhaW5zRGF0ZSA9IF9kLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZSwgSVNPV2VlayA9IF9kLklTT1dlZWs7XG4gICAgdmFyIHdlZWtzID0gZ2V0TW9udGhXZWVrcyhwcm9wcy5kaXNwbGF5TW9udGgsIHtcbiAgICAgICAgdXNlRml4ZWRXZWVrczogQm9vbGVhbihmaXhlZFdlZWtzKSxcbiAgICAgICAgSVNPV2VlazogSVNPV2VlayxcbiAgICAgICAgbG9jYWxlOiBsb2NhbGUsXG4gICAgICAgIHdlZWtTdGFydHNPbjogd2Vla1N0YXJ0c09uLFxuICAgICAgICBmaXJzdFdlZWtDb250YWluc0RhdGU6IGZpcnN0V2Vla0NvbnRhaW5zRGF0ZVxuICAgIH0pO1xuICAgIHZhciBIZWFkQ29tcG9uZW50ID0gKF9hID0gY29tcG9uZW50cyA9PT0gbnVsbCB8fCBjb21wb25lbnRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb21wb25lbnRzLkhlYWQpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IEhlYWQ7XG4gICAgdmFyIFJvd0NvbXBvbmVudCA9IChfYiA9IGNvbXBvbmVudHMgPT09IG51bGwgfHwgY29tcG9uZW50cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29tcG9uZW50cy5Sb3cpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IFJvdztcbiAgICB2YXIgRm9vdGVyQ29tcG9uZW50ID0gKF9jID0gY29tcG9uZW50cyA9PT0gbnVsbCB8fCBjb21wb25lbnRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb21wb25lbnRzLkZvb3RlcikgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogRm9vdGVyO1xuICAgIHJldHVybiAoanN4UnVudGltZUV4cG9ydHMuanN4cyhcInRhYmxlXCIsIHsgaWQ6IHByb3BzLmlkLCBjbGFzc05hbWU6IGNsYXNzTmFtZXMudGFibGUsIHN0eWxlOiBzdHlsZXMudGFibGUsIHJvbGU6IFwiZ3JpZFwiLCBcImFyaWEtbGFiZWxsZWRieVwiOiBwcm9wc1snYXJpYS1sYWJlbGxlZGJ5J10sIGNoaWxkcmVuOiBbIWhpZGVIZWFkICYmIGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChIZWFkQ29tcG9uZW50LCB7fSksIGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChcInRib2R5XCIsIHsgY2xhc3NOYW1lOiBjbGFzc05hbWVzLnRib2R5LCBzdHlsZTogc3R5bGVzLnRib2R5LCBjaGlsZHJlbjogd2Vla3MubWFwKGZ1bmN0aW9uICh3ZWVrKSB7IHJldHVybiAoanN4UnVudGltZUV4cG9ydHMuanN4KFJvd0NvbXBvbmVudCwgeyBkaXNwbGF5TW9udGg6IHByb3BzLmRpc3BsYXlNb250aCwgZGF0ZXM6IHdlZWsuZGF0ZXMsIHdlZWtOdW1iZXI6IHdlZWsud2Vla051bWJlciB9LCB3ZWVrLndlZWtOdW1iZXIpKTsgfSkgfSksIGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChGb290ZXJDb21wb25lbnQsIHsgZGlzcGxheU1vbnRoOiBwcm9wcy5kaXNwbGF5TW9udGggfSldIH0pKTtcbn1cblxuLypcblRoZSBNSVQgTGljZW5zZSAoTUlUKVxuXG5Db3B5cmlnaHQgKGMpIDIwMTgtcHJlc2VudCwgUmVhY3QgVHJhaW5pbmcgTExDXG5cblBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG5cblRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuXG5USEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cbiovXG4vKiBlc2xpbnQtZGlzYWJsZSBwcmVmZXItY29uc3QgKi9cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHMtY29tbWVudCAqL1xuLypcbiAqIFdlbGNvbWUgdG8gQHJlYWNoL2F1dG8taWQhXG4gKiBMZXQncyBzZWUgaWYgd2UgY2FuIG1ha2Ugc2Vuc2Ugb2Ygd2h5IHRoaXMgaG9vayBleGlzdHMgYW5kIGl0c1xuICogaW1wbGVtZW50YXRpb24uXG4gKlxuICogU29tZSBiYWNrZ3JvdW5kOlxuICogICAxLiBBY2Nlc3NpYmlsaXR5IEFQSXMgcmVseSBoZWF2aWx5IG9uIGVsZW1lbnQgSURzXG4gKiAgIDIuIFJlcXVpcmluZyBkZXZlbG9wZXJzIHRvIHB1dCBJRHMgb24gZXZlcnkgZWxlbWVudCBpbiBSZWFjaCBVSSBpcyBib3RoXG4gKiAgICAgIGN1bWJlcnNvbWUgYW5kIGVycm9yLXByb25lXG4gKiAgIDMuIFdpdGggYSBjb21wb25lbnQgbW9kZWwsIHdlIGNhbiBnZW5lcmF0ZSBJRHMgZm9yIHRoZW0hXG4gKlxuICogU29sdXRpb24gMTogR2VuZXJhdGUgcmFuZG9tIElEcy5cbiAqXG4gKiBUaGlzIHdvcmtzIGdyZWF0IGFzIGxvbmcgYXMgeW91IGRvbid0IHNlcnZlciByZW5kZXIgeW91ciBhcHAuIFdoZW4gUmVhY3QgKGluXG4gKiB0aGUgY2xpZW50KSB0cmllcyB0byByZXVzZSB0aGUgbWFya3VwIGZyb20gdGhlIHNlcnZlciwgdGhlIElEcyB3b24ndCBtYXRjaFxuICogYW5kIFJlYWN0IHdpbGwgdGhlbiByZWNyZWF0ZSB0aGUgZW50aXJlIERPTSB0cmVlLlxuICpcbiAqIFNvbHV0aW9uIDI6IEluY3JlbWVudCBhbiBpbnRlZ2VyXG4gKlxuICogVGhpcyBzb3VuZHMgZ3JlYXQuIFNpbmNlIHdlJ3JlIHJlbmRlcmluZyB0aGUgZXhhY3Qgc2FtZSB0cmVlIG9uIHRoZSBzZXJ2ZXJcbiAqIGFuZCBjbGllbnQsIHdlIGNhbiBpbmNyZW1lbnQgYSBjb3VudGVyIGFuZCBnZXQgYSBkZXRlcm1pbmlzdGljIHJlc3VsdCBiZXR3ZWVuXG4gKiBjbGllbnQgYW5kIHNlcnZlci4gQWxzbywgSlMgaW50ZWdlcnMgY2FuIGdvIHVwIHRvIG5pbmUtcXVhZHJpbGxpb24uIEknbVxuICogcHJldHR5IHN1cmUgdGhlIHRhYiB3aWxsIGJlIGNsb3NlZCBiZWZvcmUgYW4gYXBwIG5ldmVyIG5lZWRzXG4gKiAxMCBxdWFkcmlsbGlvbiBJRHMhXG4gKlxuICogUHJvYmxlbSBzb2x2ZWQsIHJpZ2h0P1xuICpcbiAqIEFoLCBidXQgdGhlcmUncyBhIGNhdGNoISBSZWFjdCdzIGNvbmN1cnJlbnQgcmVuZGVyaW5nIG1ha2VzIHRoaXMgYXBwcm9hY2hcbiAqIG5vbi1kZXRlcm1pbmlzdGljLiBXaGlsZSB0aGUgY2xpZW50IGFuZCBzZXJ2ZXIgd2lsbCBlbmQgdXAgd2l0aCB0aGUgc2FtZVxuICogZWxlbWVudHMgaW4gdGhlIGVuZCwgZGVwZW5kaW5nIG9uIHN1c3BlbnNlIGJvdW5kYXJpZXMgKGFuZCBwb3NzaWJseSBzb21lIHVzZXJcbiAqIGlucHV0IGR1cmluZyB0aGUgaW5pdGlhbCByZW5kZXIpIHRoZSBpbmNyZW1lbnRpbmcgaW50ZWdlcnMgd29uJ3QgYWx3YXlzIG1hdGNoXG4gKiB1cC5cbiAqXG4gKiBTb2x1dGlvbiAzOiBEb24ndCB1c2UgSURzIGF0IGFsbCBvbiB0aGUgc2VydmVyOyBwYXRjaCBhZnRlciBmaXJzdCByZW5kZXIuXG4gKlxuICogV2hhdCB3ZSd2ZSBkb25lIGhlcmUgaXMgc29sdXRpb24gMiB3aXRoIHNvbWUgdHJpY2tzLiBXaXRoIHRoaXMgYXBwcm9hY2gsIHRoZVxuICogSUQgcmV0dXJuZWQgaXMgYW4gZW1wdHkgc3RyaW5nIG9uIHRoZSBmaXJzdCByZW5kZXIuIFRoaXMgd2F5IHRoZSBzZXJ2ZXIgYW5kXG4gKiBjbGllbnQgaGF2ZSB0aGUgc2FtZSBtYXJrdXAgbm8gbWF0dGVyIGhvdyB3aWxkIHRoZSBjb25jdXJyZW50IHJlbmRlcmluZyBtYXlcbiAqIGhhdmUgZ290dGVuLlxuICpcbiAqIEFmdGVyIHRoZSByZW5kZXIsIHdlIHBhdGNoIHVwIHRoZSBjb21wb25lbnRzIHdpdGggYW4gaW5jcmVtZW50ZWQgSUQuIFRoaXNcbiAqIGNhdXNlcyBhIGRvdWJsZSByZW5kZXIgb24gYW55IGNvbXBvbmVudHMgd2l0aCBgdXNlSWRgLiBTaG91bGRuJ3QgYmUgYSBwcm9ibGVtXG4gKiBzaW5jZSB0aGUgY29tcG9uZW50cyB1c2luZyB0aGlzIGhvb2sgc2hvdWxkIGJlIHNtYWxsLCBhbmQgd2UncmUgb25seSB1cGRhdGluZ1xuICogdGhlIElEIGF0dHJpYnV0ZSBvbiB0aGUgRE9NLCBub3RoaW5nIGJpZyBpcyBoYXBwZW5pbmcuXG4gKlxuICogSXQgZG9lc24ndCBoYXZlIHRvIGJlIGFuIGluY3JlbWVudGVkIG51bWJlciwgdGhvdWdoLS13ZSBjb3VsZCBkbyBnZW5lcmF0ZVxuICogcmFuZG9tIHN0cmluZ3MgaW5zdGVhZCwgYnV0IGluY3JlbWVudGluZyBhIG51bWJlciBpcyBwcm9iYWJseSB0aGUgY2hlYXBlc3RcbiAqIHRoaW5nIHdlIGNhbiBkby5cbiAqXG4gKiBBZGRpdGlvbmFsbHksIHdlIG9ubHkgZG8gdGhpcyBwYXRjaHVwIG9uIHRoZSB2ZXJ5IGZpcnN0IGNsaWVudCByZW5kZXIgZXZlci5cbiAqIEFueSBjYWxscyB0byBgdXNlSWRgIHRoYXQgaGFwcGVuIGR5bmFtaWNhbGx5IGluIHRoZSBjbGllbnQgd2lsbCBiZVxuICogcG9wdWxhdGVkIGltbWVkaWF0ZWx5IHdpdGggYSB2YWx1ZS4gU28sIHdlIG9ubHkgZ2V0IHRoZSBkb3VibGUgcmVuZGVyIGFmdGVyXG4gKiBzZXJ2ZXIgaHlkcmF0aW9uIGFuZCBuZXZlciBhZ2FpbiwgU08gQkFDSyBPRkYgQUxSSUdIVD9cbiAqL1xuZnVuY3Rpb24gY2FuVXNlRE9NKCkge1xuICAgIHJldHVybiAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgICB3aW5kb3cuZG9jdW1lbnQgJiZcbiAgICAgICAgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xufVxuLyoqXG4gKiBSZWFjdCBjdXJyZW50bHkgdGhyb3dzIGEgd2FybmluZyB3aGVuIHVzaW5nIHVzZUxheW91dEVmZmVjdCBvbiB0aGUgc2VydmVyLiBUb1xuICogZ2V0IGFyb3VuZCBpdCwgd2UgY2FuIGNvbmRpdGlvbmFsbHkgdXNlRWZmZWN0IG9uIHRoZSBzZXJ2ZXIgKG5vLW9wKSBhbmRcbiAqIHVzZUxheW91dEVmZmVjdCBpbiB0aGUgYnJvd3Nlci4gV2Ugb2NjYXNpb25hbGx5IG5lZWQgdXNlTGF5b3V0RWZmZWN0IHRvXG4gKiBlbnN1cmUgd2UgZG9uJ3QgZ2V0IGEgcmVuZGVyIGZsYXNoIGZvciBjZXJ0YWluIG9wZXJhdGlvbnMsIGJ1dCB3ZSBtYXkgYWxzb1xuICogbmVlZCBhZmZlY3RlZCBjb21wb25lbnRzIHRvIHJlbmRlciBvbiB0aGUgc2VydmVyLiBPbmUgZXhhbXBsZSBpcyB3aGVuIHNldHRpbmdcbiAqIGEgY29tcG9uZW50J3MgZGVzY2VuZGFudHMgdG8gcmV0cmlldmUgdGhlaXIgaW5kZXggdmFsdWVzLlxuICpcbiAqIEltcG9ydGFudCB0byBub3RlIHRoYXQgdXNpbmcgdGhpcyBob29rIGFzIGFuIGVzY2FwZSBoYXRjaCB3aWxsIGJyZWFrIHRoZVxuICogZXNsaW50IGRlcGVuZGVuY3kgd2FybmluZ3MgdW5sZXNzIHlvdSByZW5hbWUgdGhlIGltcG9ydCB0byBgdXNlTGF5b3V0RWZmZWN0YC5cbiAqIFVzZSBzcGFyaW5nbHkgb25seSB3aGVuIHRoZSBlZmZlY3Qgd29uJ3QgZWZmZWN0IHRoZSByZW5kZXJlZCBIVE1MIHRvIGF2b2lkXG4gKiBhbnkgc2VydmVyL2NsaWVudCBtaXNtYXRjaC5cbiAqXG4gKiBJZiBhIHVzZUxheW91dEVmZmVjdCBpcyBuZWVkZWQgYW5kIHRoZSByZXN1bHQgd291bGQgY3JlYXRlIGEgbWlzbWF0Y2gsIGl0J3NcbiAqIGxpa2VseSB0aGF0IHRoZSBjb21wb25lbnQgaW4gcXVlc3Rpb24gc2hvdWxkbid0IGJlIHJlbmRlcmVkIG9uIHRoZSBzZXJ2ZXIgYXRcbiAqIGFsbCwgc28gYSBiZXR0ZXIgYXBwcm9hY2ggd291bGQgYmUgdG8gbGF6aWx5IHJlbmRlciB0aG9zZSBpbiBhIHBhcmVudFxuICogY29tcG9uZW50IGFmdGVyIGNsaWVudC1zaWRlIGh5ZHJhdGlvbi5cbiAqXG4gKiBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9nYWVhcm9uL2U3ZDk3Y2RmMzhhMjkwNzkyNGVhMTJlNGViZGYzYzg1XG4gKiBodHRwczovL2dpdGh1Yi5jb20vcmVkdXhqcy9yZWFjdC1yZWR1eC9ibG9iL21hc3Rlci9zcmMvdXRpbHMvdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdC5qc1xuICpcbiAqIEBwYXJhbSBlZmZlY3RcbiAqIEBwYXJhbSBkZXBzXG4gKi9cbnZhciB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0ID0gY2FuVXNlRE9NKCkgPyB1c2VMYXlvdXRFZmZlY3QgOiB1c2VFZmZlY3Q7XG52YXIgc2VydmVySGFuZG9mZkNvbXBsZXRlID0gZmFsc2U7XG52YXIgaWQgPSAwO1xuZnVuY3Rpb24gZ2VuSWQoKSB7XG4gICAgcmV0dXJuIFwicmVhY3QtZGF5LXBpY2tlci1cIi5jb25jYXQoKytpZCk7XG59XG5mdW5jdGlvbiB1c2VJZChwcm92aWRlZElkKSB7XG4gICAgLy8gVE9ETzogUmVtb3ZlIGVycm9yIGZsYWcgd2hlbiB1cGRhdGluZyBpbnRlcm5hbCBkZXBzIHRvIFJlYWN0IDE4LiBOb25lIG9mXG4gICAgLy8gb3VyIHRyaWNrcyB3aWxsIHBsYXkgd2VsbCB3aXRoIGNvbmN1cnJlbnQgcmVuZGVyaW5nIGFueXdheS5cbiAgICB2YXIgX2E7XG4gICAgLy8gSWYgdGhpcyBpbnN0YW5jZSBpc24ndCBwYXJ0IG9mIHRoZSBpbml0aWFsIHJlbmRlciwgd2UgZG9uJ3QgaGF2ZSB0byBkbyB0aGVcbiAgICAvLyBkb3VibGUgcmVuZGVyL3BhdGNoLXVwIGRhbmNlLiBXZSBjYW4ganVzdCBnZW5lcmF0ZSB0aGUgSUQgYW5kIHJldHVybiBpdC5cbiAgICB2YXIgaW5pdGlhbElkID0gcHJvdmlkZWRJZCAhPT0gbnVsbCAmJiBwcm92aWRlZElkICE9PSB2b2lkIDAgPyBwcm92aWRlZElkIDogKHNlcnZlckhhbmRvZmZDb21wbGV0ZSA/IGdlbklkKCkgOiBudWxsKTtcbiAgICB2YXIgX2IgPSB1c2VTdGF0ZShpbml0aWFsSWQpLCBpZCA9IF9iWzBdLCBzZXRJZCA9IF9iWzFdO1xuICAgIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoaWQgPT09IG51bGwpIHtcbiAgICAgICAgICAgIC8vIFBhdGNoIHRoZSBJRCBhZnRlciByZW5kZXIuIFdlIGRvIHRoaXMgaW4gYHVzZUxheW91dEVmZmVjdGAgdG8gYXZvaWQgYW55XG4gICAgICAgICAgICAvLyByZW5kZXJpbmcgZmxpY2tlciwgdGhvdWdoIGl0J2xsIG1ha2UgdGhlIGZpcnN0IHJlbmRlciBzbG93ZXIgKHVubGlrZWx5XG4gICAgICAgICAgICAvLyB0byBtYXR0ZXIsIGJ1dCB5b3UncmUgd2VsY29tZSB0byBtZWFzdXJlIHlvdXIgYXBwIGFuZCBsZXQgdXMga25vdyBpZlxuICAgICAgICAgICAgLy8gaXQncyBhIHByb2JsZW0pLlxuICAgICAgICAgICAgc2V0SWQoZ2VuSWQoKSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xuICAgIH0sIFtdKTtcbiAgICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoc2VydmVySGFuZG9mZkNvbXBsZXRlID09PSBmYWxzZSkge1xuICAgICAgICAgICAgLy8gRmxhZyBhbGwgZnV0dXJlIHVzZXMgb2YgYHVzZUlkYCB0byBza2lwIHRoZSB1cGRhdGUgZGFuY2UuIFRoaXMgaXMgaW5cbiAgICAgICAgICAgIC8vIGB1c2VFZmZlY3RgIGJlY2F1c2UgaXQgZ29lcyBhZnRlciBgdXNlTGF5b3V0RWZmZWN0YCwgZW5zdXJpbmcgd2UgZG9uJ3RcbiAgICAgICAgICAgIC8vIGFjY2lkZW50YWxseSBiYWlsIG91dCBvZiB0aGUgcGF0Y2gtdXAgZGFuY2UgcHJlbWF0dXJlbHkuXG4gICAgICAgICAgICBzZXJ2ZXJIYW5kb2ZmQ29tcGxldGUgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfSwgW10pO1xuICAgIHJldHVybiAoX2EgPSBwcm92aWRlZElkICE9PSBudWxsICYmIHByb3ZpZGVkSWQgIT09IHZvaWQgMCA/IHByb3ZpZGVkSWQgOiBpZCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogdW5kZWZpbmVkO1xufVxuXG4vKiogUmVuZGVyIGEgbW9udGguICovXG5mdW5jdGlvbiBNb250aChwcm9wcykge1xuICAgIHZhciBfYTtcbiAgICB2YXIgX2I7XG4gICAgdmFyIGRheVBpY2tlciA9IHVzZURheVBpY2tlcigpO1xuICAgIHZhciBkaXIgPSBkYXlQaWNrZXIuZGlyLCBjbGFzc05hbWVzID0gZGF5UGlja2VyLmNsYXNzTmFtZXMsIHN0eWxlcyA9IGRheVBpY2tlci5zdHlsZXMsIGNvbXBvbmVudHMgPSBkYXlQaWNrZXIuY29tcG9uZW50cztcbiAgICB2YXIgZGlzcGxheU1vbnRocyA9IHVzZU5hdmlnYXRpb24oKS5kaXNwbGF5TW9udGhzO1xuICAgIHZhciBjYXB0aW9uSWQgPSB1c2VJZChkYXlQaWNrZXIuaWQgPyBcIlwiLmNvbmNhdChkYXlQaWNrZXIuaWQsIFwiLVwiKS5jb25jYXQocHJvcHMuZGlzcGxheUluZGV4KSA6IHVuZGVmaW5lZCk7XG4gICAgdmFyIHRhYmxlSWQgPSBkYXlQaWNrZXIuaWRcbiAgICAgICAgPyBcIlwiLmNvbmNhdChkYXlQaWNrZXIuaWQsIFwiLWdyaWQtXCIpLmNvbmNhdChwcm9wcy5kaXNwbGF5SW5kZXgpXG4gICAgICAgIDogdW5kZWZpbmVkO1xuICAgIHZhciBjbGFzc05hbWUgPSBbY2xhc3NOYW1lcy5tb250aF07XG4gICAgdmFyIHN0eWxlID0gc3R5bGVzLm1vbnRoO1xuICAgIHZhciBpc1N0YXJ0ID0gcHJvcHMuZGlzcGxheUluZGV4ID09PSAwO1xuICAgIHZhciBpc0VuZCA9IHByb3BzLmRpc3BsYXlJbmRleCA9PT0gZGlzcGxheU1vbnRocy5sZW5ndGggLSAxO1xuICAgIHZhciBpc0NlbnRlciA9ICFpc1N0YXJ0ICYmICFpc0VuZDtcbiAgICBpZiAoZGlyID09PSAncnRsJykge1xuICAgICAgICBfYSA9IFtpc1N0YXJ0LCBpc0VuZF0sIGlzRW5kID0gX2FbMF0sIGlzU3RhcnQgPSBfYVsxXTtcbiAgICB9XG4gICAgaWYgKGlzU3RhcnQpIHtcbiAgICAgICAgY2xhc3NOYW1lLnB1c2goY2xhc3NOYW1lcy5jYXB0aW9uX3N0YXJ0KTtcbiAgICAgICAgc3R5bGUgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgc3R5bGUpLCBzdHlsZXMuY2FwdGlvbl9zdGFydCk7XG4gICAgfVxuICAgIGlmIChpc0VuZCkge1xuICAgICAgICBjbGFzc05hbWUucHVzaChjbGFzc05hbWVzLmNhcHRpb25fZW5kKTtcbiAgICAgICAgc3R5bGUgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgc3R5bGUpLCBzdHlsZXMuY2FwdGlvbl9lbmQpO1xuICAgIH1cbiAgICBpZiAoaXNDZW50ZXIpIHtcbiAgICAgICAgY2xhc3NOYW1lLnB1c2goY2xhc3NOYW1lcy5jYXB0aW9uX2JldHdlZW4pO1xuICAgICAgICBzdHlsZSA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBzdHlsZSksIHN0eWxlcy5jYXB0aW9uX2JldHdlZW4pO1xuICAgIH1cbiAgICB2YXIgQ2FwdGlvbkNvbXBvbmVudCA9IChfYiA9IGNvbXBvbmVudHMgPT09IG51bGwgfHwgY29tcG9uZW50cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29tcG9uZW50cy5DYXB0aW9uKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBDYXB0aW9uO1xuICAgIHJldHVybiAoanN4UnVudGltZUV4cG9ydHMuanN4cyhcImRpdlwiLCB7IGNsYXNzTmFtZTogY2xhc3NOYW1lLmpvaW4oJyAnKSwgc3R5bGU6IHN0eWxlLCBjaGlsZHJlbjogW2pzeFJ1bnRpbWVFeHBvcnRzLmpzeChDYXB0aW9uQ29tcG9uZW50LCB7IGlkOiBjYXB0aW9uSWQsIGRpc3BsYXlNb250aDogcHJvcHMuZGlzcGxheU1vbnRoLCBkaXNwbGF5SW5kZXg6IHByb3BzLmRpc3BsYXlJbmRleCB9KSwganN4UnVudGltZUV4cG9ydHMuanN4KFRhYmxlLCB7IGlkOiB0YWJsZUlkLCBcImFyaWEtbGFiZWxsZWRieVwiOiBjYXB0aW9uSWQsIGRpc3BsYXlNb250aDogcHJvcHMuZGlzcGxheU1vbnRoIH0pXSB9LCBwcm9wcy5kaXNwbGF5SW5kZXgpKTtcbn1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIHdyYXBwZXIgZm9yIHRoZSBtb250aCBncmlkcy5cbiAqL1xuZnVuY3Rpb24gTW9udGhzKHByb3BzKSB7XG4gICAgdmFyIF9hID0gdXNlRGF5UGlja2VyKCksIGNsYXNzTmFtZXMgPSBfYS5jbGFzc05hbWVzLCBzdHlsZXMgPSBfYS5zdHlsZXM7XG4gICAgcmV0dXJuIChqc3hSdW50aW1lRXhwb3J0cy5qc3goXCJkaXZcIiwgeyBjbGFzc05hbWU6IGNsYXNzTmFtZXMubW9udGhzLCBzdHlsZTogc3R5bGVzLm1vbnRocywgY2hpbGRyZW46IHByb3BzLmNoaWxkcmVuIH0pKTtcbn1cblxuLyoqIFJlbmRlciB0aGUgY29udGFpbmVyIHdpdGggdGhlIG1vbnRocyBhY2NvcmRpbmcgdG8gdGhlIG51bWJlciBvZiBtb250aHMgdG8gZGlzcGxheS4gKi9cbmZ1bmN0aW9uIFJvb3QoX2EpIHtcbiAgICB2YXIgX2IsIF9jO1xuICAgIHZhciBpbml0aWFsUHJvcHMgPSBfYS5pbml0aWFsUHJvcHM7XG4gICAgdmFyIGRheVBpY2tlciA9IHVzZURheVBpY2tlcigpO1xuICAgIHZhciBmb2N1c0NvbnRleHQgPSB1c2VGb2N1c0NvbnRleHQoKTtcbiAgICB2YXIgbmF2aWdhdGlvbiA9IHVzZU5hdmlnYXRpb24oKTtcbiAgICB2YXIgX2QgPSB1c2VTdGF0ZShmYWxzZSksIGhhc0luaXRpYWxGb2N1cyA9IF9kWzBdLCBzZXRIYXNJbml0aWFsRm9jdXMgPSBfZFsxXTtcbiAgICAvLyBGb2N1cyB0aGUgZm9jdXMgdGFyZ2V0IHdoZW4gaW5pdGlhbEZvY3VzIGlzIHBhc3NlZCBpblxuICAgIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghZGF5UGlja2VyLmluaXRpYWxGb2N1cylcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgaWYgKCFmb2N1c0NvbnRleHQuZm9jdXNUYXJnZXQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGlmIChoYXNJbml0aWFsRm9jdXMpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGZvY3VzQ29udGV4dC5mb2N1cyhmb2N1c0NvbnRleHQuZm9jdXNUYXJnZXQpO1xuICAgICAgICBzZXRIYXNJbml0aWFsRm9jdXModHJ1ZSk7XG4gICAgfSwgW1xuICAgICAgICBkYXlQaWNrZXIuaW5pdGlhbEZvY3VzLFxuICAgICAgICBoYXNJbml0aWFsRm9jdXMsXG4gICAgICAgIGZvY3VzQ29udGV4dC5mb2N1cyxcbiAgICAgICAgZm9jdXNDb250ZXh0LmZvY3VzVGFyZ2V0LFxuICAgICAgICBmb2N1c0NvbnRleHRcbiAgICBdKTtcbiAgICAvLyBBcHBseSBjbGFzc25hbWVzIGFjY29yZGluZyB0byBwcm9wc1xuICAgIHZhciBjbGFzc05hbWVzID0gW2RheVBpY2tlci5jbGFzc05hbWVzLnJvb3QsIGRheVBpY2tlci5jbGFzc05hbWVdO1xuICAgIGlmIChkYXlQaWNrZXIubnVtYmVyT2ZNb250aHMgPiAxKSB7XG4gICAgICAgIGNsYXNzTmFtZXMucHVzaChkYXlQaWNrZXIuY2xhc3NOYW1lcy5tdWx0aXBsZV9tb250aHMpO1xuICAgIH1cbiAgICBpZiAoZGF5UGlja2VyLnNob3dXZWVrTnVtYmVyKSB7XG4gICAgICAgIGNsYXNzTmFtZXMucHVzaChkYXlQaWNrZXIuY2xhc3NOYW1lcy53aXRoX3dlZWtudW1iZXIpO1xuICAgIH1cbiAgICB2YXIgc3R5bGUgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgZGF5UGlja2VyLnN0eWxlcy5yb290KSwgZGF5UGlja2VyLnN0eWxlKTtcbiAgICB2YXIgZGF0YUF0dHJpYnV0ZXMgPSBPYmplY3Qua2V5cyhpbml0aWFsUHJvcHMpXG4gICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGtleSkgeyByZXR1cm4ga2V5LnN0YXJ0c1dpdGgoJ2RhdGEtJyk7IH0pXG4gICAgICAgIC5yZWR1Y2UoZnVuY3Rpb24gKGF0dHJzLCBrZXkpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICByZXR1cm4gX19hc3NpZ24oX19hc3NpZ24oe30sIGF0dHJzKSwgKF9hID0ge30sIF9hW2tleV0gPSBpbml0aWFsUHJvcHNba2V5XSwgX2EpKTtcbiAgICB9LCB7fSk7XG4gICAgdmFyIE1vbnRoc0NvbXBvbmVudCA9IChfYyA9IChfYiA9IGluaXRpYWxQcm9wcy5jb21wb25lbnRzKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuTW9udGhzKSAhPT0gbnVsbCAmJiBfYyAhPT0gdm9pZCAwID8gX2MgOiBNb250aHM7XG4gICAgcmV0dXJuIChqc3hSdW50aW1lRXhwb3J0cy5qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IGNsYXNzTmFtZXMuam9pbignICcpLCBzdHlsZTogc3R5bGUsIGRpcjogZGF5UGlja2VyLmRpciwgaWQ6IGRheVBpY2tlci5pZCwgbm9uY2U6IGluaXRpYWxQcm9wcy5ub25jZSwgdGl0bGU6IGluaXRpYWxQcm9wcy50aXRsZSwgbGFuZzogaW5pdGlhbFByb3BzLmxhbmcgfSwgZGF0YUF0dHJpYnV0ZXMsIHsgY2hpbGRyZW46IGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChNb250aHNDb21wb25lbnQsIHsgY2hpbGRyZW46IG5hdmlnYXRpb24uZGlzcGxheU1vbnRocy5tYXAoZnVuY3Rpb24gKG1vbnRoLCBpKSB7IHJldHVybiAoanN4UnVudGltZUV4cG9ydHMuanN4KE1vbnRoLCB7IGRpc3BsYXlJbmRleDogaSwgZGlzcGxheU1vbnRoOiBtb250aCB9LCBpKSk7IH0pIH0pIH0pKSk7XG59XG5cbi8qKiBQcm92aWRlIHRoZSB2YWx1ZSBmb3IgYWxsIHRoZSBjb250ZXh0IHByb3ZpZGVycy4gKi9cbmZ1bmN0aW9uIFJvb3RQcm92aWRlcihwcm9wcykge1xuICAgIHZhciBjaGlsZHJlbiA9IHByb3BzLmNoaWxkcmVuLCBpbml0aWFsUHJvcHMgPSBfX3Jlc3QocHJvcHMsIFtcImNoaWxkcmVuXCJdKTtcbiAgICByZXR1cm4gKGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChEYXlQaWNrZXJQcm92aWRlciwgeyBpbml0aWFsUHJvcHM6IGluaXRpYWxQcm9wcywgY2hpbGRyZW46IGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChOYXZpZ2F0aW9uUHJvdmlkZXIsIHsgY2hpbGRyZW46IGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChTZWxlY3RTaW5nbGVQcm92aWRlciwgeyBpbml0aWFsUHJvcHM6IGluaXRpYWxQcm9wcywgY2hpbGRyZW46IGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChTZWxlY3RNdWx0aXBsZVByb3ZpZGVyLCB7IGluaXRpYWxQcm9wczogaW5pdGlhbFByb3BzLCBjaGlsZHJlbjoganN4UnVudGltZUV4cG9ydHMuanN4KFNlbGVjdFJhbmdlUHJvdmlkZXIsIHsgaW5pdGlhbFByb3BzOiBpbml0aWFsUHJvcHMsIGNoaWxkcmVuOiBqc3hSdW50aW1lRXhwb3J0cy5qc3goTW9kaWZpZXJzUHJvdmlkZXIsIHsgY2hpbGRyZW46IGpzeFJ1bnRpbWVFeHBvcnRzLmpzeChGb2N1c1Byb3ZpZGVyLCB7IGNoaWxkcmVuOiBjaGlsZHJlbiB9KSB9KSB9KSB9KSB9KSB9KSB9KSk7XG59XG5cbi8qKlxuICogRGF5UGlja2VyIHJlbmRlciBhIGRhdGUgcGlja2VyIGNvbXBvbmVudCB0byBsZXQgdXNlcnMgcGljayBkYXRlcyBmcm9tIGFcbiAqIGNhbGVuZGFyLiBTZWUgaHR0cDovL3JlYWN0LWRheS1waWNrZXIuanMub3JnIGZvciB1cGRhdGVkIGRvY3VtZW50YXRpb24gYW5kXG4gKiBleGFtcGxlcy5cbiAqXG4gKiAjIyMgQ3VzdG9taXphdGlvblxuICpcbiAqIERheVBpY2tlciBvZmZlcnMgZGlmZmVyZW50IGN1c3RvbWl6YXRpb24gcHJvcHMuIEZvciBleGFtcGxlLFxuICpcbiAqIC0gc2hvdyBtdWx0aXBsZSBtb250aHMgdXNpbmcgYG51bWJlck9mTW9udGhzYFxuICogLSBkaXNwbGF5IGEgZHJvcGRvd24gdG8gbmF2aWdhdGUgdGhlIG1vbnRocyB2aWEgYGNhcHRpb25MYXlvdXRgXG4gKiAtIGRpc3BsYXkgdGhlIHdlZWsgbnVtYmVycyB3aXRoIGBzaG93V2Vla051bWJlcnNgXG4gKiAtIGRpc2FibGUgb3IgaGlkZSBkYXlzIHdpdGggYGRpc2FibGVkYCBvciBgaGlkZGVuYFxuICpcbiAqICMjIyBDb250cm9sbGluZyB0aGUgbW9udGhzXG4gKlxuICogQ2hhbmdlIHRoZSBpbml0aWFsbHkgZGlzcGxheWVkIG1vbnRoIHVzaW5nIHRoZSBgZGVmYXVsdE1vbnRoYCBwcm9wLiBUaGVcbiAqIGRpc3BsYXllZCBtb250aHMgYXJlIGNvbnRyb2xsZWQgYnkgRGF5UGlja2VyIGFuZCBzdG9yZWQgaW4gaXRzIGludGVybmFsXG4gKiBzdGF0ZS4gVG8gY29udHJvbCB0aGUgbW9udGhzIHlvdXJzZWxmLCB1c2UgYG1vbnRoYCBpbnN0ZWFkIG9mIGBkZWZhdWx0TW9udGhgXG4gKiBhbmQgdXNlIHRoZSBgb25Nb250aENoYW5nZWAgZXZlbnQgdG8gc2V0IGl0LlxuICpcbiAqIFRvIGxpbWl0IHRoZSBtb250aHMgdGhlIHVzZXIgY2FuIG5hdmlnYXRlIHRvLCB1c2VcbiAqIGBmcm9tRGF0ZWAvYGZyb21Nb250aGAvYGZyb21ZZWFyYCBvciBgdG9EYXRlYC9gdG9Nb250aGAvYHRvWWVhcmAuXG4gKlxuICogIyMjIFNlbGVjdGlvbiBtb2Rlc1xuICpcbiAqIERheVBpY2tlciBzdXBwb3J0cyBkaWZmZXJlbnQgc2VsZWN0aW9uIG1vZGUgdGhhdCBjYW4gYmUgdG9nZ2xlZCB1c2luZyB0aGVcbiAqIGBtb2RlYCBwcm9wOlxuICpcbiAqIC0gYG1vZGU9XCJzaW5nbGVcImA6IG9ubHkgb25lIGRheSBjYW4gYmUgc2VsZWN0ZWQuIFVzZSBgcmVxdWlyZWRgIHRvIG1ha2UgdGhlXG4gKiAgIHNlbGVjdGlvbiByZXF1aXJlZC4gVXNlIHRoZSBgb25TZWxlY3RgIGV2ZW50IGhhbmRsZXIgdG8gZ2V0IHRoZSBzZWxlY3RlZFxuICogICBkYXlzLlxuICogLSBgbW9kZT1cIm11bHRpcGxlXCJgOiB1c2VycyBjYW4gc2VsZWN0IG9uZSBvciBtb3JlIGRheXMuIExpbWl0IHRoZSBhbW91bnQgb2ZcbiAqICAgZGF5cyB0aGF0IGNhbiBiZSBzZWxlY3RlZCB3aXRoIHRoZSBgbWluYCBvciB0aGUgYG1heGAgcHJvcHMuXG4gKiAtIGBtb2RlPVwicmFuZ2VcImA6IHVzZXJzIGNhbiBzZWxlY3QgYSByYW5nZSBvZiBkYXlzLiBMaW1pdCB0aGUgYW1vdW50IG9mIGRheXNcbiAqICAgaW4gdGhlIHJhbmdlIHdpdGggdGhlIGBtaW5gIG9yIHRoZSBgbWF4YCBwcm9wcy5cbiAqIC0gYG1vZGU9XCJkZWZhdWx0XCJgIChkZWZhdWx0KTogdGhlIGJ1aWx0LWluIHNlbGVjdGlvbnMgYXJlIGRpc2FibGVkLiBJbXBsZW1lbnRcbiAqICAgeW91ciBvd24gc2VsZWN0aW9uIG1vZGUgd2l0aCBgb25EYXlDbGlja2AuXG4gKlxuICogVGhlIHNlbGVjdGlvbiBtb2RlcyBzaG91bGQgY292ZXIgdGhlIG1vc3QgY29tbW9uIHVzZSBjYXNlcy4gSW4gY2FzZSB5b3VcbiAqIG5lZWQgYSBtb3JlIHJlZmluZWQgd2F5IG9mIHNlbGVjdGluZyBkYXlzLCB1c2UgYG1vZGU9XCJkZWZhdWx0XCJgLiBVc2UgdGhlXG4gKiBgc2VsZWN0ZWRgIHByb3BzIGFuZCBhZGQgdGhlIGRheSBldmVudCBoYW5kbGVycyB0byBhZGQvcmVtb3ZlIGRheXMgZnJvbSB0aGVcbiAqIHNlbGVjdGlvbi5cbiAqXG4gKiAjIyMgTW9kaWZpZXJzXG4gKlxuICogQSBfbW9kaWZpZXJfIHJlcHJlc2VudHMgZGlmZmVyZW50IHN0eWxlcyBvciBzdGF0ZXMgZm9yIHRoZSBkYXlzIGRpc3BsYXllZCBpblxuICogdGhlIGNhbGVuZGFyIChsaWtlIFwic2VsZWN0ZWRcIiBvciBcImRpc2FibGVkXCIpLiBEZWZpbmUgY3VzdG9tIG1vZGlmaWVycyB1c2luZ1xuICogdGhlIGBtb2RpZmllcnNgIHByb3AuXG4gKlxuICogIyMjIEZvcm1hdHRlcnMgYW5kIGN1c3RvbSBjb21wb25lbnRcbiAqXG4gKiBZb3UgY2FuIGN1c3RvbWl6ZSBob3cgdGhlIGNvbnRlbnQgaXMgZGlzcGxheWVkIGluIHRoZSBkYXRlIHBpY2tlciBieSB1c2luZ1xuICogZWl0aGVyIHRoZSBmb3JtYXR0ZXJzIG9yIHJlcGxhY2luZyB0aGUgaW50ZXJuYWwgY29tcG9uZW50cy5cbiAqXG4gKiBGb3IgdGhlIG1vc3QgY29tbW9uIGNhc2VzIHlvdSB3YW50IHRvIHVzZSB0aGUgYGZvcm1hdHRlcnNgIHByb3AgdG8gY2hhbmdlIGhvd1xuICogdGhlIGNvbnRlbnQgaXMgZm9ybWF0dGVkIGluIHRoZSBjYWxlbmRhci4gVXNlIHRoZSBgY29tcG9uZW50c2AgcHJvcCB0b1xuICogcmVwbGFjZSB0aGUgaW50ZXJuYWwgY29tcG9uZW50cywgbGlrZSB0aGUgbmF2aWdhdGlvbiBpY29ucy5cbiAqXG4gKiAjIyMgU3R5bGluZ1xuICpcbiAqIERheVBpY2tlciBjb21lcyB3aXRoIGEgZGVmYXVsdCwgYmFzaWMgc3R5bGUgaW4gYHJlYWN0LWRheS1waWNrZXIvc3R5bGVgIOKAkyB1c2VcbiAqIGl0IGFzIHRlbXBsYXRlIGZvciB5b3VyIG93biBzdHlsZS5cbiAqXG4gKiBJZiB5b3UgYXJlIHVzaW5nIENTUyBtb2R1bGVzLCBwYXNzIHRoZSBpbXBvcnRlZCBzdHlsZXMgb2JqZWN0IHRoZVxuICogYGNsYXNzTmFtZXNgIHByb3BzLlxuICpcbiAqIFlvdSBjYW4gYWxzbyBzdHlsZSB0aGUgZWxlbWVudHMgdmlhIGlubGluZSBzdHlsZXMgdXNpbmcgdGhlIGBzdHlsZXNgIHByb3AuXG4gKlxuICogIyMjIEZvcm0gZmllbGRzXG4gKlxuICogSWYgeW91IG5lZWQgdG8gYmluZCB0aGUgZGF0ZSBwaWNrZXIgdG8gYSBmb3JtIGZpZWxkLCB5b3UgY2FuIHVzZSB0aGVcbiAqIGB1c2VJbnB1dGAgaG9va3MgZm9yIGEgYmFzaWMgYmVoYXZpb3IuIFNlZSB0aGUgYHVzZUlucHV0YCBzb3VyY2UgYXMgYW5cbiAqIGV4YW1wbGUgdG8gYmluZCB0aGUgZGF0ZSBwaWNrZXIgd2l0aCBmb3JtIGZpZWxkcy5cbiAqXG4gKiAjIyMgTG9jYWxpemF0aW9uXG4gKlxuICogVG8gbG9jYWxpemUgRGF5UGlja2VyLCBpbXBvcnQgdGhlIGxvY2FsZSBmcm9tIGBkYXRlLWZuc2AgcGFja2FnZSBhbmQgdXNlIHRoZVxuICogYGxvY2FsZWAgcHJvcC5cbiAqXG4gKiBGb3IgZXhhbXBsZSwgdG8gdXNlIFNwYW5pc2ggbG9jYWxlOlxuICpcbiAqIGBgYFxuICogaW1wb3J0IHsgZXMgfSBmcm9tICdkYXRlLWZucy9sb2NhbGUnO1xuICogPERheVBpY2tlciBsb2NhbGU9e2VzfSAvPlxuICogYGBgXG4gKi9cbmZ1bmN0aW9uIERheVBpY2tlcihwcm9wcykge1xuICAgIHJldHVybiAoanN4UnVudGltZUV4cG9ydHMuanN4KFJvb3RQcm92aWRlciwgX19hc3NpZ24oe30sIHByb3BzLCB7IGNoaWxkcmVuOiBqc3hSdW50aW1lRXhwb3J0cy5qc3goUm9vdCwgeyBpbml0aWFsUHJvcHM6IHByb3BzIH0pIH0pKSk7XG59XG5cbi8qKiBAcHJpdmF0ZSAqL1xuZnVuY3Rpb24gaXNWYWxpZERhdGUoZGF5KSB7XG4gICAgcmV0dXJuICFpc05hTihkYXkuZ2V0VGltZSgpKTtcbn1cblxuLyoqIFJldHVybiBwcm9wcyBhbmQgc2V0dGVycyBmb3IgYmluZGluZyBhbiBpbnB1dCBmaWVsZCB0byBEYXlQaWNrZXIuICovXG5mdW5jdGlvbiB1c2VJbnB1dChvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cbiAgICB2YXIgX2EgPSBvcHRpb25zLmxvY2FsZSwgbG9jYWxlID0gX2EgPT09IHZvaWQgMCA/IGVuVVMgOiBfYSwgcmVxdWlyZWQgPSBvcHRpb25zLnJlcXVpcmVkLCBfYiA9IG9wdGlvbnMuZm9ybWF0LCBmb3JtYXQkMSA9IF9iID09PSB2b2lkIDAgPyAnUFAnIDogX2IsIGRlZmF1bHRTZWxlY3RlZCA9IG9wdGlvbnMuZGVmYXVsdFNlbGVjdGVkLCBfYyA9IG9wdGlvbnMudG9kYXksIHRvZGF5ID0gX2MgPT09IHZvaWQgMCA/IG5ldyBEYXRlKCkgOiBfYztcbiAgICB2YXIgX2QgPSBwYXJzZUZyb21Ub1Byb3BzKG9wdGlvbnMpLCBmcm9tRGF0ZSA9IF9kLmZyb21EYXRlLCB0b0RhdGUgPSBfZC50b0RhdGU7XG4gICAgLy8gU2hvcnRjdXQgdG8gdGhlIERhdGVGbnMgZnVuY3Rpb25zXG4gICAgdmFyIHBhcnNlVmFsdWUgPSBmdW5jdGlvbiAodmFsdWUpIHsgcmV0dXJuIHBhcnNlKHZhbHVlLCBmb3JtYXQkMSwgdG9kYXksIHsgbG9jYWxlOiBsb2NhbGUgfSk7IH07XG4gICAgLy8gSW5pdGlhbGl6ZSBzdGF0ZXNcbiAgICB2YXIgX2UgPSB1c2VTdGF0ZShkZWZhdWx0U2VsZWN0ZWQgIT09IG51bGwgJiYgZGVmYXVsdFNlbGVjdGVkICE9PSB2b2lkIDAgPyBkZWZhdWx0U2VsZWN0ZWQgOiB0b2RheSksIG1vbnRoID0gX2VbMF0sIHNldE1vbnRoID0gX2VbMV07XG4gICAgdmFyIF9mID0gdXNlU3RhdGUoZGVmYXVsdFNlbGVjdGVkKSwgc2VsZWN0ZWREYXkgPSBfZlswXSwgc2V0U2VsZWN0ZWREYXkgPSBfZlsxXTtcbiAgICB2YXIgZGVmYXVsdElucHV0VmFsdWUgPSBkZWZhdWx0U2VsZWN0ZWRcbiAgICAgICAgPyBmb3JtYXQoZGVmYXVsdFNlbGVjdGVkLCBmb3JtYXQkMSwgeyBsb2NhbGU6IGxvY2FsZSB9KVxuICAgICAgICA6ICcnO1xuICAgIHZhciBfZyA9IHVzZVN0YXRlKGRlZmF1bHRJbnB1dFZhbHVlKSwgaW5wdXRWYWx1ZSA9IF9nWzBdLCBzZXRJbnB1dFZhbHVlID0gX2dbMV07XG4gICAgdmFyIHJlc2V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBzZXRTZWxlY3RlZERheShkZWZhdWx0U2VsZWN0ZWQpO1xuICAgICAgICBzZXRNb250aChkZWZhdWx0U2VsZWN0ZWQgIT09IG51bGwgJiYgZGVmYXVsdFNlbGVjdGVkICE9PSB2b2lkIDAgPyBkZWZhdWx0U2VsZWN0ZWQgOiB0b2RheSk7XG4gICAgICAgIHNldElucHV0VmFsdWUoZGVmYXVsdElucHV0VmFsdWUgIT09IG51bGwgJiYgZGVmYXVsdElucHV0VmFsdWUgIT09IHZvaWQgMCA/IGRlZmF1bHRJbnB1dFZhbHVlIDogJycpO1xuICAgIH07XG4gICAgdmFyIHNldFNlbGVjdGVkID0gZnVuY3Rpb24gKGRhdGUpIHtcbiAgICAgICAgc2V0U2VsZWN0ZWREYXkoZGF0ZSk7XG4gICAgICAgIHNldE1vbnRoKGRhdGUgIT09IG51bGwgJiYgZGF0ZSAhPT0gdm9pZCAwID8gZGF0ZSA6IHRvZGF5KTtcbiAgICAgICAgc2V0SW5wdXRWYWx1ZShkYXRlID8gZm9ybWF0KGRhdGUsIGZvcm1hdCQxLCB7IGxvY2FsZTogbG9jYWxlIH0pIDogJycpO1xuICAgIH07XG4gICAgdmFyIGhhbmRsZURheUNsaWNrID0gZnVuY3Rpb24gKGRheSwgX2EpIHtcbiAgICAgICAgdmFyIHNlbGVjdGVkID0gX2Euc2VsZWN0ZWQ7XG4gICAgICAgIGlmICghcmVxdWlyZWQgJiYgc2VsZWN0ZWQpIHtcbiAgICAgICAgICAgIHNldFNlbGVjdGVkRGF5KHVuZGVmaW5lZCk7XG4gICAgICAgICAgICBzZXRJbnB1dFZhbHVlKCcnKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBzZXRTZWxlY3RlZERheShkYXkpO1xuICAgICAgICBzZXRJbnB1dFZhbHVlKGRheSA/IGZvcm1hdChkYXksIGZvcm1hdCQxLCB7IGxvY2FsZTogbG9jYWxlIH0pIDogJycpO1xuICAgIH07XG4gICAgdmFyIGhhbmRsZU1vbnRoQ2hhbmdlID0gZnVuY3Rpb24gKG1vbnRoKSB7XG4gICAgICAgIHNldE1vbnRoKG1vbnRoKTtcbiAgICB9O1xuICAgIC8vIFdoZW4gY2hhbmdpbmcgdGhlIGlucHV0IGZpZWxkLCBzYXZlIGl0cyB2YWx1ZSBpbiBzdGF0ZSBhbmQgY2hlY2sgaWYgdGhlXG4gICAgLy8gc3RyaW5nIGlzIGEgdmFsaWQgZGF0ZS4gSWYgaXQgaXMgYSB2YWxpZCBkYXksIHNldCBpdCBhcyBzZWxlY3RlZCBhbmQgdXBkYXRlXG4gICAgLy8gdGhlIGNhbGVuZGFy4oCZcyBtb250aC5cbiAgICB2YXIgaGFuZGxlQ2hhbmdlID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgc2V0SW5wdXRWYWx1ZShlLnRhcmdldC52YWx1ZSk7XG4gICAgICAgIHZhciBkYXkgPSBwYXJzZVZhbHVlKGUudGFyZ2V0LnZhbHVlKTtcbiAgICAgICAgdmFyIGlzQmVmb3JlID0gZnJvbURhdGUgJiYgZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzKGZyb21EYXRlLCBkYXkpID4gMDtcbiAgICAgICAgdmFyIGlzQWZ0ZXIgPSB0b0RhdGUgJiYgZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzKGRheSwgdG9EYXRlKSA+IDA7XG4gICAgICAgIGlmICghaXNWYWxpZERhdGUoZGF5KSB8fCBpc0JlZm9yZSB8fCBpc0FmdGVyKSB7XG4gICAgICAgICAgICBzZXRTZWxlY3RlZERheSh1bmRlZmluZWQpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHNldFNlbGVjdGVkRGF5KGRheSk7XG4gICAgICAgIHNldE1vbnRoKGRheSk7XG4gICAgfTtcbiAgICAvLyBTcGVjaWFsIGNhc2UgZm9yIF9yZXF1aXJlZF8gZmllbGRzOiBvbiBibHVyLCBpZiB0aGUgdmFsdWUgb2YgdGhlIGlucHV0IGlzIG5vdFxuICAgIC8vIGEgdmFsaWQgZGF0ZSwgcmVzZXQgdGhlIGNhbGVuZGFyIGFuZCB0aGUgaW5wdXQgdmFsdWUuXG4gICAgdmFyIGhhbmRsZUJsdXIgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICB2YXIgZGF5ID0gcGFyc2VWYWx1ZShlLnRhcmdldC52YWx1ZSk7XG4gICAgICAgIGlmICghaXNWYWxpZERhdGUoZGF5KSkge1xuICAgICAgICAgICAgcmVzZXQoKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgLy8gV2hlbiBmb2N1c2luZywgbWFrZSBzdXJlIERheVBpY2tlciB2aXN1YWxpemVzIHRoZSBtb250aCBvZiB0aGUgZGF0ZSBpbiB0aGVcbiAgICAvLyBpbnB1dCBmaWVsZC5cbiAgICB2YXIgaGFuZGxlRm9jdXMgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICBpZiAoIWUudGFyZ2V0LnZhbHVlKSB7XG4gICAgICAgICAgICByZXNldCgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBkYXkgPSBwYXJzZVZhbHVlKGUudGFyZ2V0LnZhbHVlKTtcbiAgICAgICAgaWYgKGlzVmFsaWREYXRlKGRheSkpIHtcbiAgICAgICAgICAgIHNldE1vbnRoKGRheSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHZhciBkYXlQaWNrZXJQcm9wcyA9IHtcbiAgICAgICAgbW9udGg6IG1vbnRoLFxuICAgICAgICBvbkRheUNsaWNrOiBoYW5kbGVEYXlDbGljayxcbiAgICAgICAgb25Nb250aENoYW5nZTogaGFuZGxlTW9udGhDaGFuZ2UsXG4gICAgICAgIHNlbGVjdGVkOiBzZWxlY3RlZERheSxcbiAgICAgICAgbG9jYWxlOiBsb2NhbGUsXG4gICAgICAgIGZyb21EYXRlOiBmcm9tRGF0ZSxcbiAgICAgICAgdG9EYXRlOiB0b0RhdGUsXG4gICAgICAgIHRvZGF5OiB0b2RheVxuICAgIH07XG4gICAgdmFyIGlucHV0UHJvcHMgPSB7XG4gICAgICAgIG9uQmx1cjogaGFuZGxlQmx1cixcbiAgICAgICAgb25DaGFuZ2U6IGhhbmRsZUNoYW5nZSxcbiAgICAgICAgb25Gb2N1czogaGFuZGxlRm9jdXMsXG4gICAgICAgIHZhbHVlOiBpbnB1dFZhbHVlLFxuICAgICAgICBwbGFjZWhvbGRlcjogZm9ybWF0KG5ldyBEYXRlKCksIGZvcm1hdCQxLCB7IGxvY2FsZTogbG9jYWxlIH0pXG4gICAgfTtcbiAgICByZXR1cm4geyBkYXlQaWNrZXJQcm9wczogZGF5UGlja2VyUHJvcHMsIGlucHV0UHJvcHM6IGlucHV0UHJvcHMsIHJlc2V0OiByZXNldCwgc2V0U2VsZWN0ZWQ6IHNldFNlbGVjdGVkIH07XG59XG5cbi8qKiBSZXR1cm5zIHRydWUgd2hlbiB0aGUgcHJvcHMgYXJlIG9mIHR5cGUge0BsaW5rIERheVBpY2tlckRlZmF1bHRQcm9wc30uICovXG5mdW5jdGlvbiBpc0RheVBpY2tlckRlZmF1bHQocHJvcHMpIHtcbiAgICByZXR1cm4gcHJvcHMubW9kZSA9PT0gdW5kZWZpbmVkIHx8IHByb3BzLm1vZGUgPT09ICdkZWZhdWx0Jztcbn1cblxuZXhwb3J0IHsgQnV0dG9uLCBDYXB0aW9uLCBDYXB0aW9uRHJvcGRvd25zLCBDYXB0aW9uTGFiZWwsIENhcHRpb25OYXZpZ2F0aW9uLCBEYXksIERheUNvbnRlbnQsIERheVBpY2tlciwgRGF5UGlja2VyQ29udGV4dCwgRGF5UGlja2VyUHJvdmlkZXIsIERyb3Bkb3duLCBGb2N1c0NvbnRleHQsIEZvY3VzUHJvdmlkZXIsIEZvb3RlciwgSGVhZCwgSGVhZFJvdywgSWNvbkRyb3Bkb3duLCBJY29uTGVmdCwgSWNvblJpZ2h0LCBJbnRlcm5hbE1vZGlmaWVyLCBNb250aHMsIE5hdmlnYXRpb25Db250ZXh0LCBOYXZpZ2F0aW9uUHJvdmlkZXIsIFJvb3RQcm92aWRlciwgUm93LCBTZWxlY3RNdWx0aXBsZUNvbnRleHQsIFNlbGVjdE11bHRpcGxlUHJvdmlkZXIsIFNlbGVjdE11bHRpcGxlUHJvdmlkZXJJbnRlcm5hbCwgU2VsZWN0UmFuZ2VDb250ZXh0LCBTZWxlY3RSYW5nZVByb3ZpZGVyLCBTZWxlY3RSYW5nZVByb3ZpZGVySW50ZXJuYWwsIFNlbGVjdFNpbmdsZUNvbnRleHQsIFNlbGVjdFNpbmdsZVByb3ZpZGVyLCBTZWxlY3RTaW5nbGVQcm92aWRlckludGVybmFsLCBXZWVrTnVtYmVyLCBhZGRUb1JhbmdlLCBpc0RhdGVBZnRlclR5cGUsIGlzRGF0ZUJlZm9yZVR5cGUsIGlzRGF0ZUludGVydmFsLCBpc0RhdGVSYW5nZSwgaXNEYXlPZldlZWtUeXBlLCBpc0RheVBpY2tlckRlZmF1bHQsIGlzRGF5UGlja2VyTXVsdGlwbGUsIGlzRGF5UGlja2VyUmFuZ2UsIGlzRGF5UGlja2VyU2luZ2xlLCBpc01hdGNoLCB1c2VBY3RpdmVNb2RpZmllcnMsIHVzZURheVBpY2tlciwgdXNlRGF5UmVuZGVyLCB1c2VGb2N1c0NvbnRleHQsIHVzZUlucHV0LCB1c2VOYXZpZ2F0aW9uLCB1c2VTZWxlY3RNdWx0aXBsZSwgdXNlU2VsZWN0UmFuZ2UsIHVzZVNlbGVjdFNpbmdsZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguZXNtLmpzLm1hcFxuIl0sIm5hbWVzIjpbInJlcXVpcmUkJDAiLCJjcmVhdGVDb250ZXh0IiwidXNlQ29udGV4dCIsInVzZVN0YXRlIiwiZm9yd2FyZFJlZiIsInVzZUVmZmVjdCIsInVzZVJlZiIsInVzZUxheW91dEVmZmVjdCIsImZvcm1hdCIsInN0YXJ0T2ZNb250aCIsImVuZE9mTW9udGgiLCJzdGFydE9mRGF5IiwiaXNTYW1lWWVhciIsInNldE1vbnRoIiwic2V0WWVhciIsInN0YXJ0T2ZZZWFyIiwiZGlmZmVyZW5jZUluQ2FsZW5kYXJNb250aHMiLCJhZGRNb250aHMiLCJpc1NhbWVNb250aCIsImlzQmVmb3JlIiwic3RhcnRPZklTT1dlZWsiLCJzdGFydE9mV2VlayIsImFkZERheXMiLCJpc1NhbWVEYXkiLCJpc0FmdGVyIiwic3ViRGF5cyIsImRpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cyIsImlzRGF0ZSIsIm1heCIsIm1pbiIsImFkZFdlZWtzIiwiYWRkWWVhcnMiLCJlbmRPZklTT1dlZWsiLCJlbmRPZldlZWsiLCJnZXRVbml4VGltZSIsImdldElTT1dlZWsiLCJnZXRXZWVrIiwiZ2V0V2Vla3NJbk1vbnRoIiwicGFyc2UiLCJlblVTIiwiX19hc3NpZ24iLCJPYmplY3QiLCJhc3NpZ24iLCJ0IiwicyIsImkiLCJuIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImFwcGx5IiwiX19yZXN0IiwiZSIsImluZGV4T2YiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIl9fc3ByZWFkQXJyYXkiLCJ0byIsImZyb20iLCJwYWNrIiwibCIsImFyIiwiQXJyYXkiLCJzbGljZSIsImNvbmNhdCIsIlN1cHByZXNzZWRFcnJvciIsImVycm9yIiwic3VwcHJlc3NlZCIsIm1lc3NhZ2UiLCJFcnJvciIsIm5hbWUiLCJqc3hSdW50aW1lIiwiZXhwb3J0cyIsInJlYWN0SnN4UnVudGltZV9kZXZlbG9wbWVudCIsImhhc1JlcXVpcmVkUmVhY3RKc3hSdW50aW1lX2RldmVsb3BtZW50IiwicmVxdWlyZVJlYWN0SnN4UnVudGltZV9kZXZlbG9wbWVudCIsInByb2Nlc3MiLCJSZWFjdCIsIlJFQUNUX0VMRU1FTlRfVFlQRSIsIlN5bWJvbCIsImZvciIsIlJFQUNUX1BPUlRBTF9UWVBFIiwiUkVBQ1RfRlJBR01FTlRfVFlQRSIsIlJFQUNUX1NUUklDVF9NT0RFX1RZUEUiLCJSRUFDVF9QUk9GSUxFUl9UWVBFIiwiUkVBQ1RfUFJPVklERVJfVFlQRSIsIlJFQUNUX0NPTlRFWFRfVFlQRSIsIlJFQUNUX0ZPUldBUkRfUkVGX1RZUEUiLCJSRUFDVF9TVVNQRU5TRV9UWVBFIiwiUkVBQ1RfU1VTUEVOU0VfTElTVF9UWVBFIiwiUkVBQ1RfTUVNT19UWVBFIiwiUkVBQ1RfTEFaWV9UWVBFIiwiUkVBQ1RfT0ZGU0NSRUVOX1RZUEUiLCJNQVlCRV9JVEVSQVRPUl9TWU1CT0wiLCJpdGVyYXRvciIsIkZBVVhfSVRFUkFUT1JfU1lNQk9MIiwiZ2V0SXRlcmF0b3JGbiIsIm1heWJlSXRlcmFibGUiLCJtYXliZUl0ZXJhdG9yIiwiUmVhY3RTaGFyZWRJbnRlcm5hbHMiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsIl9sZW4yIiwiYXJncyIsIl9rZXkyIiwicHJpbnRXYXJuaW5nIiwibGV2ZWwiLCJSZWFjdERlYnVnQ3VycmVudEZyYW1lIiwic3RhY2siLCJnZXRTdGFja0FkZGVuZHVtIiwiYXJnc1dpdGhGb3JtYXQiLCJtYXAiLCJpdGVtIiwiU3RyaW5nIiwidW5zaGlmdCIsIkZ1bmN0aW9uIiwiY29uc29sZSIsImVuYWJsZVNjb3BlQVBJIiwiZW5hYmxlQ2FjaGVFbGVtZW50IiwiZW5hYmxlVHJhbnNpdGlvblRyYWNpbmciLCJlbmFibGVMZWdhY3lIaWRkZW4iLCJlbmFibGVEZWJ1Z1RyYWNpbmciLCJSRUFDVF9NT0RVTEVfUkVGRVJFTkNFIiwiaXNWYWxpZEVsZW1lbnRUeXBlIiwidHlwZSIsIiQkdHlwZW9mIiwiZ2V0TW9kdWxlSWQiLCJ1bmRlZmluZWQiLCJnZXRXcmFwcGVkTmFtZSIsIm91dGVyVHlwZSIsImlubmVyVHlwZSIsIndyYXBwZXJOYW1lIiwiZGlzcGxheU5hbWUiLCJmdW5jdGlvbk5hbWUiLCJnZXRDb250ZXh0TmFtZSIsImdldENvbXBvbmVudE5hbWVGcm9tVHlwZSIsInRhZyIsImNvbnRleHQiLCJwcm92aWRlciIsIl9jb250ZXh0IiwicmVuZGVyIiwib3V0ZXJOYW1lIiwibGF6eUNvbXBvbmVudCIsInBheWxvYWQiLCJfcGF5bG9hZCIsImluaXQiLCJfaW5pdCIsIngiLCJkaXNhYmxlZERlcHRoIiwicHJldkxvZyIsInByZXZJbmZvIiwicHJldldhcm4iLCJwcmV2RXJyb3IiLCJwcmV2R3JvdXAiLCJwcmV2R3JvdXBDb2xsYXBzZWQiLCJwcmV2R3JvdXBFbmQiLCJkaXNhYmxlZExvZyIsIl9fcmVhY3REaXNhYmxlZExvZyIsImRpc2FibGVMb2dzIiwibG9nIiwiaW5mbyIsIndhcm4iLCJncm91cCIsImdyb3VwQ29sbGFwc2VkIiwiZ3JvdXBFbmQiLCJwcm9wcyIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJ2YWx1ZSIsIndyaXRhYmxlIiwiZGVmaW5lUHJvcGVydGllcyIsInJlZW5hYmxlTG9ncyIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJwcmVmaXgiLCJkZXNjcmliZUJ1aWx0SW5Db21wb25lbnRGcmFtZSIsInNvdXJjZSIsIm93bmVyRm4iLCJtYXRjaCIsInRyaW0iLCJyZWVudHJ5IiwiY29tcG9uZW50RnJhbWVDYWNoZSIsIlBvc3NpYmx5V2Vha01hcCIsIldlYWtNYXAiLCJNYXAiLCJkZXNjcmliZU5hdGl2ZUNvbXBvbmVudEZyYW1lIiwiZm4iLCJjb25zdHJ1Y3QiLCJmcmFtZSIsImdldCIsImNvbnRyb2wiLCJwcmV2aW91c1ByZXBhcmVTdGFja1RyYWNlIiwicHJlcGFyZVN0YWNrVHJhY2UiLCJwcmV2aW91c0Rpc3BhdGNoZXIiLCJjdXJyZW50IiwiRmFrZSIsImRlZmluZVByb3BlcnR5Iiwic2V0IiwiUmVmbGVjdCIsInNhbXBsZSIsInNhbXBsZUxpbmVzIiwic3BsaXQiLCJjb250cm9sTGluZXMiLCJjIiwiX2ZyYW1lIiwicmVwbGFjZSIsImluY2x1ZGVzIiwic3ludGhldGljRnJhbWUiLCJkZXNjcmliZUZ1bmN0aW9uQ29tcG9uZW50RnJhbWUiLCJzaG91bGRDb25zdHJ1Y3QiLCJDb21wb25lbnQiLCJpc1JlYWN0Q29tcG9uZW50IiwiZGVzY3JpYmVVbmtub3duRWxlbWVudFR5cGVGcmFtZUluREVWIiwibG9nZ2VkVHlwZUZhaWx1cmVzIiwic2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQiLCJlbGVtZW50Iiwib3duZXIiLCJfb3duZXIiLCJfc291cmNlIiwic2V0RXh0cmFTdGFja0ZyYW1lIiwiY2hlY2tQcm9wVHlwZXMiLCJ0eXBlU3BlY3MiLCJ2YWx1ZXMiLCJsb2NhdGlvbiIsImNvbXBvbmVudE5hbWUiLCJoYXMiLCJiaW5kIiwidHlwZVNwZWNOYW1lIiwiZXJyb3IkMSIsImVyciIsImV4IiwiaXNBcnJheUltcGwiLCJpc0FycmF5IiwiYSIsInR5cGVOYW1lIiwiaGFzVG9TdHJpbmdUYWciLCJ0b1N0cmluZ1RhZyIsImNvbnN0cnVjdG9yIiwid2lsbENvZXJjaW9uVGhyb3ciLCJ0ZXN0U3RyaW5nQ29lcmNpb24iLCJjaGVja0tleVN0cmluZ0NvZXJjaW9uIiwiUmVhY3RDdXJyZW50T3duZXIiLCJSRVNFUlZFRF9QUk9QUyIsImtleSIsInJlZiIsIl9fc2VsZiIsIl9fc291cmNlIiwic3BlY2lhbFByb3BLZXlXYXJuaW5nU2hvd24iLCJzcGVjaWFsUHJvcFJlZldhcm5pbmdTaG93biIsImRpZFdhcm5BYm91dFN0cmluZ1JlZnMiLCJoYXNWYWxpZFJlZiIsImNvbmZpZyIsImdldHRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImlzUmVhY3RXYXJuaW5nIiwiaGFzVmFsaWRLZXkiLCJ3YXJuSWZTdHJpbmdSZWZDYW5ub3RCZUF1dG9Db252ZXJ0ZWQiLCJzZWxmIiwic3RhdGVOb2RlIiwiZGVmaW5lS2V5UHJvcFdhcm5pbmdHZXR0ZXIiLCJ3YXJuQWJvdXRBY2Nlc3NpbmdLZXkiLCJkZWZpbmVSZWZQcm9wV2FybmluZ0dldHRlciIsIndhcm5BYm91dEFjY2Vzc2luZ1JlZiIsIlJlYWN0RWxlbWVudCIsIl9zdG9yZSIsImZyZWV6ZSIsImpzeERFViIsIm1heWJlS2V5IiwicHJvcE5hbWUiLCJkZWZhdWx0UHJvcHMiLCJSZWFjdEN1cnJlbnRPd25lciQxIiwiUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZSQxIiwic2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQkMSIsInByb3BUeXBlc01pc3NwZWxsV2FybmluZ1Nob3duIiwiaXNWYWxpZEVsZW1lbnQiLCJvYmplY3QiLCJnZXREZWNsYXJhdGlvbkVycm9yQWRkZW5kdW0iLCJnZXRTb3VyY2VJbmZvRXJyb3JBZGRlbmR1bSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsIm93bmVySGFzS2V5VXNlV2FybmluZyIsImdldEN1cnJlbnRDb21wb25lbnRFcnJvckluZm8iLCJwYXJlbnRUeXBlIiwicGFyZW50TmFtZSIsInZhbGlkYXRlRXhwbGljaXRLZXkiLCJ2YWxpZGF0ZWQiLCJjdXJyZW50Q29tcG9uZW50RXJyb3JJbmZvIiwiY2hpbGRPd25lciIsInZhbGlkYXRlQ2hpbGRLZXlzIiwibm9kZSIsImNoaWxkIiwiaXRlcmF0b3JGbiIsImVudHJpZXMiLCJzdGVwIiwibmV4dCIsImRvbmUiLCJ2YWxpZGF0ZVByb3BUeXBlcyIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsIl9uYW1lIiwiZ2V0RGVmYXVsdFByb3BzIiwiaXNSZWFjdENsYXNzQXBwcm92ZWQiLCJ2YWxpZGF0ZUZyYWdtZW50UHJvcHMiLCJmcmFnbWVudCIsImtleXMiLCJqc3hXaXRoVmFsaWRhdGlvbiIsImlzU3RhdGljQ2hpbGRyZW4iLCJ2YWxpZFR5cGUiLCJzb3VyY2VJbmZvIiwidHlwZVN0cmluZyIsImNoaWxkcmVuIiwianN4V2l0aFZhbGlkYXRpb25TdGF0aWMiLCJqc3hXaXRoVmFsaWRhdGlvbkR5bmFtaWMiLCJqc3giLCJqc3hzIiwiRnJhZ21lbnQiLCJyZWFjdEpzeFJ1bnRpbWVfcHJvZHVjdGlvbl9taW4iLCJoYXNSZXF1aXJlZFJlYWN0SnN4UnVudGltZV9wcm9kdWN0aW9uX21pbiIsInJlcXVpcmVSZWFjdEpzeFJ1bnRpbWVfcHJvZHVjdGlvbl9taW4iLCJmIiwiayIsIm0iLCJxIiwiZyIsImIiLCJkIiwiaCIsImpzeFJ1bnRpbWVFeHBvcnRzIiwiaXNEYXlQaWNrZXJNdWx0aXBsZSIsIm1vZGUiLCJpc0RheVBpY2tlclJhbmdlIiwiaXNEYXlQaWNrZXJTaW5nbGUiLCJkZWZhdWx0Q2xhc3NOYW1lcyIsInJvb3QiLCJtdWx0aXBsZV9tb250aHMiLCJ3aXRoX3dlZWtudW1iZXIiLCJ2aGlkZGVuIiwiYnV0dG9uX3Jlc2V0IiwiYnV0dG9uIiwiY2FwdGlvbiIsImNhcHRpb25fc3RhcnQiLCJjYXB0aW9uX2VuZCIsImNhcHRpb25fYmV0d2VlbiIsImNhcHRpb25fbGFiZWwiLCJjYXB0aW9uX2Ryb3Bkb3ducyIsImRyb3Bkb3duIiwiZHJvcGRvd25fbW9udGgiLCJkcm9wZG93bl95ZWFyIiwiZHJvcGRvd25faWNvbiIsIm1vbnRocyIsIm1vbnRoIiwidGFibGUiLCJ0Ym9keSIsInRmb290IiwiaGVhZCIsImhlYWRfcm93IiwiaGVhZF9jZWxsIiwibmF2IiwibmF2X2J1dHRvbiIsIm5hdl9idXR0b25fcHJldmlvdXMiLCJuYXZfYnV0dG9uX25leHQiLCJuYXZfaWNvbiIsInJvdyIsIndlZWtudW1iZXIiLCJjZWxsIiwiZGF5IiwiZGF5X3RvZGF5IiwiZGF5X291dHNpZGUiLCJkYXlfc2VsZWN0ZWQiLCJkYXlfZGlzYWJsZWQiLCJkYXlfaGlkZGVuIiwiZGF5X3JhbmdlX3N0YXJ0IiwiZGF5X3JhbmdlX2VuZCIsImRheV9yYW5nZV9taWRkbGUiLCJmb3JtYXRDYXB0aW9uIiwib3B0aW9ucyIsImZvcm1hdERheSIsImZvcm1hdE1vbnRoQ2FwdGlvbiIsImZvcm1hdFdlZWtOdW1iZXIiLCJ3ZWVrTnVtYmVyIiwiZm9ybWF0V2Vla2RheU5hbWUiLCJ3ZWVrZGF5IiwiZm9ybWF0WWVhckNhcHRpb24iLCJ5ZWFyIiwiZm9ybWF0dGVycyIsIl9fcHJvdG9fXyIsImxhYmVsRGF5IiwiYWN0aXZlTW9kaWZpZXJzIiwibGFiZWxNb250aERyb3Bkb3duIiwibGFiZWxOZXh0IiwibGFiZWxQcmV2aW91cyIsImxhYmVsV2Vla2RheSIsImxhYmVsV2Vla051bWJlciIsImxhYmVsWWVhckRyb3Bkb3duIiwibGFiZWxzIiwiZ2V0RGVmYXVsdENvbnRleHRWYWx1ZXMiLCJjYXB0aW9uTGF5b3V0IiwiY2xhc3NOYW1lcyIsImxvY2FsZSIsIm1vZGlmaWVyc0NsYXNzTmFtZXMiLCJtb2RpZmllcnMiLCJudW1iZXJPZk1vbnRocyIsInN0eWxlcyIsInRvZGF5IiwiRGF0ZSIsInBhcnNlRnJvbVRvUHJvcHMiLCJmcm9tWWVhciIsInRvWWVhciIsImZyb21Nb250aCIsInRvTW9udGgiLCJmcm9tRGF0ZSIsInRvRGF0ZSIsIkRheVBpY2tlckNvbnRleHQiLCJEYXlQaWNrZXJQcm92aWRlciIsIl9hIiwiaW5pdGlhbFByb3BzIiwiZGVmYXVsdENvbnRleHRWYWx1ZXMiLCJfYiIsIm9uU2VsZWN0IiwiY29tcG9uZW50cyIsIlByb3ZpZGVyIiwidXNlRGF5UGlja2VyIiwiQ2FwdGlvbkxhYmVsIiwiY2xhc3NOYW1lIiwic3R5bGUiLCJyb2xlIiwiaWQiLCJkaXNwbGF5TW9udGgiLCJJY29uRHJvcGRvd24iLCJ3aWR0aCIsImhlaWdodCIsInZpZXdCb3giLCJmaWxsIiwiZmlsbFJ1bGUiLCJEcm9wZG93biIsIm9uQ2hhbmdlIiwiZGF5UGlja2VyIiwiSWNvbkRyb3Bkb3duQ29tcG9uZW50IiwiTW9udGhzRHJvcGRvd24iLCJkcm9wZG93bk1vbnRocyIsImRhdGUiLCJnZXRNb250aCIsInB1c2giLCJoYW5kbGVDaGFuZ2UiLCJzZWxlY3RlZE1vbnRoIiwiTnVtYmVyIiwidGFyZ2V0IiwibmV3TW9udGgiLCJEcm9wZG93bkNvbXBvbmVudCIsIlllYXJzRHJvcGRvd24iLCJ5ZWFycyIsImdldEZ1bGxZZWFyIiwidXNlQ29udHJvbGxlZFZhbHVlIiwiZGVmYXVsdFZhbHVlIiwiY29udHJvbGxlZFZhbHVlIiwidW5jb250cm9sbGVkVmFsdWUiLCJzZXRWYWx1ZSIsImdldEluaXRpYWxNb250aCIsImRlZmF1bHRNb250aCIsImluaXRpYWxNb250aCIsIm9mZnNldCIsInVzZU5hdmlnYXRpb25TdGF0ZSIsImdvVG9Nb250aCIsImRpc2FibGVOYXZpZ2F0aW9uIiwib25Nb250aENoYW5nZSIsImdldERpc3BsYXlNb250aHMiLCJyZXZlcnNlTW9udGhzIiwic3RhcnQiLCJlbmQiLCJtb250aHNEaWZmIiwibmV4dE1vbnRoIiwicmV2ZXJzZSIsImdldE5leHRNb250aCIsInN0YXJ0aW5nTW9udGgiLCJwYWdlZE5hdmlnYXRpb24iLCJnZXRQcmV2aW91c01vbnRoIiwiTmF2aWdhdGlvbkNvbnRleHQiLCJOYXZpZ2F0aW9uUHJvdmlkZXIiLCJjdXJyZW50TW9udGgiLCJkaXNwbGF5TW9udGhzIiwicHJldmlvdXNNb250aCIsImlzRGF0ZURpc3BsYXllZCIsInNvbWUiLCJnb1RvRGF0ZSIsInJlZkRhdGUiLCJ1c2VOYXZpZ2F0aW9uIiwiQ2FwdGlvbkRyb3Bkb3ducyIsImhhbmRsZU1vbnRoQ2hhbmdlIiwiZGlzcGxheUluZGV4IiwiQ2FwdGlvbkxhYmVsQ29tcG9uZW50IiwiY2FwdGlvbkxhYmVsIiwiSWNvbkxlZnQiLCJJY29uUmlnaHQiLCJCdXR0b24iLCJjbGFzc05hbWVzQXJyIiwiam9pbiIsIk5hdmlnYXRpb24iLCJfYyIsImRpciIsIl9kIiwicHJldmlvdXNMYWJlbCIsInByZXZpb3VzQ2xhc3NOYW1lIiwibmV4dExhYmVsIiwibmV4dENsYXNzTmFtZSIsIkljb25SaWdodENvbXBvbmVudCIsIkljb25MZWZ0Q29tcG9uZW50IiwiaGlkZVByZXZpb3VzIiwiZGlzYWJsZWQiLCJvbkNsaWNrIiwib25QcmV2aW91c0NsaWNrIiwiaGlkZU5leHQiLCJvbk5leHRDbGljayIsIkNhcHRpb25OYXZpZ2F0aW9uIiwiZmluZEluZGV4IiwiaXNGaXJzdCIsImlzTGFzdCIsImhhbmRsZVByZXZpb3VzQ2xpY2siLCJoYW5kbGVOZXh0Q2xpY2siLCJDYXB0aW9uIiwiRm9vdGVyIiwiZm9vdGVyIiwiY29sU3BhbiIsImdldFdlZWtkYXlzIiwid2Vla1N0YXJ0c09uIiwiSVNPV2VlayIsImRheXMiLCJIZWFkUm93Iiwic2hvd1dlZWtOdW1iZXIiLCJ3ZWVrZGF5cyIsInNjb3BlIiwiSGVhZCIsIkhlYWRSb3dDb21wb25lbnQiLCJEYXlDb250ZW50IiwiU2VsZWN0TXVsdGlwbGVDb250ZXh0IiwiU2VsZWN0TXVsdGlwbGVQcm92aWRlciIsImVtcHR5Q29udGV4dFZhbHVlIiwic2VsZWN0ZWQiLCJTZWxlY3RNdWx0aXBsZVByb3ZpZGVySW50ZXJuYWwiLCJvbkRheUNsaWNrIiwiaXNNaW5TZWxlY3RlZCIsIkJvb2xlYW4iLCJpc01heFNlbGVjdGVkIiwic2VsZWN0ZWREYXlzIiwiaW5kZXgiLCJzZWxlY3RlZERheSIsInNwbGljZSIsImlzU2VsZWN0ZWQiLCJjb250ZXh0VmFsdWUiLCJ1c2VTZWxlY3RNdWx0aXBsZSIsImFkZFRvUmFuZ2UiLCJyYW5nZSIsIlNlbGVjdFJhbmdlQ29udGV4dCIsIlNlbGVjdFJhbmdlUHJvdmlkZXIiLCJyYW5nZV9zdGFydCIsInJhbmdlX2VuZCIsInJhbmdlX21pZGRsZSIsIlNlbGVjdFJhbmdlUHJvdmlkZXJJbnRlcm5hbCIsInNlbGVjdGVkRnJvbSIsInNlbGVjdGVkVG8iLCJuZXdSYW5nZSIsImFmdGVyIiwiYmVmb3JlIiwic2VsZWN0ZWRDb3VudCIsInVzZVNlbGVjdFJhbmdlIiwibWF0Y2hlclRvQXJyYXkiLCJtYXRjaGVyIiwiZ2V0Q3VzdG9tTW9kaWZpZXJzIiwiZGF5TW9kaWZpZXJzIiwiY3VzdG9tTW9kaWZpZXJzIiwiZm9yRWFjaCIsIm1vZGlmaWVyIiwiSW50ZXJuYWxNb2RpZmllciIsIlNlbGVjdGVkIiwiRGlzYWJsZWQiLCJIaWRkZW4iLCJUb2RheSIsIlJhbmdlRW5kIiwiUmFuZ2VNaWRkbGUiLCJSYW5nZVN0YXJ0IiwiT3V0c2lkZSIsImdldEludGVybmFsTW9kaWZpZXJzIiwic2VsZWN0TXVsdGlwbGUiLCJzZWxlY3RSYW5nZSIsImludGVybmFsTW9kaWZpZXJzIiwiaGlkZGVuIiwiTW9kaWZpZXJzQ29udGV4dCIsIk1vZGlmaWVyc1Byb3ZpZGVyIiwidXNlTW9kaWZpZXJzIiwiaXNEYXRlSW50ZXJ2YWwiLCJpc0RhdGVSYW5nZSIsImlzRGF0ZUFmdGVyVHlwZSIsImlzRGF0ZUJlZm9yZVR5cGUiLCJpc0RheU9mV2Vla1R5cGUiLCJpc0RhdGVJblJhbmdlIiwiaXNSYW5nZUludmVydGVkIiwiaXNJblJhbmdlIiwiaXNEYXRlVHlwZSIsImlzQXJyYXlPZkRhdGVzIiwiZXZlcnkiLCJpc01hdGNoIiwibWF0Y2hlcnMiLCJkYXlPZldlZWsiLCJnZXREYXkiLCJkaWZmQmVmb3JlIiwiZGlmZkFmdGVyIiwiaXNEYXlCZWZvcmUiLCJpc0RheUFmdGVyIiwiaXNDbG9zZWRJbnRlcnZhbCIsImdldEFjdGl2ZU1vZGlmaWVycyIsIm1hdGNoZWRNb2RpZmllcnMiLCJyZWR1Y2UiLCJyZXN1bHQiLCJvdXRzaWRlIiwiZ2V0SW5pdGlhbEZvY3VzVGFyZ2V0IiwiZmlyc3REYXlJbk1vbnRoIiwibGFzdERheUluTW9udGgiLCJmaXJzdEZvY3VzYWJsZURheSIsImlzRm9jdXNhYmxlIiwiTUFYX1JFVFJZIiwiZ2V0TmV4dEZvY3VzIiwiZm9jdXNlZERheSIsIm1vdmVCeSIsImRpcmVjdGlvbiIsInJldHJ5IiwiY291bnQiLCJsYXN0Rm9jdXNlZCIsIm1vdmVGbnMiLCJ3ZWVrIiwibmV3Rm9jdXNlZERheSIsIkZvY3VzQ29udGV4dCIsIkZvY3VzUHJvdmlkZXIiLCJuYXZpZ2F0aW9uIiwic2V0Rm9jdXNlZERheSIsInNldExhc3RGb2N1c2VkIiwiaW5pdGlhbEZvY3VzVGFyZ2V0IiwiZm9jdXNUYXJnZXQiLCJibHVyIiwiZm9jdXMiLCJtb3ZlRm9jdXMiLCJuZXh0Rm9jdXNlZCIsImZvY3VzRGF5QWZ0ZXIiLCJmb2N1c0RheUJlZm9yZSIsImZvY3VzV2Vla0FmdGVyIiwiZm9jdXNXZWVrQmVmb3JlIiwiZm9jdXNNb250aEJlZm9yZSIsImZvY3VzTW9udGhBZnRlciIsImZvY3VzWWVhckJlZm9yZSIsImZvY3VzWWVhckFmdGVyIiwiZm9jdXNTdGFydE9mV2VlayIsImZvY3VzRW5kT2ZXZWVrIiwidXNlRm9jdXNDb250ZXh0IiwidXNlQWN0aXZlTW9kaWZpZXJzIiwiU2VsZWN0U2luZ2xlQ29udGV4dCIsIlNlbGVjdFNpbmdsZVByb3ZpZGVyIiwiU2VsZWN0U2luZ2xlUHJvdmlkZXJJbnRlcm5hbCIsInJlcXVpcmVkIiwidXNlU2VsZWN0U2luZ2xlIiwidXNlRGF5RXZlbnRIYW5kbGVycyIsInNpbmdsZSIsIm11bHRpcGxlIiwib25Gb2N1cyIsIm9uRGF5Rm9jdXMiLCJvbkJsdXIiLCJvbkRheUJsdXIiLCJvbk1vdXNlRW50ZXIiLCJvbkRheU1vdXNlRW50ZXIiLCJvbk1vdXNlTGVhdmUiLCJvbkRheU1vdXNlTGVhdmUiLCJvblBvaW50ZXJFbnRlciIsIm9uRGF5UG9pbnRlckVudGVyIiwib25Qb2ludGVyTGVhdmUiLCJvbkRheVBvaW50ZXJMZWF2ZSIsIm9uVG91Y2hDYW5jZWwiLCJvbkRheVRvdWNoQ2FuY2VsIiwib25Ub3VjaEVuZCIsIm9uRGF5VG91Y2hFbmQiLCJvblRvdWNoTW92ZSIsIm9uRGF5VG91Y2hNb3ZlIiwib25Ub3VjaFN0YXJ0Iiwib25EYXlUb3VjaFN0YXJ0Iiwib25LZXlVcCIsIm9uRGF5S2V5VXAiLCJvbktleURvd24iLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsInNoaWZ0S2V5Iiwib25EYXlLZXlEb3duIiwiZXZlbnRIYW5kbGVycyIsInVzZVNlbGVjdGVkRGF5cyIsImlzSW50ZXJuYWxNb2RpZmllciIsImdldERheUNsYXNzTmFtZXMiLCJjdXN0b21DbGFzc05hbWUiLCJpbnRlcm5hbENsYXNzTmFtZSIsImdldERheVN0eWxlIiwibW9kaWZpZXJzU3R5bGVzIiwidXNlRGF5UmVuZGVyIiwiYnV0dG9uUmVmIiwiZm9jdXNDb250ZXh0IiwiaXNCdXR0b24iLCJpc0hpZGRlbiIsInNob3dPdXRzaWRlRGF5cyIsIkRheUNvbnRlbnRDb21wb25lbnQiLCJkaXZQcm9wcyIsImlzRm9jdXNUYXJnZXQiLCJpc0ZvY3VzZWQiLCJidXR0b25Qcm9wcyIsInRhYkluZGV4IiwiZGF5UmVuZGVyIiwiRGF5IiwiV2Vla051bWJlciIsIm51bWJlciIsImRhdGVzIiwib25XZWVrTnVtYmVyQ2xpY2siLCJjb250ZW50IiwibGFiZWwiLCJoYW5kbGVDbGljayIsIlJvdyIsIkRheUNvbXBvbmVudCIsIldlZWtudW1iZXJDb21wb25lbnQiLCJ3ZWVrTnVtYmVyQ2VsbCIsImRheXNUb01vbnRoV2Vla3MiLCJ0b1dlZWsiLCJmcm9tV2VlayIsIm5PZkRheXMiLCJ3ZWVrc0luTW9udGgiLCJleGlzdGluZ1dlZWsiLCJmaW5kIiwiZ2V0TW9udGhXZWVrcyIsInVzZUZpeGVkV2Vla3MiLCJuck9mTW9udGhXZWVrcyIsImxhc3RXZWVrIiwibGFzdERhdGUiLCJleHRyYVdlZWtzIiwiVGFibGUiLCJoaWRlSGVhZCIsImZpeGVkV2Vla3MiLCJmaXJzdFdlZWtDb250YWluc0RhdGUiLCJ3ZWVrcyIsIkhlYWRDb21wb25lbnQiLCJSb3dDb21wb25lbnQiLCJGb290ZXJDb21wb25lbnQiLCJjYW5Vc2VET00iLCJ3aW5kb3ciLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJ1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0Iiwic2VydmVySGFuZG9mZkNvbXBsZXRlIiwiZ2VuSWQiLCJ1c2VJZCIsInByb3ZpZGVkSWQiLCJpbml0aWFsSWQiLCJzZXRJZCIsIk1vbnRoIiwiY2FwdGlvbklkIiwidGFibGVJZCIsImlzU3RhcnQiLCJpc0VuZCIsImlzQ2VudGVyIiwiQ2FwdGlvbkNvbXBvbmVudCIsIk1vbnRocyIsIlJvb3QiLCJoYXNJbml0aWFsRm9jdXMiLCJzZXRIYXNJbml0aWFsRm9jdXMiLCJpbml0aWFsRm9jdXMiLCJkYXRhQXR0cmlidXRlcyIsImZpbHRlciIsInN0YXJ0c1dpdGgiLCJhdHRycyIsIk1vbnRoc0NvbXBvbmVudCIsIm5vbmNlIiwidGl0bGUiLCJsYW5nIiwiUm9vdFByb3ZpZGVyIiwiRGF5UGlja2VyIiwiaXNWYWxpZERhdGUiLCJpc05hTiIsImdldFRpbWUiLCJ1c2VJbnB1dCIsImZvcm1hdCQxIiwiZGVmYXVsdFNlbGVjdGVkIiwicGFyc2VWYWx1ZSIsIl9lIiwiX2YiLCJzZXRTZWxlY3RlZERheSIsImRlZmF1bHRJbnB1dFZhbHVlIiwiX2ciLCJpbnB1dFZhbHVlIiwic2V0SW5wdXRWYWx1ZSIsInJlc2V0Iiwic2V0U2VsZWN0ZWQiLCJoYW5kbGVEYXlDbGljayIsImhhbmRsZUJsdXIiLCJoYW5kbGVGb2N1cyIsImRheVBpY2tlclByb3BzIiwiaW5wdXRQcm9wcyIsInBsYWNlaG9sZGVyIiwiaXNEYXlQaWNrZXJEZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-day-picker/dist/index.esm.js\n");

/***/ })

};
;